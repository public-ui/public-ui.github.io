{"version":3,"names":["defaultStyleCss","KolInputPassword","render","ariaDescribedBy","getRenderStates","this","state","showExpertSlot","_label","showDefaultSlot","h","Host","class","_hasValue","_hideLabel","password","_currentLength","_disabled","_error","_hasCounter","_hint","_icon","_id","_maxLength","_readOnly","_required","_smartButton","_touched","onClick","_a","ref","focus","slot","name","Object","assign","catchRef","title","accessKey","_accessKey","length","join","undefined","autoCapitalize","autoComplete","_autoComplete","autoCorrect","disabled","id","maxlength","_name","pattern","_pattern","placeholder","_placeholder","readOnly","required","size","_size","spellcheck","type","value","_value","controller","onFacade","onKeyUp","constructor","hostRef","propagateFocus","host","event","setState","target","code","propagateSubmitEventToForm","form","onChange","nonce","InputPasswordController","validateAccessKey","validateAlert","validateAutoComplete","devHint","validateDisabled","validateError","validateHasCounter","validateHideLabel","validateHint","validateIcon","validateId","validateLabel","validateMaxLength","validateName","validateOn","validatePattern","validatePlaceholder","validateReadOnly","validateRequired","validateSize","validateSmartButton","validateSyncValueBySelector","validateTabIndex","validateTouched","validateValue","componentWillLoad","_alert","addValueChangeListener","v"],"sources":["src/components/input-password/style.css?tag=kol-input-password&mode=default&encapsulation=shadow","src/components/input-password/component.tsx"],"sourcesContent":["@import url(../input-line.css);\n","import { Component, Element, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { ButtonProps } from '../../types/button-link';\r\nimport { Stringified } from '../../types/common';\r\nimport { KoliBriHorizontalIcon } from '../../types/icon';\r\nimport { InputTypeOnDefault, InputTypeOnOff } from '../../types/input/types';\r\nimport { LabelWithExpertSlotPropType } from '../../types/props/label';\r\nimport { devHint } from '../../utils/a11y.tipps';\r\nimport { nonce } from '../../utils/dev.utils';\r\nimport { setState } from '../../utils/prop.validators';\r\nimport { propagateFocus } from '../../utils/reuse';\r\nimport { propagateSubmitEventToForm } from '../form/controller';\r\nimport { getRenderStates } from '../input/controller';\r\nimport { InputPasswordController } from './controller';\r\nimport { ComponentApi, States } from './types';\r\n\r\n/**\r\n * @slot - Die Beschriftung des Eingabefeldes.\r\n */\r\n@Component({\r\n\ttag: 'kol-input-password',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolInputPassword implements ComponentApi {\r\n\t@Element() private readonly host?: HTMLKolInputPasswordElement;\r\n\tprivate ref?: HTMLInputElement;\r\n\r\n\tprivate readonly catchRef = (ref?: HTMLInputElement) => {\r\n\t\tthis.ref = ref;\r\n\t\tpropagateFocus(this.host, this.ref);\r\n\t};\r\n\r\n\tprivate readonly onKeyUp = (event: KeyboardEvent) => {\r\n\t\tsetState(this, '_currentLength', (event.target as HTMLInputElement).value.length);\r\n\t\tif (event.code === 'Enter') {\r\n\t\t\tpropagateSubmitEventToForm({\r\n\t\t\t\tform: this.host,\r\n\t\t\t\tref: this.ref,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.controller.onFacade.onChange(event);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst { ariaDescribedBy } = getRenderStates(this.state);\r\n\t\tconst showExpertSlot = this.state._label === ''; // _label=\"\" or _label\r\n\t\tconst showDefaultSlot = this.state._label === '…'; // deprecated: default slot will be removed in v2.0.0\r\n\t\treturn (\r\n\t\t\t<Host\r\n\t\t\t\tclass={{\r\n\t\t\t\t\t'has-value': this.state._hasValue,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<kol-input\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\t'hide-label': !!this.state._hideLabel,\r\n\t\t\t\t\t\tpassword: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t_currentLength={this.state._currentLength}\r\n\t\t\t\t\t_disabled={this.state._disabled}\r\n\t\t\t\t\t_error={this.state._error}\r\n\t\t\t\t\t_hasCounter={this.state._hasCounter}\r\n\t\t\t\t\t_hideLabel={this.state._hideLabel}\r\n\t\t\t\t\t_hint={this.state._hint}\r\n\t\t\t\t\t_icon={this.state._icon}\r\n\t\t\t\t\t_id={this.state._id}\r\n\t\t\t\t\t_maxLength={this.state._maxLength}\r\n\t\t\t\t\t_readOnly={this.state._readOnly}\r\n\t\t\t\t\t_required={this.state._required}\r\n\t\t\t\t\t_smartButton={this.state._smartButton}\r\n\t\t\t\t\t_touched={this.state._touched}\r\n\t\t\t\t\tonClick={() => this.ref?.focus()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span slot=\"label\">{showExpertSlot ? <slot name=\"expert\"></slot> : showDefaultSlot ? <slot></slot> : this.state._label}</span>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={this.catchRef}\r\n\t\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\t\taccessKey={this.state._accessKey}\r\n\t\t\t\t\t\taria-describedby={ariaDescribedBy.length > 0 ? ariaDescribedBy.join(' ') : undefined}\r\n\t\t\t\t\t\taria-labelledby={`${this.state._id}-label`}\r\n\t\t\t\t\t\tautoCapitalize=\"off\"\r\n\t\t\t\t\t\tautoComplete={this.state._autoComplete}\r\n\t\t\t\t\t\tautoCorrect=\"off\"\r\n\t\t\t\t\t\tdisabled={this.state._disabled}\r\n\t\t\t\t\t\tid={this.state._id}\r\n\t\t\t\t\t\tmaxlength={this.state._maxLength}\r\n\t\t\t\t\t\tname={this.state._name}\r\n\t\t\t\t\t\tpattern={this.state._pattern}\r\n\t\t\t\t\t\tplaceholder={this.state._placeholder}\r\n\t\t\t\t\t\treadOnly={this.state._readOnly}\r\n\t\t\t\t\t\trequired={this.state._required}\r\n\t\t\t\t\t\tsize={this.state._size}\r\n\t\t\t\t\t\tslot=\"input\"\r\n\t\t\t\t\t\tspellcheck=\"false\"\r\n\t\t\t\t\t\t// title={this.state._title}\r\n\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\tvalue={this.state._value as string}\r\n\t\t\t\t\t\t{...this.controller.onFacade}\r\n\t\t\t\t\t\tonKeyUp={this.onKeyUp}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</kol-input>\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate readonly controller: InputPasswordController;\r\n\r\n\t/**\r\n\t * Gibt an, mit welcher Tastenkombination man das interaktive Element der Komponente auslösen oder fokussieren kann.\r\n\t */\r\n\t@Prop() public _accessKey?: string;\r\n\r\n\t/**\r\n\t * Gibt an, ob der Screenreader die Meldung aktiv vorlesen soll.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _alert?: boolean = true;\r\n\r\n\t/**\r\n\t * Gibt an, ob das Eingabefeld autovervollständigt werden kann.\r\n\t */\r\n\t@Prop() public _autoComplete?: InputTypeOnOff;\r\n\r\n\t/**\r\n\t * Deaktiviert das interaktive Element in der Komponente und erlaubt keine Interaktion mehr damit.\r\n\t */\r\n\t@Prop() public _disabled?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Text für eine Fehlermeldung an.\r\n\t */\r\n\t@Prop() public _error?: string;\r\n\r\n\t/**\r\n\t * Aktiviert den Zeichenanzahlzähler am unteren Rand des Eingabefeldes.\r\n\t */\r\n\t@Prop() public _hasCounter?: boolean;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t */\r\n\t@Prop() public _hideLabel?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Hinweistext an.\r\n\t */\r\n\t@Prop() public _hint?: string = '';\r\n\r\n\t/**\r\n\t * Setzt die Iconklasse (z.B.: `_icon=\"codicon codicon-home`).\r\n\t */\r\n\t@Prop() public _icon?: Stringified<KoliBriHorizontalIcon>;\r\n\r\n\t/**\r\n\t * Gibt die interne ID des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _id?: string;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _label!: LabelWithExpertSlotPropType;\r\n\r\n\t/**\r\n\t * Gibt an, wie viele Zeichen maximal eingegeben werden können.\r\n\t */\r\n\t@Prop() public _maxLength?: number;\r\n\r\n\t/**\r\n\t * Gibt den technischen Namen des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _name?: string;\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Funktionen für das Input-Event an.\r\n\t */\r\n\t@Prop() public _on?: InputTypeOnDefault;\r\n\r\n\t/**\r\n\t * Gibt ein Prüfmuster (Pattern) für das Eingabefeld an.\r\n\t */\r\n\t@Prop() public _pattern?: string;\r\n\r\n\t/**\r\n\t * Gibt den Platzhalter des Eingabefeldes an, wenn es leer ist.\r\n\t */\r\n\t@Prop() public _placeholder?: string;\r\n\r\n\t/**\r\n\t * Setzt das Eingabefeld in den schreibgeschützten Modus.\r\n\t */\r\n\t@Prop() public _readOnly?: boolean;\r\n\r\n\t/**\r\n\t * Macht das Eingabeelement zu einem Pflichtfeld.\r\n\t */\r\n\t@Prop() public _required?: boolean;\r\n\r\n\t/**\r\n\t * Setzt die Breite des Eingabefeldes in Buchstabenbreiten.\r\n\t */\r\n\t@Prop() public _size?: number;\r\n\r\n\t/**\r\n\t * Ermöglicht eine Schaltfläche ins das Eingabefeld mit einer beliebigen Aktion zu einzufügen (ohne label).\r\n\t */\r\n\t@Prop() public _smartButton?: ButtonProps;\r\n\r\n\t/**\r\n\t * Selector for synchronizing the value with another input element.\r\n\t * @internal\r\n\t */\r\n\t@Prop() public _syncValueBySelector?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welchen Tab-Index das primäre Element in der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)\r\n\t */\r\n\t@Prop() public _tabIndex?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/berührt wurde.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _touched?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt den Wert des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _value?: string;\r\n\r\n\t@State() public state: States = {\r\n\t\t_autoComplete: 'off',\r\n\t\t_currentLength: 0,\r\n\t\t_id: nonce(), // ⚠ required\r\n\t\t_label: false, // ⚠ required\r\n\t\t_hasValue: false,\r\n\t};\r\n\r\n\tpublic constructor() {\r\n\t\tthis.controller = new InputPasswordController(this, 'password', this.host);\r\n\t}\r\n\r\n\t@Watch('_accessKey')\r\n\tpublic validateAccessKey(value?: string): void {\r\n\t\tthis.controller.validateAccessKey(value);\r\n\t}\r\n\r\n\t@Watch('_alert')\r\n\tpublic validateAlert(value?: boolean): void {\r\n\t\tthis.controller.validateAlert(value);\r\n\t}\r\n\r\n\t@Watch('_autoComplete')\r\n\tpublic validateAutoComplete(value?: InputTypeOnOff): void {\r\n\t\tthis.controller.validateAutoComplete(value);\r\n\t\tif (value === 'on') {\r\n\t\t\tdevHint(`[KolInputPassword] Die Option 'autocomplete' sollte bei einem Passwort-Eingabefeld nicht auf \"on\" gesetzt werden.`);\r\n\t\t}\r\n\t}\r\n\r\n\t@Watch('_disabled')\r\n\tpublic validateDisabled(value?: boolean): void {\r\n\t\tthis.controller.validateDisabled(value);\r\n\t}\r\n\r\n\t@Watch('_error')\r\n\tpublic validateError(value?: string): void {\r\n\t\tthis.controller.validateError(value);\r\n\t}\r\n\r\n\t@Watch('_hasCounter')\r\n\tpublic validateHasCounter(value?: boolean): void {\r\n\t\tthis.controller.validateHasCounter(value);\r\n\t}\r\n\r\n\t@Watch('_hideLabel')\r\n\tpublic validateHideLabel(value?: boolean): void {\r\n\t\tthis.controller.validateHideLabel(value);\r\n\t}\r\n\r\n\t@Watch('_hint')\r\n\tpublic validateHint(value?: string): void {\r\n\t\tthis.controller.validateHint(value);\r\n\t}\r\n\r\n\t@Watch('_icon')\r\n\tpublic validateIcon(value?: Stringified<KoliBriHorizontalIcon>): void {\r\n\t\tthis.controller.validateIcon(value);\r\n\t}\r\n\r\n\t@Watch('_id')\r\n\tpublic validateId(value?: string): void {\r\n\t\tthis.controller.validateId(value);\r\n\t}\r\n\r\n\t@Watch('_label')\r\n\tpublic validateLabel(value?: LabelWithExpertSlotPropType): void {\r\n\t\tthis.controller.validateLabel(value);\r\n\t}\r\n\r\n\t@Watch('_maxLength')\r\n\tpublic validateMaxLength(value?: number): void {\r\n\t\tthis.controller.validateMaxLength(value);\r\n\t}\r\n\r\n\t@Watch('_name')\r\n\tpublic validateName(value?: string): void {\r\n\t\tthis.controller.validateName(value);\r\n\t}\r\n\r\n\t@Watch('_on')\r\n\tpublic validateOn(value?: InputTypeOnDefault): void {\r\n\t\tthis.controller.validateOn(value);\r\n\t}\r\n\r\n\t@Watch('_pattern')\r\n\tpublic validatePattern(value?: string): void {\r\n\t\tthis.controller.validatePattern(value);\r\n\t}\r\n\r\n\t@Watch('_placeholder')\r\n\tpublic validatePlaceholder(value?: string): void {\r\n\t\tthis.controller.validatePlaceholder(value);\r\n\t}\r\n\r\n\t@Watch('_readOnly')\r\n\tpublic validateReadOnly(value?: boolean): void {\r\n\t\tthis.controller.validateReadOnly(value);\r\n\t}\r\n\r\n\t@Watch('_required')\r\n\tpublic validateRequired(value?: boolean): void {\r\n\t\tthis.controller.validateRequired(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\t@Watch('_size')\r\n\tpublic validateSize(value?: number): void {\r\n\t\tthis.controller.validateSize(value);\r\n\t}\r\n\r\n\t@Watch('_smartButton')\r\n\tpublic validateSmartButton(value?: ButtonProps | string): void {\r\n\t\tthis.controller.validateSmartButton(value);\r\n\t}\r\n\r\n\t@Watch('_syncValueBySelector')\r\n\tpublic validateSyncValueBySelector(value?: string): void {\r\n\t\tthis.controller.validateSyncValueBySelector(value);\r\n\t}\r\n\r\n\t@Watch('_tabIndex')\r\n\tpublic validateTabIndex(value?: number): void {\r\n\t\tthis.controller.validateTabIndex(value);\r\n\t}\r\n\r\n\t@Watch('_touched')\r\n\tpublic validateTouched(value?: boolean): void {\r\n\t\tthis.controller.validateTouched(value);\r\n\t}\r\n\r\n\t@Watch('_value')\r\n\tpublic validateValue(value?: string): void {\r\n\t\tthis.controller.validateValue(value);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis._alert = this._alert === true;\r\n\t\tthis._touched = this._touched === true;\r\n\t\tthis.controller.componentWillLoad();\r\n\r\n\t\tthis.state._hasValue = !!this.state._value;\r\n\t\tthis.controller.addValueChangeListener((v) => (this.state._hasValue = !!v));\r\n\t}\r\n}\r\n"],"mappings":"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"}