{"version":3,"names":["ModalService","constructor","this","lockedElements","Map","modalStack","lockElement","htmlElement","tabIndex","getAttribute","HTMLAnchorElement","HTMLButtonElement","HTMLInputElement","HTMLSelectElement","HTMLTextAreaElement","dataset","kolModal","undefined","set","setAttribute","style","userSelect","unlockElement","value","removeAttribute","delete","unlockLockedElements","forEach","bind","lockFocus","hostElement","excludeElement","HTMLElement","ShadowRoot","shadowRoot","i","children","length","renderModalIfExists","activeElement","has","get","timeout","setTimeout","clearTimeout","focus","size","modalKeys","Array","from","keys","modalRef","_value","display","getDocument","body","maxHeight","overflow","openModal","Log","warn","closeModal","_a","ToasterService","document","queue","Set","isOpen","toastElement","createElement","_on","onClose","next","values","showToast","insertBefore","firstChild","enqueue","data","add","heading","type","innerText","description","WINDOW","DOCUMENT","configKoliBri","window","Window","Document","console","getWindow","META_CONFIG","DEV_MODE","EXPERIMENTAL_MODE","COLOR_CONTRAST_ANALYSIS","getDevMode","getExperimalMode","getColorContrastAnalysis","static","msg","isArray","classifier","shield","label","options","handleClassifier","overwriteStyle","forceLog","debug","getShield","mapToArray","info","trace","error","Error","initMeta","meta","querySelector","hasAttribute","includes","KoliBri","getKoliBri","initKoliBri","Modal","Toaster","Object","defineProperty","renderDevAdvice","adviceShown","nonce","Math","floor","random","toString","processEnv"],"sources":["src/components/modal/service.ts","src/components/toast/toaster.tsx","src/utils/dev.utils.ts"],"sourcesContent":["import { getDocument, Log } from '../../utils/dev.utils';\r\n\r\ntype ModalContext = {\r\n\tactiveElement?: HTMLElement;\r\n};\r\n\r\ntype LockedElementContext = {\r\n\ttabIndex?: string;\r\n};\r\n\r\n/**\r\n * The modal service is only working client-side!\r\n */\r\nexport class ModalService {\r\n\tprivate lockedElements: Map<HTMLElement, LockedElementContext> = new Map();\r\n\tprivate modalStack: Map<HTMLElement, ModalContext> = new Map();\r\n\r\n\tprivate lockElement(htmlElement: HTMLElement) {\r\n\t\tconst tabIndex: string | null = htmlElement.getAttribute('tabindex');\r\n\t\tif (\r\n\t\t\thtmlElement instanceof HTMLAnchorElement ||\r\n\t\t\thtmlElement instanceof HTMLButtonElement ||\r\n\t\t\thtmlElement instanceof HTMLInputElement ||\r\n\t\t\thtmlElement instanceof HTMLSelectElement ||\r\n\t\t\thtmlElement instanceof HTMLTextAreaElement ||\r\n\t\t\ttypeof tabIndex === 'string' ||\r\n\t\t\thtmlElement.dataset.kolModal !== undefined\r\n\t\t) {\r\n\t\t\tif (typeof tabIndex === 'string') {\r\n\t\t\t\tthis.lockedElements.set(htmlElement, {\r\n\t\t\t\t\ttabIndex,\r\n\t\t\t\t});\r\n\t\t\t} else {\r\n\t\t\t\tthis.lockedElements.set(htmlElement, {});\r\n\t\t\t}\r\n\t\t\thtmlElement.setAttribute('tabindex', '-1');\r\n\t\t\thtmlElement.setAttribute('aria-hidden', 'true');\r\n\t\t\thtmlElement.style.userSelect = 'none';\r\n\t\t}\r\n\t}\r\n\r\n\tprivate unlockElement(value: LockedElementContext, htmlElement: HTMLElement) {\r\n\t\tif (typeof value.tabIndex === 'string') {\r\n\t\t\thtmlElement.setAttribute('tabindex', value.tabIndex);\r\n\t\t} else {\r\n\t\t\thtmlElement.removeAttribute('tabindex');\r\n\t\t}\r\n\t\thtmlElement.removeAttribute('aria-hidden');\r\n\t\thtmlElement.style.userSelect = 'unset';\r\n\t\tthis.lockedElements.delete(htmlElement);\r\n\t}\r\n\r\n\tprivate unlockLockedElements(lockedElements: Map<HTMLElement, LockedElementContext>) {\r\n\t\tlockedElements.forEach(this.unlockElement.bind(this));\r\n\t}\r\n\r\n\tprivate lockFocus(hostElement: HTMLElement | ShadowRoot | null, excludeElement?: HTMLElement) {\r\n\t\tif (hostElement !== excludeElement && (hostElement instanceof HTMLElement || hostElement instanceof ShadowRoot)) {\r\n\t\t\tif (hostElement instanceof HTMLElement) {\r\n\t\t\t\tthis.lockElement(hostElement);\r\n\t\t\t\tthis.lockFocus(hostElement.shadowRoot, excludeElement);\r\n\t\t\t}\r\n\t\t\tfor (let i = 0; i < hostElement.children.length; i++) {\r\n\t\t\t\tthis.lockFocus(hostElement.children[i] as HTMLElement, excludeElement);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tprivate renderModalIfExists(activeElement?: HTMLElement) {\r\n\t\tif (activeElement instanceof HTMLElement) {\r\n\t\t\tif (this.lockedElements.has(activeElement)) {\r\n\t\t\t\tthis.unlockElement(this.lockedElements.get(activeElement) as LockedElementContext, activeElement);\r\n\t\t\t}\r\n\t\t\tconst timeout = setTimeout(() => {\r\n\t\t\t\tclearTimeout(timeout);\r\n\t\t\t\tactiveElement.focus();\r\n\t\t\t}, 500);\r\n\t\t}\r\n\t\tthis.unlockLockedElements(this.lockedElements);\r\n\t\tif (this.modalStack.size > 0) {\r\n\t\t\tconst modalKeys = Array.from(this.modalStack.keys());\r\n\t\t\tconst modalRef = modalKeys[modalKeys.length - 1] as HTMLElement & {\r\n\t\t\t\t_activeElement: HTMLElement | null; // typo sugger\r\n\t\t\t};\r\n\t\t\tthis.modalStack.forEach((_value: ModalContext, htmlElement: HTMLElement) => {\r\n\t\t\t\tif (modalRef === htmlElement) {\r\n\t\t\t\t\thtmlElement.style.display = 'inline';\r\n\t\t\t\t} else {\r\n\t\t\t\t\thtmlElement.style.display = `none`;\r\n\t\t\t\t}\r\n\t\t\t});\r\n\t\t\tgetDocument().body.style.maxHeight = '100vh';\r\n\t\t\tgetDocument().body.style.overflow = 'hidden';\r\n\t\t\tthis.lockFocus(getDocument().body, modalRef);\r\n\t\t} else {\r\n\t\t\tgetDocument().body.style.maxHeight = 'unset';\r\n\t\t\tgetDocument().body.style.overflow = 'unset';\r\n\t\t}\r\n\t}\r\n\r\n\tpublic openModal(modalRef: HTMLElement, activeElement?: HTMLElement): void {\r\n\t\tif (modalRef instanceof HTMLElement === false) {\r\n\t\t\tLog.warn(`[KolModalService] Die DOM-Referenz des Modals ist nicht valide.`);\r\n\t\t} else {\r\n\t\t\tthis.modalStack.set(modalRef, {\r\n\t\t\t\tactiveElement,\r\n\t\t\t});\r\n\t\t\tthis.renderModalIfExists();\r\n\t\t}\r\n\t}\r\n\r\n\tpublic closeModal(modalRef: HTMLElement): void {\r\n\t\tif (modalRef instanceof HTMLElement === false) {\r\n\t\t\tLog.warn(`[KolModalService] Die DOM-Referenz des Modals ist nicht valide.`);\r\n\t\t} else {\r\n\t\t\tconst activeElement = this.modalStack.get(modalRef)?.activeElement;\r\n\t\t\tthis.modalStack.delete(modalRef);\r\n\t\t\tthis.renderModalIfExists(activeElement);\r\n\t\t}\r\n\t}\r\n}\r\n","import { AlertType } from '../alert/types';\r\n\r\ntype Toast = {\r\n\theading: string;\r\n\tdescription: string;\r\n\ttype: AlertType;\r\n};\r\n\r\nexport class ToasterService {\r\n\tprivate readonly toastElement: HTMLKolToastElement;\r\n\r\n\tprivate readonly queue: Set<Toast> = new Set();\r\n\r\n\tprivate isOpen = false;\r\n\r\n\tconstructor(private readonly document: Document) {\r\n\t\tthis.toastElement = this.document.createElement('kol-toast');\r\n\t\tthis.toastElement.setAttribute('_level', '3');\r\n\t\tthis.toastElement.setAttribute('_show', 'false');\r\n\t\tthis.toastElement.setAttribute('_show-duration', '-1');\r\n\t\tthis.toastElement.setAttribute('_has-closer', 'true');\r\n\t\tthis.toastElement._on = {\r\n\t\t\tonClose: () => {\r\n\t\t\t\tconst next = this.queue.values().next();\r\n\t\t\t\tif (next.value) {\r\n\t\t\t\t\tthis.queue.delete(next.value as Toast);\r\n\t\t\t\t\tsetTimeout(() => {\r\n\t\t\t\t\t\tthis.showToast(next.value as Toast);\r\n\t\t\t\t\t}, 200);\r\n\t\t\t\t} else {\r\n\t\t\t\t\tthis.isOpen = false;\r\n\t\t\t\t}\r\n\t\t\t},\r\n\t\t};\r\n\t\tthis.document.body.insertBefore(this.toastElement, this.document.body.firstChild);\r\n\t}\r\n\r\n\t/**\r\n\t * Reiht einen neuen Toast in die Warteschlange ein, um ihn anzuzeigen.\r\n\t */\r\n\tpublic enqueue(data: Toast): void {\r\n\t\tif (this.isOpen) {\r\n\t\t\tthis.queue.add(data);\r\n\t\t} else {\r\n\t\t\tthis.showToast(data);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate showToast(data: Toast): void {\r\n\t\tthis.toastElement.setAttribute('_heading', data.heading);\r\n\t\tthis.toastElement.setAttribute('_show', 'true');\r\n\t\tthis.toastElement.setAttribute('_type', data.type);\r\n\t\tthis.toastElement.innerText = data.description;\r\n\t\tthis.isOpen = true;\r\n\t}\r\n}\r\n","import { ModalService } from '../components/modal/service';\r\nimport { ToasterService } from '../components/toast/toaster';\r\nimport { processEnv } from './reuse';\r\n\r\nlet WINDOW: Window | null = null;\r\nlet DOCUMENT: Document | null = null;\r\n\r\nexport const configKoliBri = (window: Window): void => {\r\n\tif (window instanceof Window) {\r\n\t\tWINDOW = window;\r\n\t\tif (WINDOW.document instanceof Document) {\r\n\t\t\tDOCUMENT = window.document;\r\n\t\t} else {\r\n\t\t\tconsole.warn(`The given Window has no valid Document.`);\r\n\t\t}\r\n\t} else {\r\n\t\tconsole.warn(`The given Window is not valid.`);\r\n\t}\r\n};\r\n\r\nexport const getWindow = (): Window => (WINDOW || typeof window === 'undefined' ? (null as unknown as Window) : window);\r\nexport const getDocument = (): Document => (DOCUMENT || typeof getWindow().document === 'undefined' ? (null as unknown as Document) : getWindow().document);\r\n\r\nlet META_CONFIG: string | null = null;\r\nlet DEV_MODE: boolean | null = null;\r\nlet EXPERIMENTAL_MODE: boolean | null = null;\r\nlet COLOR_CONTRAST_ANALYSIS: boolean | null = null;\r\n\r\nexport const getDevMode = (): boolean => DEV_MODE === true;\r\nexport const getExperimalMode = (): boolean => EXPERIMENTAL_MODE === true;\r\nexport const getColorContrastAnalysis = (): boolean => COLOR_CONTRAST_ANALYSIS === true;\r\n\r\ntype LogShield = {\r\n\tlabel: string;\r\n\tstyle: string;\r\n};\r\n\r\ntype LogShieldOptions = {\r\n\tclassifier?: string;\r\n\tforceLog?: boolean;\r\n\toverwriteStyle?: string;\r\n};\r\n\r\nexport class Log {\r\n\tprivate static shield: LogShield = {\r\n\t\tlabel: '%cKoliBri',\r\n\t\tstyle: 'color: white; background: #666; font-weight: bold; padding: .25em .5em; border-radius: 3px; border: 1px solid #000',\r\n\t};\r\n\r\n\tprivate static mapToArray(msg: unknown | unknown[]): unknown[] {\r\n\t\treturn Array.isArray(msg) ? msg : [msg];\r\n\t}\r\n\r\n\tprivate static handleClassifier(classifier?: string): string {\r\n\t\tif (typeof classifier === 'string' && classifier.length > 0) {\r\n\t\t\treturn `${Log.shield.label} | ${classifier}`;\r\n\t\t} else {\r\n\t\t\treturn Log.shield.label;\r\n\t\t}\r\n\t}\r\n\r\n\tprivate static getShield(options?: LogShieldOptions): string[] {\r\n\t\treturn [Log.handleClassifier(options?.classifier), `${Log.shield.style};${options?.overwriteStyle || ''}`];\r\n\t}\r\n\r\n\tpublic static debug(msg: unknown | unknown[], options?: LogShieldOptions): void {\r\n\t\tif (DEV_MODE || options?.forceLog === true) {\r\n\t\t\tconsole.debug(...Log.getShield(options), ...Log.mapToArray(msg));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static info(msg: unknown | unknown[], options?: LogShieldOptions): void {\r\n\t\tif (DEV_MODE || options?.forceLog === true) {\r\n\t\t\tconsole.info(...Log.getShield(options), ...Log.mapToArray(msg));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static trace(msg: unknown | unknown[], options?: LogShieldOptions): void {\r\n\t\tif (DEV_MODE || options?.forceLog === true) {\r\n\t\t\tconsole.trace(...Log.getShield(options), ...Log.mapToArray(msg));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static warn(msg: unknown | unknown[], options?: LogShieldOptions): void {\r\n\t\tif (DEV_MODE || options?.forceLog === true) {\r\n\t\t\tconsole.warn(...Log.getShield(options), ...Log.mapToArray(msg));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static error(msg: unknown | unknown[], options?: LogShieldOptions): void {\r\n\t\tif (DEV_MODE || options?.forceLog === true) {\r\n\t\t\tconsole.error(...Log.getShield(options), ...Log.mapToArray(msg));\r\n\t\t}\r\n\t}\r\n\r\n\tpublic static throw(msg: unknown | unknown[], options?: LogShieldOptions): void {\r\n\t\tif (DEV_MODE || options?.forceLog === true) {\r\n\t\t\tthrow new Error(...Log.getShield(options), ...Log.mapToArray(msg));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nconst initMeta = (): void => {\r\n\tif (DEV_MODE === null && EXPERIMENTAL_MODE === null && COLOR_CONTRAST_ANALYSIS === null) {\r\n\t\tconst meta = getDocument().querySelector('meta[name=\"kolibri\"]');\r\n\t\tif (meta && meta.hasAttribute('content')) {\r\n\t\t\tMETA_CONFIG = meta.getAttribute('content');\r\n\t\t\tif (typeof META_CONFIG === 'string') {\r\n\t\t\t\tDEV_MODE = META_CONFIG.includes('dev-mode=true');\r\n\t\t\t\tEXPERIMENTAL_MODE = META_CONFIG.includes('experimental-mode=true');\r\n\t\t\t\tCOLOR_CONTRAST_ANALYSIS = META_CONFIG.includes('color-contrast-analysis=true');\r\n\t\t\t}\r\n\t\t}\r\n\t} else {\r\n\t\tconsole.warn(`You can only initialize DEV_MODE and COLOR_CONTRAST_ANALYSIS once.`);\r\n\t}\r\n};\r\n\r\nlet KoliBri: Record<string, unknown> | null = null;\r\nexport const getKoliBri = (): Record<string, unknown> => KoliBri || {};\r\nexport const initKoliBri = (): void => {\r\n\tif (KoliBri === null) {\r\n\t\tKoliBri = getWindow().KoliBri || {};\r\n\t\tconst Modal = new ModalService();\r\n\t\tconst Toaster = new ToasterService(getDocument());\r\n\t\tObject.defineProperty(KoliBri, 'Modal', {\r\n\t\t\tget: function (): ModalService {\r\n\t\t\t\treturn Modal;\r\n\t\t\t},\r\n\t\t});\r\n\t\tObject.defineProperty(KoliBri, 'Toaster', {\r\n\t\t\tget: function (): ToasterService {\r\n\t\t\t\treturn Toaster;\r\n\t\t\t},\r\n\t\t});\r\n\t\tinitMeta();\r\n\t\tLog.debug(\r\n\t\t\t`\r\n\t,--. ,--.         ,--. ,--. ,-----.           ,--.\r\n\t|  .'   /  ,---.  |  | \\`--' |  |) /_  ,--.--. \\`--'\r\n\t|  .   '  | .-. | |  | ,--. |  .-.  \\\\ |  .--' ,--.\r\n\t|  |\\\\   \\\\ | '-' | |  | |  | |  '--' / |  |    |  |\r\n\t\\`--' \\`--´  \\`---´  \\`--' \\`--' \\`------´  \\`--'    \\`--'\r\n\t🚹 The accessible HTML-Standard | 👉 https://public-ui.github.io\r\n\t\t`,\r\n\t\t\t{\r\n\t\t\t\tforceLog: true,\r\n\t\t\t}\r\n\t\t);\r\n\t} else {\r\n\t\tconsole.warn(`You can only initialize KoliBri once.`);\r\n\t}\r\n};\r\nexport { KoliBri };\r\n\r\nexport const renderDevAdvice = (): void => {\r\n\tif (getWindow().KoliBri === undefined) {\r\n\t\tObject.defineProperty(window, 'KoliBri', {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn KoliBri;\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\tif (getKoliBri().adviceShown !== true) {\r\n\t\tObject.defineProperty(KoliBri, 'adviceShown', {\r\n\t\t\tget: function () {\r\n\t\t\t\treturn true;\r\n\t\t\t},\r\n\t\t});\r\n\t\tLog.debug(\r\n\t\t\t`\r\nYou are using the KoliBri component library. If you have any suggestions for improvement or find a problem, please contact us:\r\n\r\nTicket: https://github.com/public-ui/kolibri/issues/new/choose (for privacy reasons, please use email)\r\nEmail: kolibri@itzbund.de\r\n`\r\n\t\t);\r\n\t}\r\n};\r\n\r\nlet nonce = (): string => Math.floor(Math.random() * 16777215).toString(16);\r\n\r\nif (processEnv === 'test') {\r\n\tnonce = (): string => 'nonce';\r\n}\r\n\r\nexport { nonce };\r\n"],"mappings":"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"}