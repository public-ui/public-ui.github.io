{"version":3,"names":["defaultStyleCss","KolModal","this","onKeyDown","event","code","_activeElement","_label","_width","componentDidRender","hostElement","state","getKoliBri","Modal","openModal","closeModal","disconnectedCallback","render","h","Host","ref","el","class","style","width","role","setAttribute","setTimeout","focus","validateActiveElement","value","watchValidator","Set","defaultValue","validateAriaLabel","validateLabel","validateOn","featureHint","callbacks","onClose","setState","validateWidth","watchString","componentWillLoad","_ariaLabel","_on"],"sources":["src/components/modal/style.css?tag=kol-modal&mode=default&encapsulation=shadow","src/components/modal/component.tsx"],"sourcesContent":["@import url(../style.css);\n.overlay {\n\tbackground-color: rgba(0, 0, 0, 0.33);\n\tdisplay: flex;\n\theight: 100%;\n\tinset: 0;\n\tposition: fixed;\n\twidth: 100%;\n\tz-index: 100;\n}\n.modal {\n\tmargin: auto;\n\tmax-height: 100%;\n\tmax-width: 100%;\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\r\nimport { Component, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { KoliBriModalEventCallbacks } from '../../types/modal';\r\nimport { LabelPropType, validateLabel } from '../../types/props/label';\r\nimport { featureHint } from '../../utils/a11y.tipps';\r\nimport { getKoliBri } from '../../utils/dev.utils';\r\nimport { setState, watchString, watchValidator } from '../../utils/prop.validators';\r\nimport { ModalService } from './service';\r\nimport { KoliBriModalAPI, KoliBriModalStates } from './types';\r\n\r\n/**\r\n * https://en.wikipedia.org/wiki/Modal_window\r\n * @deprecated use the native <dialog> instead\r\n */\r\n\r\n/**\r\n * @slot - Der Inhalt des Modals.\r\n */\r\n@Component({\r\n\ttag: 'kol-modal',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolModal implements KoliBriModalAPI {\r\n\tprivate hostElement?: HTMLElement;\r\n\r\n\tpublic componentDidRender(): void {\r\n\t\tif (this.hostElement /* SSR instanceof HTMLElement */) {\r\n\t\t\tif (this.state._activeElement /* SSR instanceof HTMLElement */) {\r\n\t\t\t\t(getKoliBri().Modal as ModalService).openModal(this.hostElement, this.state._activeElement);\r\n\t\t\t} else {\r\n\t\t\t\t(getKoliBri().Modal as ModalService).closeModal(this.hostElement);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tpublic disconnectedCallback(): void {\r\n\t\tif (this.hostElement /* SSR instanceof HTMLElement */) {\r\n\t\t\t(getKoliBri().Modal as ModalService).closeModal(this.hostElement);\r\n\t\t}\r\n\t}\r\n\r\n\tprivate readonly onKeyDown = (event: KeyboardEvent) => {\r\n\t\tif (event && event.code === 'Escape') {\r\n\t\t\tthis._activeElement = null;\r\n\t\t}\r\n\t};\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<Host\r\n\t\t\t\tref={(el) => {\r\n\t\t\t\t\tthis.hostElement = el as HTMLElement;\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{this.state._activeElement /* SSR instanceof HTMLElement */ && (\r\n\t\t\t\t\t<div class=\"overlay\">\r\n\t\t\t\t\t\t<div\r\n\t\t\t\t\t\t\tclass=\"modal\"\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\twidth: this.state._width,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\taria-label={this.state._label}\r\n\t\t\t\t\t\t\taria-modal=\"true\"\r\n\t\t\t\t\t\t\trole=\"dialog\"\r\n\t\t\t\t\t\t\tonKeyDown={this.onKeyDown}\r\n\t\t\t\t\t\t\tref={(el) => {\r\n\t\t\t\t\t\t\t\tif (el /* SSR instanceof HTMLElement */) {\r\n\t\t\t\t\t\t\t\t\tel.setAttribute('tabindex', '0');\r\n\t\t\t\t\t\t\t\t\tsetTimeout(() => el.focus(), 250);\r\n\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t<slot />\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Gibt die Referenz auf das auslösende HTML-Element an, wodurch das Modal geöffnet wurde.\r\n\t */\r\n\t@Prop({ mutable: true }) public _activeElement?: HTMLElement | null;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t *\r\n\t *  @deprecated use _label instead\r\n\t */\r\n\t@Prop() public _ariaLabel?: string;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _label?: LabelPropType; // TODO: required in v2\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Function für das Schließen des Modals an.\r\n\t */\r\n\t@Prop() public _on?: KoliBriModalEventCallbacks;\r\n\r\n\t/**\r\n\t * Setzt die Breite des Modals. (max-width: 100%).\r\n\t */\r\n\t@Prop() public _width?: string = '100%';\r\n\r\n\t@State() public state: KoliBriModalStates = {\r\n\t\t_activeElement: null,\r\n\t\t_label: '…', // ⚠ required\r\n\t\t_width: '100%',\r\n\t};\r\n\r\n\t@Watch('_activeElement')\r\n\tpublic validateActiveElement(value?: HTMLElement | null): void {\r\n\t\twatchValidator(this, '_activeElement', (value): boolean => typeof value === 'object' || value === null, new Set(['HTMLElement', 'null']), value, {\r\n\t\t\tdefaultValue: null,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\t@Watch('_ariaLabel')\r\n\tpublic validateAriaLabel(value?: string): void {\r\n\t\tthis.validateLabel(value);\r\n\t}\r\n\r\n\t@Watch('_label')\r\n\tpublic validateLabel(value?: LabelPropType): void {\r\n\t\tvalidateLabel(this, value);\r\n\t}\r\n\r\n\t@Watch('_on')\r\n\tpublic validateOn(value?: KoliBriModalEventCallbacks): void {\r\n\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\tfeatureHint('[KolTabs] Prüfen, wie man auch einen EventCallback einzeln ändern kann.');\r\n\t\t\tconst callbacks: KoliBriModalEventCallbacks = {};\r\n\t\t\tif (typeof value.onClose === 'function' || value.onClose === true) {\r\n\t\t\t\tcallbacks.onClose = value.onClose;\r\n\t\t\t}\r\n\t\t\tsetState<KoliBriModalEventCallbacks>(this, '_on', callbacks);\r\n\t\t}\r\n\t}\r\n\r\n\t@Watch('_width')\r\n\tpublic validateWidth(value?: string): void {\r\n\t\twatchString(this, '_width', value, {\r\n\t\t\tdefaultValue: '100%',\r\n\t\t});\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis.validateActiveElement(this._activeElement);\r\n\t\tthis.validateLabel(this._label || this._ariaLabel);\r\n\t\tthis.validateOn(this._on);\r\n\t\tthis.validateWidth(this._width);\r\n\t}\r\n}\r\n"],"mappings":";;;+SAAA,MAAMA,EAAkB,81B,MC0BXC,EAAQ,M,yBAmBHC,KAAAC,UAAaC,IAC7B,GAAIA,GAASA,EAAMC,OAAS,SAAU,CACrCH,KAAKI,eAAiB,I,gHA8DS,O,WAEW,CAC3CA,eAAgB,KAChBC,OAAQ,IACRC,OAAQ,O,CArFFC,qBACN,GAAIP,KAAKQ,YAA8C,CACtD,GAAIR,KAAKS,MAAML,eAAiD,CAC9DM,IAAaC,MAAuBC,UAAUZ,KAAKQ,YAAaR,KAAKS,MAAML,e,KACtE,CACLM,IAAaC,MAAuBE,WAAWb,KAAKQ,Y,GAKjDM,uBACN,GAAId,KAAKQ,YAA8C,CACrDE,IAAaC,MAAuBE,WAAWb,KAAKQ,Y,EAUhDO,SACN,OACCC,EAACC,EAAI,CACJC,IAAMC,IACLnB,KAAKQ,YAAcW,CAAiB,GAGpCnB,KAAKS,MAAML,gBACXY,EAAA,OAAKI,MAAM,WACVJ,EAAA,OACCI,MAAM,QACNC,MAAO,CACNC,MAAOtB,KAAKS,MAAMH,QAClB,aACWN,KAAKS,MAAMJ,OAAM,aAClB,OACXkB,KAAK,SACLtB,UAAWD,KAAKC,UAChBiB,IAAMC,IACL,GAAIA,EAAqC,CACxCA,EAAGK,aAAa,WAAY,KAC5BC,YAAW,IAAMN,EAAGO,SAAS,I,IAI/BV,EAAA,e,CA0CCW,sBAAsBC,GAC5BC,EAAe7B,KAAM,kBAAmB4B,UAA0BA,IAAU,UAAYA,IAAU,MAAM,IAAIE,IAAI,CAAC,cAAe,SAAUF,EAAO,CAChJG,aAAc,M,CAQTC,kBAAkBJ,GACxB5B,KAAKiC,cAAcL,E,CAIbK,cAAcL,GACpBK,EAAcjC,KAAM4B,E,CAIdM,WAAWN,GACjB,UAAWA,IAAU,UAAYA,IAAU,KAAM,CAChDO,EAAY,2EACZ,MAAMC,EAAwC,GAC9C,UAAWR,EAAMS,UAAY,YAAcT,EAAMS,UAAY,KAAM,CAClED,EAAUC,QAAUT,EAAMS,O,CAE3BC,EAAqCtC,KAAM,MAAOoC,E,EAK7CG,cAAcX,GACpBY,EAAYxC,KAAM,SAAU4B,EAAO,CAClCG,aAAc,Q,CAITU,oBACNzC,KAAK2B,sBAAsB3B,KAAKI,gBAChCJ,KAAKiC,cAAcjC,KAAKK,QAAUL,KAAK0C,YACvC1C,KAAKkC,WAAWlC,KAAK2C,KACrB3C,KAAKuC,cAAcvC,KAAKM,O"}