{"version":3,"names":["watchTooltipAlignment","component","propName","value","watchValidator","Set","defaultValue"],"sources":["src/types/button-link.ts"],"sourcesContent":["import { Generic } from '@a11y-ui/core';\r\n\r\nimport { Events } from '../enums/events';\r\nimport { watchValidator } from '../utils/prop.validators';\r\nimport { EventCallback, EventValueOrEventCallback } from './callbacks';\r\nimport { Stringified } from './common';\r\nimport { KoliBriAllIcon, KoliBriIconProp } from './icon';\r\nimport { Align } from './props/align';\r\nimport { PropAriaCurrent } from './props/aria-current';\r\nimport { PropAriaExpanded } from './props/aria-expanded';\r\nimport { PropAriaLabel } from './props/aria-label';\r\nimport { PropAriaSelected } from './props/aria-selected';\r\nimport { PropDisabled } from './props/disabled';\r\nimport { PropDownload } from './props/download';\r\nimport { PropHideLabel } from './props/hide-label';\r\nimport { PropHref } from './props/href';\r\nimport { PropLabelWithExpertSlot } from './props/label';\r\nimport { PropStealth } from './props/stealth';\r\n\r\nexport type AlternativButtonLinkRole = 'button' | 'link' | 'tab';\r\n\r\n/**\r\n * https://twitter.com/housecor/status/1541037184622403584?t=HoUiOAZEcXFeuDl-VWAEZg\r\n * https://mui.com/material-ui/react-link/#accessibility\r\n * https://mui.com/material-ui/react-button/#text-button\r\n */\r\ntype OptionalButtonAndLinkProps = {\r\n\tariaControls: string;\r\n\ticon: Stringified<KoliBriIconProp>;\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\ticonAlign: Align;\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\ticonOnly: boolean;\r\n\trole: AlternativButtonLinkRole;\r\n\ttabIndex: number;\r\n\ttooltipAlign: Align;\r\n} & PropAriaCurrent &\r\n\tPropAriaExpanded &\r\n\tPropAriaLabel &\r\n\tPropAriaSelected &\r\n\tPropDisabled &\r\n\tPropHideLabel;\r\n\r\ntype RequiredButtonAndLinkStates = {\r\n\ticon: KoliBriAllIcon;\r\n};\r\ntype OptionalButtonAndLinkStates = {\r\n\tariaControls: string;\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\ticonAlign: Align;\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\ticonOnly: boolean;\r\n\trole: AlternativButtonLinkRole;\r\n\ttabIndex: number;\r\n\ttooltipAlign: Align;\r\n} & PropAriaCurrent &\r\n\tPropAriaExpanded &\r\n\tPropAriaSelected &\r\n\tPropDisabled &\r\n\tPropHideLabel;\r\n\r\n/**\r\n * Button\r\n * TODO: 'tertiary' instead of 'normal'\r\n */\r\nexport type KoliBriButtonType = 'button' | 'reset' | 'submit';\r\nexport type KoliBriButtonVariant = 'primary' | 'secondary' | 'normal' | 'tertiary' | 'danger' | 'ghost' | 'custom';\r\n\r\nexport type KoliBriButtonCallbacks<T> = {\r\n\t[Events.onClick]?: EventValueOrEventCallback<MouseEvent, T>;\r\n\t[Events.onMouseDown]?: EventCallback<MouseEvent>;\r\n};\r\n\r\nexport type KoliBriButtonVariantPropState = {\r\n\tvariant: KoliBriButtonVariant;\r\n};\r\nexport type KoliBriButtonCustomClassPropState = {\r\n\tcustomClass: string;\r\n};\r\n\r\n/**\r\n * API ButtonLink\r\n */\r\nexport type RequiredButtonLinkProps = unknown;\r\nexport type OptionalButtonLinkProps = OptionalButtonAndLinkProps & {\r\n\t/**\r\n\t * @deprecated Zweck?!\r\n\t */\r\n\taccessKey: string;\r\n\tdisabled: boolean;\r\n\tid: string;\r\n\ton: KoliBriButtonCallbacks<unknown>;\r\n\ttype: KoliBriButtonType;\r\n\tvalue: Stringified<unknown>;\r\n} & PropLabelWithExpertSlot;\r\n// type ButtonLinkProps = Generic.Element.Members<RequiredButtonProps, OptionalButtonProps>;\r\n\r\ntype RequiredButtonLinkStates = RequiredButtonAndLinkStates &\r\n\tPropLabelWithExpertSlot &\r\n\tKoliBriButtonVariantPropState & {\r\n\t\ttype: KoliBriButtonType;\r\n\t};\r\ntype OptionalButtonLinkStates = OptionalButtonAndLinkStates &\r\n\tKoliBriButtonCustomClassPropState & {\r\n\t\t/**\r\n\t\t * @deprecated Zweck?!\r\n\t\t */\r\n\t\taccessKey: string;\r\n\t\tdisabled: boolean;\r\n\t\tid: string;\r\n\t\ton: KoliBriButtonCallbacks<unknown>;\r\n\t\tvalue: unknown;\r\n\t};\r\n// type ButtonLinkStates = Generic.Element.Members<RequiredButtonStates, OptionalButtonStates>;\r\n\r\n/**\r\n * API Button\r\n */\r\nexport type RequiredButtonProps = RequiredButtonLinkProps & PropLabelWithExpertSlot;\r\nexport type OptionalButtonProps = OptionalButtonLinkProps & KoliBriButtonVariantPropState & KoliBriButtonCustomClassPropState;\r\nexport type ButtonProps = Generic.Element.Members<RequiredButtonProps, OptionalButtonProps>;\r\n\r\nexport type RequiredButtonStates = RequiredButtonLinkStates & KoliBriButtonVariantPropState & PropLabelWithExpertSlot;\r\nexport type OptionalButtonStates = OptionalButtonLinkStates & KoliBriButtonCustomClassPropState;\r\nexport type ButtonStates = Generic.Element.Members<RequiredButtonStates, OptionalButtonStates>;\r\n\r\n/* LINK */\r\n\r\n/**\r\n * @deprecated Link should not use the on-click event. Use a button instead.\r\n */\r\nexport type LinkOnCallbacks = {\r\n\t[Events.onClick]?: EventValueOrEventCallback<Event, string>;\r\n};\r\n\r\n// https://www.w3schools.com/tags/att_a_target.asp\r\nexport type LinkTarget = '_blank' | '_parent' | '_self' | '_top' | string;\r\n\r\nexport type LinkUseCase = 'text' | 'image' | 'nav';\r\n\r\n/**\r\n * API Link\r\n */\r\nexport type RequiredLinkProps = PropHref;\r\nexport type OptionalLinkProps = OptionalButtonAndLinkProps & {\r\n\t/**\r\n\t * @deprecated A link could never be disabled. Use a button instead.\r\n\t */\r\n\tdisabled: boolean;\r\n\t/**\r\n\t * @deprecated We use the on-click event only on buttons styled as link.\r\n\t */\r\n\ton: LinkOnCallbacks;\r\n\t/**\r\n\t * @deprecated Das Styling sollte stets über CSS erfolgen.\r\n\t */\r\n\tselector: string;\r\n\t/**\r\n\t * @deprecated Das Styling sollte stets über CSS erfolgen.\r\n\t */\r\n\ttarget: LinkTarget;\r\n\ttargetDescription: string;\r\n\t/**\r\n\t * @deprecated Das Styling sollte stets über CSS erfolgen.\r\n\t */\r\n\tuseCase: LinkUseCase;\r\n} & PropDownload &\r\n\tPropLabelWithExpertSlot &\r\n\tPropStealth;\r\nexport type LinkProps = Generic.Element.Members<RequiredLinkProps, OptionalLinkProps>;\r\n\r\ntype RequiredLinkStates = RequiredButtonAndLinkStates & PropHref & PropLabelWithExpertSlot;\r\ntype OptionalLinkStates = OptionalButtonAndLinkStates & {\r\n\tariaSelected: boolean;\r\n\t/**\r\n\t * @deprecated We use the on-click event only on buttons styled as link.\r\n\t */\r\n\ton: LinkOnCallbacks;\r\n\t/**\r\n\t * @deprecated Das Styling sollte stets über CSS erfolgen.\r\n\t */\r\n\tselector: string;\r\n\t/**\r\n\t * @deprecated Das Styling sollte stets über CSS erfolgen.\r\n\t */\r\n\ttarget: LinkTarget;\r\n\ttargetDescription: string;\r\n\t/**\r\n\t * @deprecated Das Styling sollte stets über CSS erfolgen.\r\n\t */\r\n\tuseCase: LinkUseCase;\r\n} & PropAriaSelected &\r\n\tPropDownload &\r\n\tPropStealth;\r\nexport type LinkStates = Generic.Element.Members<RequiredLinkStates, OptionalLinkStates>;\r\nexport type KoliBriLinkAPI = Generic.Element.ComponentApi<RequiredLinkProps, OptionalLinkProps, RequiredLinkStates, OptionalLinkStates>;\r\n\r\n/**\r\n * API LinkButton\r\n */\r\nexport type RequiredLinkButtonProps = RequiredLinkProps;\r\nexport type OptionalLinkButtonProps = OptionalLinkProps & KoliBriButtonVariantPropState & KoliBriButtonCustomClassPropState;\r\n// type LinkButtonProps = Generic.Element.Members<RequiredLinkButtonProps, OptionalLinkButtonProps>;\r\n\r\n// type RequiredLinkButtonStates = KoliBriButtonVariantPropState;\r\n// type OptionalLinkButtonStates = KoliBriButtonCustomClassPropState;\r\n// type LinkButtonStates = Generic.Element.Members<RequiredLinkButtonStates, OptionalLinkButtonStates>;\r\n\r\nexport const watchTooltipAlignment = (component: Generic.Element.Component, propName: string, value?: Align): void => {\r\n\twatchValidator(\r\n\t\tcomponent,\r\n\t\tpropName,\r\n\t\t(value) => value === 'top' || value === 'right' || value === 'bottom' || value === 'left',\r\n\t\tnew Set(['Alignment {top, right, buttom, left}']),\r\n\t\tvalue,\r\n\t\t{\r\n\t\t\tdefaultValue: 'top',\r\n\t\t}\r\n\t);\r\n};\r\n"],"mappings":";;;wDAwNaA,EAAwB,CAACC,EAAsCC,EAAkBC,KAC7FC,EACCH,EACAC,GACCC,GAAUA,IAAU,OAASA,IAAU,SAAWA,IAAU,UAAYA,IAAU,QACnF,IAAIE,IAAI,CAAC,yCACTF,EACA,CACCG,aAAc,OAEf,S"}