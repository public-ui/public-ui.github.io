{"version":3,"names":["TextareaController","InputController","constructor","component","name","host","super","this","afterSyncCharCounter","_value","length","state","_currentLength","validateHasCounter","value","watchBoolean","hooks","afterPatch","validateMaxLength","watchNumber","min","validatePlaceholder","watchString","validateReadOnly","validateResize","watchValidator","Set","validateRequired","validateRows","validateValue","setFormAssociatedValue","componentWillLoad","_hasCounter","_maxLength","_placeholder","_readOnly","_resize","_required","_rows","defaultStyleCss","increaseTextareaHeight","el","style","overflow","currentRows","rows","rowHeight","clientHeight","nextRows","Math","round","scrollHeight","KolTextarea","render","ariaDescribedBy","getRenderStates","showExpertSlot","_label","showDefaultSlot","h","Host","class","_hasValue","textarea","_hideLabel","_alert","_disabled","_error","_hint","_id","_touched","onClick","_a","ref","focus","slot","Object","assign","catchRef","title","accessKey","_accessKey","join","undefined","autoCapitalize","autoCorrect","disabled","id","maxlength","_name","readOnly","required","placeholder","spellcheck","controller","onFacade","onKeyUp","onChange","resize","hostRef","propagateFocus","event","HTMLTextAreaElement","setState","_adjustHeight","nonce","validateAccessKey","validateAdjustHeight","validateAlert","validateDisabled","validateError","validateHideLabel","validateHint","validateId","validateLabel","validateName","validateOn","validateSyncValueBySelector","validateTabIndex","validateTouched","addValueChangeListener","v"],"sources":["src/components/textarea/controller.ts","src/components/textarea/style.css?tag=kol-textarea&mode=default&encapsulation=shadow","src/components/textarea/component.tsx"],"sourcesContent":["import { Generic } from '@a11y-ui/core';\r\n\r\nimport { watchBoolean, watchNumber, watchString, watchValidator } from '../../utils/prop.validators';\r\nimport { InputController } from '../@deprecated/input/controller';\r\nimport { CSSResize, Props, Watches } from './types';\r\n\r\nexport class TextareaController extends InputController implements Watches {\r\n\tprotected readonly component: Generic.Element.Component & Props;\r\n\r\n\tpublic constructor(component: Generic.Element.Component & Props, name: string, host?: HTMLElement) {\r\n\t\tsuper(component, name, host);\r\n\t\tthis.component = component;\r\n\t}\r\n\r\n\tprivate afterSyncCharCounter = () => {\r\n\t\tif (typeof this.component._value === 'string' && this.component._value.length > 0) {\r\n\t\t\tthis.component.state._currentLength = this.component._value.length;\r\n\t\t}\r\n\t};\r\n\r\n\tpublic validateHasCounter(value?: boolean): void {\r\n\t\twatchBoolean(this.component, '_hasCounter', value, {\r\n\t\t\thooks: {\r\n\t\t\t\tafterPatch: this.afterSyncCharCounter,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tpublic validateMaxLength(value?: number): void {\r\n\t\twatchNumber(this.component, '_maxLength', value, {\r\n\t\t\thooks: {\r\n\t\t\t\tafterPatch: this.afterSyncCharCounter,\r\n\t\t\t},\r\n\t\t\tmin: 0,\r\n\t\t});\r\n\t}\r\n\r\n\tpublic validatePlaceholder(value?: string): void {\r\n\t\twatchString(this.component, '_placeholder', value);\r\n\t}\r\n\r\n\tpublic validateReadOnly(value?: boolean): void {\r\n\t\twatchBoolean(this.component, '_readOnly', value);\r\n\t}\r\n\r\n\tpublic validateResize(value?: CSSResize): void {\r\n\t\twatchValidator(\r\n\t\t\tthis.component,\r\n\t\t\t'_resize',\r\n\t\t\t(value) => typeof value === 'string' && (value === 'both' || value === 'horizontal' || value === 'none' || value === 'vertical'),\r\n\t\t\tnew Set('String {both, horizontal, vertical, none}'),\r\n\t\t\tvalue\r\n\t\t);\r\n\t}\r\n\r\n\tpublic validateRequired(value?: boolean): void {\r\n\t\twatchBoolean(this.component, '_required', value);\r\n\t}\r\n\r\n\tpublic validateRows(value?: number): void {\r\n\t\twatchNumber(this.component, '_rows', value);\r\n\t}\r\n\r\n\tpublic validateValue(value?: string): void {\r\n\t\twatchString(this.component, '_value', value, {\r\n\t\t\thooks: {\r\n\t\t\t\tafterPatch: this.afterSyncCharCounter,\r\n\t\t\t},\r\n\t\t});\r\n\t\tthis.setFormAssociatedValue(this.component._value as string);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tsuper.componentWillLoad();\r\n\t\tthis.validateHasCounter(this.component._hasCounter);\r\n\t\tthis.validateMaxLength(this.component._maxLength);\r\n\t\tthis.validatePlaceholder(this.component._placeholder);\r\n\t\tthis.validateReadOnly(this.component._readOnly);\r\n\t\tthis.validateResize(this.component._resize);\r\n\t\tthis.validateRequired(this.component._required);\r\n\t\tthis.validateRows(this.component._rows);\r\n\t\tthis.validateValue(this.component._value);\r\n\t}\r\n}\r\n","@import url(../input-line.css);\n","import { Component, Element, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { InputTypeOnDefault } from '../../types/input/types';\r\nimport { LabelWithExpertSlotPropType } from '../../types/props/label';\r\nimport { nonce } from '../../utils/dev.utils';\r\nimport { setState } from '../../utils/prop.validators';\r\nimport { propagateFocus } from '../../utils/reuse';\r\nimport { getRenderStates } from '../input/controller';\r\nimport { TextareaController } from './controller';\r\nimport { ComponentApi, CSSResize, States } from './types';\r\n\r\n/**\r\n * https://stackoverflow.com/questions/17772260/textarea-auto-height\r\n */\r\nconst increaseTextareaHeight = (el: HTMLTextAreaElement): number => {\r\n\tel.style.overflow = 'hidden'; // verhindert, dass ein Scrollbalken kurz angezeigt wird\r\n\tconst currentRows = el.rows;\r\n\tconst rowHeight = el.clientHeight / currentRows;\r\n\tel.rows = 1;\r\n\tconst nextRows = Math.round(el.scrollHeight / rowHeight);\r\n\tel.rows = currentRows;\r\n\treturn nextRows;\r\n};\r\n\r\n/**\r\n * @slot - Die Beschriftung des Eingabefeldes.\r\n */\r\n@Component({\r\n\ttag: 'kol-textarea',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolTextarea implements ComponentApi {\r\n\t@Element() private readonly host?: HTMLKolTextareaElement;\r\n\tprivate ref?: HTMLTextAreaElement;\r\n\r\n\tprivate readonly catchRef = (ref?: HTMLTextAreaElement) => {\r\n\t\tthis.ref = ref;\r\n\t\tpropagateFocus(this.host, this.ref);\r\n\t};\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst { ariaDescribedBy } = getRenderStates(this.state);\r\n\t\tconst showExpertSlot = this.state._label === ''; // _label=\"\" or _label\r\n\t\tconst showDefaultSlot = this.state._label === '…'; // deprecated: default slot will be removed in v2.0.0\r\n\t\treturn (\r\n\t\t\t<Host class={{ 'has-value': this.state._hasValue }}>\r\n\t\t\t\t<kol-input\r\n\t\t\t\t\tclass={{ textarea: true, 'hide-label': !!this.state._hideLabel, 'has-counter': !!this.state._hasCounter }}\r\n\t\t\t\t\t_alert={this.state._alert}\r\n\t\t\t\t\t_currentLength={this.state._currentLength}\r\n\t\t\t\t\t_disabled={this.state._disabled}\r\n\t\t\t\t\t_error={this.state._error}\r\n\t\t\t\t\t_hasCounter={this.state._hasCounter}\r\n\t\t\t\t\t_hideLabel={this.state._hideLabel}\r\n\t\t\t\t\t_hint={this.state._hint}\r\n\t\t\t\t\t_id={this.state._id}\r\n\t\t\t\t\t_maxLength={this.state._maxLength}\r\n\t\t\t\t\t_readOnly={this.state._readOnly}\r\n\t\t\t\t\t_required={this.state._required}\r\n\t\t\t\t\t_touched={this.state._touched}\r\n\t\t\t\t\tonClick={() => this.ref?.focus()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span slot=\"label\">{showExpertSlot ? <slot name=\"expert\"></slot> : showDefaultSlot ? <slot></slot> : this.state._label}</span>\r\n\t\t\t\t\t<div slot=\"input\">\r\n\t\t\t\t\t\t<textarea\r\n\t\t\t\t\t\t\tref={this.catchRef}\r\n\t\t\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\t\t\taccessKey={this.state._accessKey}\r\n\t\t\t\t\t\t\taria-describedby={ariaDescribedBy.length > 0 ? ariaDescribedBy.join(' ') : undefined}\r\n\t\t\t\t\t\t\taria-labelledby={`${this.state._id}-label`}\r\n\t\t\t\t\t\t\tautoCapitalize=\"off\"\r\n\t\t\t\t\t\t\tautoCorrect=\"off\"\r\n\t\t\t\t\t\t\tdisabled={this.state._disabled}\r\n\t\t\t\t\t\t\tid={this.state._id}\r\n\t\t\t\t\t\t\tmaxlength={this.state._maxLength}\r\n\t\t\t\t\t\t\tname={this.state._name}\r\n\t\t\t\t\t\t\treadOnly={this.state._readOnly}\r\n\t\t\t\t\t\t\trequired={this.state._required}\r\n\t\t\t\t\t\t\trows={this.state._rows}\r\n\t\t\t\t\t\t\tplaceholder={this.state._placeholder}\r\n\t\t\t\t\t\t\tspellcheck=\"false\"\r\n\t\t\t\t\t\t\t{...this.controller.onFacade}\r\n\t\t\t\t\t\t\tonKeyUp={this.onChange}\r\n\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\tresize: this.state._resize,\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\tvalue={this.state._value}\r\n\t\t\t\t\t\t></textarea>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</kol-input>\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate readonly controller: TextareaController;\r\n\r\n\t/**\r\n\t * Gibt an, mit welcher Tastenkombination man das interaktive Element der Komponente auslösen oder fokussieren kann.\r\n\t */\r\n\t@Prop() public _accessKey?: string;\r\n\r\n\t/**\r\n\t * Passt die Höhe des Eingabefeldes automatisch an den Füllstand an.\r\n\t */\r\n\t@Prop() public _adjustHeight?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt an, ob der Screenreader die Meldung aktiv vorlesen soll.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _alert?: boolean = true;\r\n\r\n\t/**\r\n\t * Deaktiviert das interaktive Element in der Komponente und erlaubt keine Interaktion mehr damit.\r\n\t */\r\n\t@Prop() public _disabled?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Text für eine Fehlermeldung an.\r\n\t */\r\n\t@Prop() public _error?: string;\r\n\r\n\t/**\r\n\t * Aktiviert den Zeichenanzahlzähler am unteren Rand des Eingabefeldes.\r\n\t */\r\n\t@Prop() public _hasCounter?: boolean;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t */\r\n\t@Prop() public _hideLabel?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Hinweistext an.\r\n\t */\r\n\t@Prop() public _hint?: string = '';\r\n\r\n\t/**\r\n\t * Gibt die interne ID des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _id?: string;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _label!: LabelWithExpertSlotPropType;\r\n\r\n\t/**\r\n\t * Gibt an, wie viele Zeichen maximal eingegeben werden können.\r\n\t */\r\n\t@Prop() public _maxLength?: number;\r\n\r\n\t/**\r\n\t * Gibt den technischen Namen des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _name?: string;\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Funktionen für das Input-Event an.\r\n\t */\r\n\t@Prop() public _on?: InputTypeOnDefault;\r\n\r\n\t/**\r\n\t * Gibt den Platzhalter des Eingabefeldes an, wenn es leer ist.\r\n\t */\r\n\t@Prop() public _placeholder?: string;\r\n\r\n\t/**\r\n\t * Setzt das Eingabefeld in den schreibgeschützten Modus.\r\n\t */\r\n\t@Prop() public _readOnly?: boolean;\r\n\r\n\t/**\r\n\t * Gibt an, ob die Größe des Eingabefeldes von Nutzer:innen geändert werden kann. (https://developer.mozilla.org/de/docs/Web/CSS/resize)\r\n\t */\r\n\t@Prop() public _resize?: CSSResize = 'vertical';\r\n\r\n\t/**\r\n\t * Macht das Eingabeelement zu einem Pflichtfeld.\r\n\t */\r\n\t@Prop() public _required?: boolean;\r\n\r\n\t/**\r\n\t * Gibt die Anzahl der anzuzeigenden Zeilen des Eingabefeldes an.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: false }) public _rows?: number;\r\n\r\n\t/**\r\n\t * Selector for synchronizing the value with another input element.\r\n\t * @internal\r\n\t */\r\n\t@Prop() public _syncValueBySelector?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welchen Tab-Index das primäre Element in der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)\r\n\t */\r\n\t@Prop() public _tabIndex?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/berührt wurde.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _touched?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt den Wert des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _value?: string;\r\n\r\n\t@State() public state: States = {\r\n\t\t_adjustHeight: false,\r\n\t\t_currentLength: 0,\r\n\t\t_hasValue: false,\r\n\t\t_id: nonce(), // ⚠ required\r\n\t\t_label: false, // ⚠ required\r\n\t\t_resize: 'vertical',\r\n\t};\r\n\r\n\tpublic constructor() {\r\n\t\tthis.controller = new TextareaController(this, 'textarea', this.host);\r\n\t}\r\n\r\n\t@Watch('_accessKey')\r\n\tpublic validateAccessKey(value?: string): void {\r\n\t\tthis.controller.validateAccessKey(value);\r\n\t}\r\n\r\n\t@Watch('_adjustHeight')\r\n\tpublic validateAdjustHeight(value?: boolean): void {\r\n\t\tthis.controller.validateAdjustHeight(value);\r\n\t}\r\n\r\n\t@Watch('_alert')\r\n\tpublic validateAlert(value?: boolean): void {\r\n\t\tthis.controller.validateAlert(value);\r\n\t}\r\n\r\n\t@Watch('_disabled')\r\n\tpublic validateDisabled(value?: boolean): void {\r\n\t\tthis.controller.validateDisabled(value);\r\n\t}\r\n\r\n\t@Watch('_error')\r\n\tpublic validateError(value?: string): void {\r\n\t\tthis.controller.validateError(value);\r\n\t}\r\n\r\n\t@Watch('_hasCounter')\r\n\tpublic validateHasCounter(value?: boolean): void {\r\n\t\tthis.controller.validateHasCounter(value);\r\n\t}\r\n\r\n\t@Watch('_hideLabel')\r\n\tpublic validateHideLabel(value?: boolean): void {\r\n\t\tthis.controller.validateHideLabel(value);\r\n\t}\r\n\r\n\t@Watch('_hint')\r\n\tpublic validateHint(value?: string): void {\r\n\t\tthis.controller.validateHint(value);\r\n\t}\r\n\r\n\t@Watch('_id')\r\n\tpublic validateId(value?: string): void {\r\n\t\tthis.controller.validateId(value);\r\n\t}\r\n\r\n\t@Watch('_label')\r\n\tpublic validateLabel(value?: LabelWithExpertSlotPropType): void {\r\n\t\tthis.controller.validateLabel(value);\r\n\t}\r\n\r\n\t@Watch('_maxLength')\r\n\tpublic validateMaxLength(value?: number): void {\r\n\t\tthis.controller.validateMaxLength(value);\r\n\t}\r\n\r\n\t@Watch('_name')\r\n\tpublic validateName(value?: string): void {\r\n\t\tthis.controller.validateName(value);\r\n\t}\r\n\r\n\t@Watch('_on')\r\n\tpublic validateOn(value?: InputTypeOnDefault): void {\r\n\t\tthis.controller.validateOn(value);\r\n\t}\r\n\r\n\t@Watch('_placeholder')\r\n\tpublic validatePlaceholder(value?: string): void {\r\n\t\tthis.controller.validatePlaceholder(value);\r\n\t}\r\n\r\n\t@Watch('_readOnly')\r\n\tpublic validateReadOnly(value?: boolean): void {\r\n\t\tthis.controller.validateReadOnly(value);\r\n\t}\r\n\r\n\t@Watch('_resize')\r\n\tpublic validateResize(value?: CSSResize): void {\r\n\t\tthis.controller.validateResize(value);\r\n\t}\r\n\r\n\t@Watch('_required')\r\n\tpublic validateRequired(value?: boolean): void {\r\n\t\tthis.controller.validateRequired(value);\r\n\t}\r\n\r\n\t@Watch('_rows')\r\n\tpublic validateRows(value?: number): void {\r\n\t\tthis.controller.validateRows(value);\r\n\t}\r\n\r\n\t@Watch('_syncValueBySelector')\r\n\tpublic validateSyncValueBySelector(value?: string): void {\r\n\t\tthis.controller.validateSyncValueBySelector(value);\r\n\t}\r\n\r\n\t@Watch('_tabIndex')\r\n\tpublic validateTabIndex(value?: number): void {\r\n\t\tthis.controller.validateTabIndex(value);\r\n\t}\r\n\r\n\t@Watch('_touched')\r\n\tpublic validateTouched(value?: boolean): void {\r\n\t\tthis.controller.validateTouched(value);\r\n\t}\r\n\r\n\t@Watch('_value')\r\n\tpublic validateValue(value?: string): void {\r\n\t\tthis.controller.validateValue(value);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis._alert = this._alert === true;\r\n\t\tthis._touched = this._touched === true;\r\n\t\tthis.controller.componentWillLoad();\r\n\r\n\t\tthis.state._hasValue = !!this.state._value;\r\n\t\tthis.controller.addValueChangeListener((v) => (this.state._hasValue = !!v));\r\n\t}\r\n\r\n\tprivate readonly onChange = (event: Event) => {\r\n\t\tif (this.ref instanceof HTMLTextAreaElement) {\r\n\t\t\tsetState(this, '_currentLength', this.ref.value.length);\r\n\t\t\tif (this.state._adjustHeight) {\r\n\t\t\t\tthis._rows = increaseTextareaHeight(this.ref);\r\n\t\t\t}\r\n\t\t}\r\n\t\tif (typeof this.controller.onFacade.onChange === 'function') {\r\n\t\t\tthis.controller.onFacade.onChange(event);\r\n\t\t}\r\n\t};\r\n}\r\n"],"mappings":"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"}