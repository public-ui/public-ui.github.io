{"version":3,"names":["validateInputSelectList","option","label","length","disabled","trim","hasEnoughReadableChars","containsOnlyNumbers","a11yHint","Array","isArray","options","find","item","undefined","SelectController","InputIconController","constructor","component","name","host","super","this","keyOptionMap","Map","getOptionByKey","key","get","isValueInOptions","value","filterValuesInOptions","values","filter","beforePatchListValue","_value","nextState","list","has","state","_list","clear","fillKeyOptionMap","selected","_multiple","set","onStateChange","validateHeight","watchString","validateList","watchJsonArrayString","hooks","beforePatch","validateMultiple","watchBoolean","validateRequired","validateSize","watchNumber","min","validateValue","setFormAssociatedValue","componentWillLoad","onChange","timeout","setTimeout","clearTimeout","STATE_CHANGE_EVENT","_height","_required","_size","defaultStyleCss","isSelected","valueList","optionValue","includes","KolSelect","renderOptgroup","optgroup","preKey","h","_a","map","index","render","ariaDescribedBy","getRenderStates","showExpertSlot","_label","showDefaultSlot","Host","class","_hasValue","_hideLabel","select","_disabled","_error","_hint","_icon","_id","_touched","onClick","ref","focus","slot","Object","assign","catchRef","title","accessKey","_accessKey","join","autoCapitalize","autoCorrect","id","multiple","_name","required","size","spellcheck","style","height","controller","onFacade","onBlur","onFocus","hostRef","propagateFocus","event","from","_b","_on","nonce","validateAccessKey","validateAlert","validateDisabled","validateError","validateHideLabel","validateHint","validateIcon","validateId","validateLabel","validateName","validateOn","validateSyncValueBySelector","validateTabIndex","validateTouched","_alert","addValueChangeListener","v"],"sources":["src/utils/validators/list.ts","src/components/select/controller.ts","src/components/select/style.css?tag=kol-select&mode=default&encapsulation=shadow","src/components/select/component.tsx"],"sourcesContent":["import { Optgroup, SelectOption } from '../../types/input/types';\r\nimport { containsOnlyNumbers, hasEnoughReadableChars } from '../../types/props/label';\r\nimport { a11yHint } from '../a11y.tipps';\r\n\r\nexport const validateInputSelectList = <T>(option: SelectOption<T>): boolean => {\r\n\tif (typeof option === 'object' && option !== null) {\r\n\t\tif (typeof option.label === 'string' && option.label.length > 0) {\r\n\t\t\toption.disabled = option.disabled === true;\r\n\t\t\toption.label = `${option.label}`.trim();\r\n\t\t\tif (hasEnoughReadableChars(option.label, 3) === false && containsOnlyNumbers(option.label) === false) {\r\n\t\t\t\ta11yHint(\r\n\t\t\t\t\t`Ein abweichendes Aria-Label (${option.label}) ist nicht barrierefrei. Ein abweichendes Aria-Label sollte aus mindestens drei lesbaren Zeichen bestehen.`\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\tif (Array.isArray((option as Optgroup<T>).options)) {\r\n\t\t\t\treturn (\r\n\t\t\t\t\t(option as Optgroup<T>).options.find((item) => {\r\n\t\t\t\t\t\treturn validateInputSelectList(item) === false;\r\n\t\t\t\t\t}) === undefined\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t\treturn true;\r\n\t\t} else if (typeof option.label === 'number') {\r\n\t\t\treturn true;\r\n\t\t}\r\n\t}\r\n\treturn false;\r\n};\r\n","import { Generic } from '@a11y-ui/core';\r\n\r\nimport { Stringified } from '../../types/common';\r\nimport { Optgroup, Option, SelectOption } from '../../types/input/types';\r\nimport { W3CInputValue } from '../../types/w3c';\r\nimport { watchBoolean, watchJsonArrayString, watchNumber, watchString } from '../../utils/prop.validators';\r\nimport { STATE_CHANGE_EVENT } from '../../utils/validator';\r\nimport { validateInputSelectList } from '../../utils/validators/list';\r\nimport { InputIconController } from '../@deprecated/input/controller-icon';\r\nimport { fillKeyOptionMap } from '../input-radio/controller';\r\nimport { Props, Watches } from './types';\r\n\r\nexport class SelectController extends InputIconController implements Watches {\r\n\tprotected readonly component: Generic.Element.Component & Props;\r\n\tprivate onStateChange!: () => void;\r\n\tprivate readonly keyOptionMap = new Map<string, Option<W3CInputValue>>();\r\n\r\n\tpublic constructor(component: Generic.Element.Component & Props, name: string, host?: HTMLElement) {\r\n\t\tsuper(component, name, host);\r\n\t\tthis.component = component;\r\n\t}\r\n\r\n\tpublic readonly getOptionByKey = (key: string): Option<W3CInputValue> | undefined => this.keyOptionMap.get(key);\r\n\r\n\tprivate readonly isValueInOptions = (value: string, options: SelectOption<W3CInputValue>[]): boolean => {\r\n\t\treturn (\r\n\t\t\toptions.find((option) =>\r\n\t\t\t\ttypeof (option as Option<W3CInputValue>).value === 'string'\r\n\t\t\t\t\t? (option as Option<W3CInputValue>).value === value\r\n\t\t\t\t\t: Array.isArray((option as Optgroup<string>).options)\r\n\t\t\t\t\t? this.isValueInOptions(value, (option as Optgroup<string>).options)\r\n\t\t\t\t\t: false\r\n\t\t\t) !== undefined\r\n\t\t);\r\n\t};\r\n\r\n\tprivate readonly filterValuesInOptions = (values: string[], options: SelectOption<W3CInputValue>[]): string[] => {\r\n\t\treturn values.filter((value) => this.isValueInOptions(value, options) !== undefined);\r\n\t};\r\n\r\n\tprivate readonly beforePatchListValue = (_value: unknown, nextState: Map<string, unknown>): void => {\r\n\t\tconst list = nextState.has('_list') ? nextState.get('_list') : this.component.state._list;\r\n\t\tif (Array.isArray(list) && list.length > 0) {\r\n\t\t\tthis.keyOptionMap.clear();\r\n\t\t\tfillKeyOptionMap(this.keyOptionMap, list as SelectOption<W3CInputValue>[]);\r\n\t\t\tconst value = nextState.has('_value') ? nextState.get('_value') : this.component.state._value;\r\n\t\t\tconst selected = this.filterValuesInOptions(Array.isArray(value) && value.length > 0 ? (value as string[]) : [], list as SelectOption<W3CInputValue>[]);\r\n\t\t\tif (this.component._multiple === false && selected.length === 0) {\r\n\t\t\t\tnextState.set('_value', [\r\n\t\t\t\t\t(\r\n\t\t\t\t\t\tlist[0] as {\r\n\t\t\t\t\t\t\tvalue: string;\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t).value,\r\n\t\t\t\t]);\r\n\t\t\t\tthis.onStateChange();\r\n\t\t\t} else if (Array.isArray(value) && selected.length < value.length) {\r\n\t\t\t\tnextState.set('_value', selected);\r\n\t\t\t\tthis.onStateChange();\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\t/**\r\n\t * @see: components/abbr/component.tsx (@Watch)\r\n\t * @deprecated Use _size instead.\r\n\t */\r\n\tpublic validateHeight(value?: string): void {\r\n\t\twatchString(this.component, '_height', value);\r\n\t}\r\n\r\n\tpublic validateList<T>(value?: SelectOption<T>[] | string): void {\r\n\t\twatchJsonArrayString(this.component, '_list', validateInputSelectList, value, undefined, {\r\n\t\t\thooks: {\r\n\t\t\t\tbeforePatch: this.beforePatchListValue,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\tpublic validateMultiple(value?: boolean): void {\r\n\t\twatchBoolean(this.component, '_multiple', value, {\r\n\t\t\thooks: {\r\n\t\t\t\tbeforePatch: this.beforePatchListValue,\r\n\t\t\t},\r\n\t\t});\r\n\t\t// if (value === true) {\r\n\t\t// \tdevHint(\r\n\t\t// \t\t'[KolSelect] Aktuell wird die Mehrfachauswahl noch nicht unterstützt. Wir sind dran die Mehrfachauswahl funktionsfähig zu implementieren, da der Browser-Standard hier ein paar Lücken hat.'\r\n\t\t// \t);\r\n\t\t// \tdevHint('[KolSelect] Bei der Mehrfachauswahl sollte zusätzlich auch die Listenlänge (size) gesetzt werden.');\r\n\t\t// }\r\n\t}\r\n\r\n\tpublic validateRequired(value?: boolean): void {\r\n\t\twatchBoolean(this.component, '_required', value);\r\n\t}\r\n\r\n\tpublic validateSize(value?: number): void {\r\n\t\twatchNumber(this.component, '_size', value, {\r\n\t\t\tmin: 1,\r\n\t\t});\r\n\t}\r\n\r\n\tpublic validateValue(value?: Stringified<W3CInputValue[]>): void {\r\n\t\twatchJsonArrayString(this.component, '_value', () => true, value, undefined, {\r\n\t\t\thooks: {\r\n\t\t\t\tbeforePatch: this.beforePatchListValue,\r\n\t\t\t},\r\n\t\t});\r\n\t\tthis.setFormAssociatedValue(this.component._value as string);\r\n\t}\r\n\r\n\tpublic componentWillLoad(onChange?: (event: Event) => void): void {\r\n\t\tsuper.componentWillLoad();\r\n\r\n\t\tthis.onStateChange = () => {\r\n\t\t\tif (typeof onChange === 'function') {\r\n\t\t\t\tconst timeout = setTimeout(() => {\r\n\t\t\t\t\tclearTimeout(timeout);\r\n\t\t\t\t\tonChange(STATE_CHANGE_EVENT);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t};\r\n\r\n\t\tthis.validateHeight(this.component._height);\r\n\t\tthis.validateList(this.component._list);\r\n\t\tthis.validateMultiple(this.component._multiple);\r\n\t\tthis.validateRequired(this.component._required);\r\n\t\tthis.validateSize(this.component._size);\r\n\t\tthis.validateValue(this.component._value);\r\n\t}\r\n}\r\n","@import url(../input-line.css);\n","import { Component, Element, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { Stringified } from '../../types/common';\r\nimport { KoliBriHorizontalIcon } from '../../types/icon';\r\nimport { InputTypeOnDefault, Optgroup, Option, SelectOption } from '../../types/input/types';\r\nimport { LabelWithExpertSlotPropType } from '../../types/props/label';\r\nimport { W3CInputValue } from '../../types/w3c';\r\nimport { nonce } from '../../utils/dev.utils';\r\nimport { propagateFocus } from '../../utils/reuse';\r\nimport { getRenderStates } from '../input/controller';\r\nimport { SelectController } from './controller';\r\nimport { ComponentApi, States } from './types';\r\n\r\nconst isSelected = (valueList: unknown[] | null, optionValue: unknown): boolean => {\r\n\treturn Array.isArray(valueList) && valueList.includes(optionValue);\r\n};\r\n\r\n/**\r\n * @slot - Die Beschriftung des Eingabefeldes.\r\n */\r\n@Component({\r\n\ttag: 'kol-select',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolSelect implements ComponentApi {\r\n\t@Element() private readonly host?: HTMLKolSelectElement;\r\n\tprivate ref?: HTMLSelectElement;\r\n\r\n\tprivate readonly catchRef = (ref?: HTMLSelectElement) => {\r\n\t\tthis.ref = ref;\r\n\t\tpropagateFocus(this.host, this.ref);\r\n\t};\r\n\r\n\tprivate renderOptgroup(optgroup: Optgroup<string>, preKey: string): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<optgroup disabled={optgroup.disabled === true} label={optgroup.label}>\r\n\t\t\t\t{optgroup.options?.map((option: SelectOption<W3CInputValue>, index: number) => {\r\n\t\t\t\t\tconst key = `${preKey}-${index}`;\r\n\t\t\t\t\tif (Array.isArray((option as Optgroup<string>).options)) {\r\n\t\t\t\t\t\treturn this.renderOptgroup(option as Optgroup<string>, key);\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\tdisabled={option.disabled === true}\r\n\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t// label={option.label}\r\n\t\t\t\t\t\t\t\tselected={isSelected(this.state._value, (option as Option<W3CInputValue>).value)}\r\n\t\t\t\t\t\t\t\tvalue={key}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{option.label}\r\n\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t}\r\n\t\t\t\t})}\r\n\t\t\t</optgroup>\r\n\t\t);\r\n\t}\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst { ariaDescribedBy } = getRenderStates(this.state);\r\n\t\tconst showExpertSlot = this.state._label === ''; // _label=\"\" or _label\r\n\t\tconst showDefaultSlot = this.state._label === '…'; // deprecated: default slot will be removed in v2.0.0\r\n\t\treturn (\r\n\t\t\t<Host class={{ 'has-value': this.state._hasValue }}>\r\n\t\t\t\t<kol-input\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\t'hide-label': !!this.state._hideLabel,\r\n\t\t\t\t\t\tselect: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t_disabled={this.state._disabled}\r\n\t\t\t\t\t_error={this.state._error}\r\n\t\t\t\t\t_hideLabel={this.state._hideLabel}\r\n\t\t\t\t\t_hint={this.state._hint}\r\n\t\t\t\t\t_icon={this.state._icon}\r\n\t\t\t\t\t_id={this.state._id}\r\n\t\t\t\t\t_required={this.state._required}\r\n\t\t\t\t\t_touched={this.state._touched}\r\n\t\t\t\t\tonClick={() => this.ref?.focus()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span slot=\"label\">{showExpertSlot ? <slot name=\"expert\"></slot> : showDefaultSlot ? <slot></slot> : this.state._label}</span>\r\n\t\t\t\t\t<select\r\n\t\t\t\t\t\tref={this.catchRef}\r\n\t\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\t\taccessKey={this.state._accessKey}\r\n\t\t\t\t\t\taria-describedby={ariaDescribedBy.length > 0 ? ariaDescribedBy.join(' ') : undefined}\r\n\t\t\t\t\t\taria-labelledby={`${this.state._id}-label`}\r\n\t\t\t\t\t\tautoCapitalize=\"off\"\r\n\t\t\t\t\t\tautoCorrect=\"off\"\r\n\t\t\t\t\t\tdisabled={this.state._disabled}\r\n\t\t\t\t\t\tid={this.state._id}\r\n\t\t\t\t\t\tmultiple={this.state._multiple}\r\n\t\t\t\t\t\tname={this.state._name}\r\n\t\t\t\t\t\trequired={this.state._required}\r\n\t\t\t\t\t\tsize={this.state._size}\r\n\t\t\t\t\t\tslot=\"input\"\r\n\t\t\t\t\t\tspellcheck=\"false\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\theight: this.state._height,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t{...{\r\n\t\t\t\t\t\t\tonClick: this.controller.onFacade.onClick,\r\n\t\t\t\t\t\t\tonBlur: this.controller.onFacade.onBlur,\r\n\t\t\t\t\t\t\tonFocus: this.controller.onFacade.onFocus,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{this.state._list.map((option, index) => {\r\n\t\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t\t * Damit der Value einer Option ein beliebigen Typ haben kann\r\n\t\t\t\t\t\t\t * muss man auf HTML-Ebene den Value auf einen String-Wert\r\n\t\t\t\t\t\t\t * mappen. Das tun wir mittels der Map.\r\n\t\t\t\t\t\t\t */\r\n\t\t\t\t\t\t\tconst key = `-${index}`;\r\n\t\t\t\t\t\t\tif (Array.isArray((option as unknown as Optgroup<string>).options)) {\r\n\t\t\t\t\t\t\t\treturn this.renderOptgroup(option as unknown as Optgroup<string>, key);\r\n\t\t\t\t\t\t\t} else {\r\n\t\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t\t<option\r\n\t\t\t\t\t\t\t\t\t\tdisabled={option.disabled === true}\r\n\t\t\t\t\t\t\t\t\t\tkey={key}\r\n\t\t\t\t\t\t\t\t\t\t// label={option.label}\r\n\t\t\t\t\t\t\t\t\t\tselected={isSelected(this.state._value, (option as unknown as Option<W3CInputValue>).value)}\r\n\t\t\t\t\t\t\t\t\t\tvalue={key}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{option.label}\r\n\t\t\t\t\t\t\t\t\t</option>\r\n\t\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t</select>\r\n\t\t\t\t</kol-input>\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate readonly controller: SelectController;\r\n\r\n\t/**\r\n\t * Gibt an, mit welcher Tastenkombination man das interaktive Element der Komponente auslösen oder fokussieren kann.\r\n\t */\r\n\t@Prop() public _accessKey?: string;\r\n\r\n\t/**\r\n\t * Gibt an, ob der Screenreader die Meldung aktiv vorlesen soll.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _alert?: boolean = true;\r\n\r\n\t/**\r\n\t * Deaktiviert das interaktive Element in der Komponente und erlaubt keine Interaktion mehr damit.\r\n\t */\r\n\t@Prop() public _disabled?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Text für eine Fehlermeldung an.\r\n\t */\r\n\t@Prop() public _error?: string;\r\n\r\n\t/**\r\n\t * Gibt an, ob eine individuelle Höhe übergeben werden soll.\r\n\t *\r\n\t * @deprecated Use _size instead.\r\n\t */\r\n\t@Prop() public _height?: string;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t */\r\n\t@Prop() public _hideLabel?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Hinweistext an.\r\n\t */\r\n\t@Prop() public _hint?: string = '';\r\n\r\n\t/**\r\n\t * Setzt die Iconklasse (z.B.: `_icon=\"codicon codicon-home`).\r\n\t */\r\n\t@Prop() public _icon?: Stringified<KoliBriHorizontalIcon>;\r\n\r\n\t/**\r\n\t * Gibt die interne ID des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _id?: string;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _label!: LabelWithExpertSlotPropType;\r\n\r\n\t/**\r\n\t * Gibt den technischen Namen des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _list!: Stringified<SelectOption<W3CInputValue>[]>;\r\n\r\n\t/**\r\n\t * Gibt an, ob mehrere Werte eingegeben werden können.\r\n\t */\r\n\t@Prop() public _multiple?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt den technischen Namen des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _name?: string;\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Funktionen für das Input-Event an.\r\n\t */\r\n\t@Prop() public _on?: InputTypeOnDefault;\r\n\r\n\t/**\r\n\t * Macht das Eingabeelementzu einem Pflichtfeld.\r\n\t */\r\n\t@Prop() public _required?: boolean;\r\n\r\n\t/**\r\n\t * Wechselt das Eingabeelement in den Auswahlfeld modus und setzt die Höhe des Feldes.\r\n\t */\r\n\t@Prop() public _size?: number;\r\n\r\n\t/**\r\n\t * Selector for synchronizing the value with another input element.\r\n\t * @internal\r\n\t */\r\n\t@Prop() public _syncValueBySelector?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welchen Tab-Index das primäre Element in der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)\r\n\t */\r\n\t@Prop() public _tabIndex?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/berührt wurde.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _touched?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt den Wert des Eingabefeldes an.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: false }) public _value?: Stringified<W3CInputValue[]>;\r\n\r\n\t@State() public state: States = {\r\n\t\t_hasValue: false,\r\n\t\t_height: '',\r\n\t\t_id: nonce(), // ⚠ required\r\n\t\t_label: false, // ⚠ required\r\n\t\t_list: [],\r\n\t\t_multiple: false,\r\n\t\t_value: [],\r\n\t};\r\n\r\n\tpublic constructor() {\r\n\t\tthis.controller = new SelectController(this, 'textarea', this.host);\r\n\t}\r\n\r\n\t@Watch('_accessKey')\r\n\tpublic validateAccessKey(value?: string): void {\r\n\t\tthis.controller.validateAccessKey(value);\r\n\t}\r\n\r\n\t@Watch('_alert')\r\n\tpublic validateAlert(value?: boolean): void {\r\n\t\tthis.controller.validateAlert(value);\r\n\t}\r\n\r\n\t@Watch('_disabled')\r\n\tpublic validateDisabled(value?: boolean): void {\r\n\t\tthis.controller.validateDisabled(value);\r\n\t}\r\n\r\n\t@Watch('_error')\r\n\tpublic validateError(value?: string): void {\r\n\t\tthis.controller.validateError(value);\r\n\t}\r\n\r\n\t@Watch('_height')\r\n\tpublic validateHeight(value?: string): void {\r\n\t\tthis.controller.validateHeight(value);\r\n\t}\r\n\r\n\t@Watch('_hideLabel')\r\n\tpublic validateHideLabel(value?: boolean): void {\r\n\t\tthis.controller.validateHideLabel(value);\r\n\t}\r\n\r\n\t@Watch('_hint')\r\n\tpublic validateHint(value?: string): void {\r\n\t\tthis.controller.validateHint(value);\r\n\t}\r\n\r\n\t@Watch('_icon')\r\n\tpublic validateIcon(value?: Stringified<KoliBriHorizontalIcon>): void {\r\n\t\tthis.controller.validateIcon(value);\r\n\t}\r\n\r\n\t@Watch('_id')\r\n\tpublic validateId(value?: string): void {\r\n\t\tthis.controller.validateId(value);\r\n\t}\r\n\r\n\t@Watch('_label')\r\n\tpublic validateLabel(value?: LabelWithExpertSlotPropType): void {\r\n\t\tthis.controller.validateLabel(value);\r\n\t}\r\n\r\n\t@Watch('_list')\r\n\tpublic validateList(value?: Stringified<SelectOption<W3CInputValue>[]>): void {\r\n\t\tthis.controller.validateList(value);\r\n\t}\r\n\r\n\t@Watch('_multiple')\r\n\tpublic validateMultiple(value?: boolean): void {\r\n\t\tthis.controller.validateMultiple(value);\r\n\t}\r\n\r\n\t@Watch('_name')\r\n\tpublic validateName(value?: string): void {\r\n\t\tthis.controller.validateName(value);\r\n\t}\r\n\r\n\t@Watch('_on')\r\n\tpublic validateOn(value?: InputTypeOnDefault): void {\r\n\t\tthis.controller.validateOn(value);\r\n\t}\r\n\r\n\t@Watch('_required')\r\n\tpublic validateRequired(value?: boolean): void {\r\n\t\tthis.controller.validateRequired(value);\r\n\t}\r\n\r\n\t@Watch('_size')\r\n\tpublic validateSize(value?: number): void {\r\n\t\tthis.controller.validateSize(value);\r\n\t}\r\n\r\n\t@Watch('_syncValueBySelector')\r\n\tpublic validateSyncValueBySelector(value?: string): void {\r\n\t\tthis.controller.validateSyncValueBySelector(value);\r\n\t}\r\n\r\n\t@Watch('_tabIndex')\r\n\tpublic validateTabIndex(value?: number): void {\r\n\t\tthis.controller.validateTabIndex(value);\r\n\t}\r\n\r\n\t@Watch('_touched')\r\n\tpublic validateTouched(value?: boolean): void {\r\n\t\tthis.controller.validateTouched(value);\r\n\t}\r\n\r\n\t@Watch('_value')\r\n\tpublic validateValue(value?: Stringified<W3CInputValue[]>): void {\r\n\t\tthis.controller.validateValue(value);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis._alert = this._alert === true;\r\n\t\tthis._touched = this._touched === true;\r\n\t\tthis.controller.componentWillLoad(this.onChange);\r\n\r\n\t\tthis.state._hasValue = !!this.state._value;\r\n\t\tthis.controller.addValueChangeListener((v) => (this.state._hasValue = !!v));\r\n\t}\r\n\r\n\tprivate onChange = (event: Event): void => {\r\n\t\t/**\r\n\t\t * TODO: Find values via value keys.\r\n\t\t */\r\n\t\tthis._value = Array.from(this.ref?.options || [])\r\n\t\t\t.filter((option) => option.selected === true)\r\n\t\t\t.map((option) => this.controller.getOptionByKey(option.value)?.value as string);\r\n\t\tthis.controller.setFormAssociatedValue(this._value as unknown as string);\r\n\t\tif (typeof this.state._on?.onChange === 'function') {\r\n\t\t\tthis.state._on.onChange(event, this._value);\r\n\t\t}\r\n\t};\r\n}\r\n"],"mappings":"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"}