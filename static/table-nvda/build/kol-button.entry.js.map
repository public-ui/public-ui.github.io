{"version":3,"names":["defaultStyleCss","KolButton","this","catchRef","ref","propagateFocus","host","render","h","Host","class","button","_variant","_customClass","length","_accessKey","_ariaControls","_ariaCurrent","_ariaExpanded","_ariaLabel","_ariaSelected","_disabled","_hideLabel","_iconOnly","_icon","_iconAlign","_id","_label","_on","_role","_tabIndex","_tooltipAlign","_type","_value","name","slot"],"sources":["src/components/button/style.css?tag=kol-button&mode=default&encapsulation=shadow","src/components/button/shadow.tsx"],"sourcesContent":["@import url(../button.css);\n","import { Generic } from '@a11y-ui/core';\r\nimport { Component, Element, h, Host, JSX, Prop } from '@stencil/core';\r\n\r\nimport {\r\n\tAlternativButtonLinkRole,\r\n\tKoliBriButtonCallbacks,\r\n\tKoliBriButtonType,\r\n\tKoliBriButtonVariant,\r\n\tOptionalButtonProps,\r\n\tRequiredButtonProps,\r\n} from '../../types/button-link';\r\nimport { Stringified } from '../../types/common';\r\nimport { KoliBriIconProp } from '../../types/icon';\r\nimport { Align } from '../../types/props/align';\r\nimport { AriaCurrent } from '../../types/props/aria-current';\r\nimport { LabelWithExpertSlotPropType } from '../../types/props/label';\r\nimport { propagateFocus } from '../../utils/reuse';\r\n\r\n@Component({\r\n\ttag: 'kol-button',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolButton implements Generic.Element.Members<RequiredButtonProps, OptionalButtonProps> {\r\n\t@Element() private readonly host?: HTMLKolButtonElement;\r\n\tprivate ref?: HTMLKolButtonWcElement;\r\n\r\n\tprivate readonly catchRef = (ref?: HTMLKolButtonWcElement) => {\r\n\t\tthis.ref = ref;\r\n\t\tpropagateFocus(this.host, this.ref);\r\n\t};\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<Host>\r\n\t\t\t\t<kol-button-wc\r\n\t\t\t\t\tref={this.catchRef}\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\tbutton: true,\r\n\t\t\t\t\t\t[this._variant as string]: this._variant !== 'custom',\r\n\t\t\t\t\t\t[this._customClass as string]: this._variant === 'custom' && typeof this._customClass === 'string' && this._customClass.length > 0,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t_accessKey={this._accessKey}\r\n\t\t\t\t\t_ariaControls={this._ariaControls}\r\n\t\t\t\t\t_ariaCurrent={this._ariaCurrent}\r\n\t\t\t\t\t_ariaExpanded={this._ariaExpanded}\r\n\t\t\t\t\t_ariaLabel={this._ariaLabel}\r\n\t\t\t\t\t_ariaSelected={this._ariaSelected}\r\n\t\t\t\t\t_customClass={this._customClass}\r\n\t\t\t\t\t_disabled={this._disabled}\r\n\t\t\t\t\t_hideLabel={this._hideLabel || this._iconOnly}\r\n\t\t\t\t\t_icon={this._icon}\r\n\t\t\t\t\t_iconAlign={this._iconAlign}\r\n\t\t\t\t\t_id={this._id}\r\n\t\t\t\t\t_label={this._label}\r\n\t\t\t\t\t_on={this._on}\r\n\t\t\t\t\t_role={this._role}\r\n\t\t\t\t\t_tabIndex={this._tabIndex}\r\n\t\t\t\t\t_tooltipAlign={this._tooltipAlign}\r\n\t\t\t\t\t_type={this._type}\r\n\t\t\t\t\t_value={this._value}\r\n\t\t\t\t\t_variant={this._variant}\r\n\t\t\t\t>\r\n\t\t\t\t\t<slot name=\"expert\" slot=\"expert\"></slot>\r\n\t\t\t\t</kol-button-wc>\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Gibt an, mit welcher Tastenkombination man das interaktive Element der Komponente auslösen oder fokussieren kann.\r\n\t */\r\n\t@Prop() public _accessKey?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welche Elemente kontrolliert werden. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls)\r\n\t */\r\n\t@Prop() public _ariaControls?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welchen aktuellen Auswahlstatus das interaktive Element der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current)\r\n\t */\r\n\t@Prop() public _ariaCurrent?: AriaCurrent;\r\n\r\n\t/**\r\n\t * Gibt an, ob durch das interaktive Element in der Komponente etwas aufgeklappt wurde. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded)\r\n\t */\r\n\t@Prop() public _ariaExpanded?: boolean;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t *\r\n\t * @deprecated use _label instead\r\n\t */\r\n\t@Prop() public _ariaLabel?: string;\r\n\r\n\t/**\r\n\t * Gibt an, ob interaktive Element in der Komponente ausgewählt ist (z.B. role=tab). (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-selected)\r\n\t */\r\n\t@Prop() public _ariaSelected?: boolean;\r\n\r\n\t/**\r\n\t * Gibt an, welche Custom-Class übergeben werden soll, wenn _variant=\"custom\" gesetzt ist.\r\n\t */\r\n\t@Prop() public _customClass?: string;\r\n\r\n\t/**\r\n\t * Deaktiviert das interaktive Element in der Komponente und erlaubt keine Interaktion mehr damit.\r\n\t */\r\n\t@Prop() public _disabled?: boolean = false;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t */\r\n\t@Prop() public _hideLabel?: boolean = false;\r\n\r\n\t/**\r\n\t * Setzt die Iconklasse (z.B.: `_icon=\"codicon codicon-home`).\r\n\t */\r\n\t@Prop() public _icon?: Stringified<KoliBriIconProp>;\r\n\r\n\t/**\r\n\t * Deprecated: Gibt an, ob das Icon links oder rechts von der Beschriftung angezeigt werden soll.\r\n\t *\r\n\t * @deprecated\r\n\t */\r\n\t@Prop() public _iconAlign?: Align;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t * @deprecated use _hide-label\r\n\t */\r\n\t@Prop() public _iconOnly?: boolean;\r\n\r\n\t/**\r\n\t * Gibt die interne ID des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _id?: string;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _label!: LabelWithExpertSlotPropType;\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Funktionen für die Button-Events an.\r\n\t */\r\n\t@Prop() public _on?: KoliBriButtonCallbacks<unknown>;\r\n\r\n\t/**\r\n\t * Gibt die Rolle des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _role?: AlternativButtonLinkRole;\r\n\r\n\t/**\r\n\t * Gibt an, welchen Tab-Index das primäre Element in der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)\r\n\t */\r\n\t@Prop() public _tabIndex?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob der Tooltip bevorzugt entweder oben, rechts, unten oder links angezeigt werden soll.\r\n\t */\r\n\t@Prop() public _tooltipAlign?: Align = 'top';\r\n\r\n\t/**\r\n\t * Setzt den Typ der Komponente oder des interaktiven Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _type?: KoliBriButtonType = 'button';\r\n\r\n\t/**\r\n\t * Gibt einen Wert an, den der Schalter bei einem Klick zurückgibt.\r\n\t */\r\n\t@Prop() public _value?: Stringified<unknown>;\r\n\r\n\t/**\r\n\t * Gibt an, welche Variante der Darstellung genutzt werden soll.\r\n\t */\r\n\t@Prop() public _variant?: KoliBriButtonVariant = 'normal';\r\n}\r\n"],"mappings":";;;qGAAA,MAAMA,EAAkB,w5B,MCyBXC,EAAS,M,yBAIJC,KAAAC,SAAYC,IAC5BF,KAAKE,IAAMA,EACXC,EAAeH,KAAKI,KAAMJ,KAAKE,IAAI,E,kNAgFC,M,gBAKC,M,qMAgDC,M,WAKI,S,oCAUM,Q,CAjJ1CG,SACN,OACCC,EAACC,EAAI,KACJD,EAAA,iBACCJ,IAAKF,KAAKC,SACVO,MAAO,CACNC,OAAQ,KACR,CAACT,KAAKU,UAAqBV,KAAKU,WAAa,SAC7C,CAACV,KAAKW,cAAyBX,KAAKU,WAAa,iBAAmBV,KAAKW,eAAiB,UAAYX,KAAKW,aAAaC,OAAS,GAElIC,WAAYb,KAAKa,WACjBC,cAAed,KAAKc,cACpBC,aAAcf,KAAKe,aACnBC,cAAehB,KAAKgB,cACpBC,WAAYjB,KAAKiB,WACjBC,cAAelB,KAAKkB,cACpBP,aAAcX,KAAKW,aACnBQ,UAAWnB,KAAKmB,UAChBC,WAAYpB,KAAKoB,YAAcpB,KAAKqB,UACpCC,MAAOtB,KAAKsB,MACZC,WAAYvB,KAAKuB,WACjBC,IAAKxB,KAAKwB,IACVC,OAAQzB,KAAKyB,OACbC,IAAK1B,KAAK0B,IACVC,MAAO3B,KAAK2B,MACZC,UAAW5B,KAAK4B,UAChBC,cAAe7B,KAAK6B,cACpBC,MAAO9B,KAAK8B,MACZC,OAAQ/B,KAAK+B,OACbrB,SAAUV,KAAKU,UAEfJ,EAAA,QAAM0B,KAAK,SAASC,KAAK,Y"}