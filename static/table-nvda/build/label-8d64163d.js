/*!
 * KoliBri - The accessible HTML-Standard
 */
import{a as t,u as a}from"./a11y.tipps-beae7792.js";import{a as e}from"./prop.validators-0a66a178.js";const o=/[a-zA-Z0-9äöüÄÖÜß]/g;const s=/^\d+$/;function n(t){var a;return typeof t==="string"?((a=t.match(o))===null||a===void 0?void 0:a.length)||0:0}function r(t,a=1){return n(t)>=a}function i(t){return s.test(t)}function l(e){var o;return{hooks:{afterPatch:(o,s,n,l)=>{var f,c;if(typeof((f=e.hooks)===null||f===void 0?void 0:f.afterPatch)==="function"){(c=e.hooks)===null||c===void 0?void 0:c.afterPatch(o,s,n,l)}if(typeof o==="string"&&r(o,3)===false&&i(o)===false){t(`The heading or label ("${o}") is not accessible. A label should consist of at least three readable characters.`)}if(typeof o==="string"&&o.length>80){a(`A heading or label should not be longer than 80 characters.`)}},beforePatch:(o=e.hooks)===null||o===void 0?void 0:o.beforePatch}}}const f=new Set(["string"]);const c=(t,a,o={})=>{e(t,"_label",(t=>typeof t==="string"),f,a,l(o))};const u=new Set(["string","false"]);const d=(t,a,o={})=>{if(a===""||a==="false"){a=false}e(t,"_label",(t=>t===false||typeof t==="string"),u,a,l(o))};export{d as a,i as c,r as h,c as v};
//# sourceMappingURL=label-8d64163d.js.map