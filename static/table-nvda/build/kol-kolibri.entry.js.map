{"version":3,"names":["defaultStyleCss","max","degreeToRadians","degree","Math","PI","getColorNumber","round","cos","KolKolibri","this","handleColorChange","nextValue","nextState","rgba","colorRgba","set","red","green","blue","devHint","_animate","_color","_labeled","render","fillColor","state","h","Host","role","translate","xmlns","viewBox","fill","d","x","y","validateAnimate","value","watchBoolean","validateColor","defaultValue","hooks","beforePatch","validateLabeled","componentWillLoad","componentDidRender","clearInterval","interval","setInterval","Object","assign","disconnectedCallback"],"sources":["src/components/kolibri/style.css?tag=kol-kolibri&mode=default&encapsulation=shadow","src/components/kolibri/component.tsx"],"sourcesContent":["@import url(../style.css);\ntext {\n\tfont-size: 90px;\n\tletter-spacing: normal;\n\tword-spacing: normal;\n}\n","import { Generic } from '@a11y-ui/core';\r\nimport { Component, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { translate } from '../../i18n';\r\nimport { Stringified } from '../../types/common';\r\nimport { PropColor, validateColor } from '../../types/props/color';\r\nimport { devHint } from '../../utils/a11y.tipps';\r\nimport { watchBoolean } from '../../utils/prop.validators';\r\nimport { colorRgba } from '../badge/color-rgba';\r\nimport { KoliBriKolibriAPI, KoliBriKolibriStates } from './types';\r\n\r\nconst max = 360;\r\nfunction degreeToRadians(degree: number): number {\r\n\treturn (degree * Math.PI) / 180;\r\n}\r\nfunction getColorNumber(degree: number): number {\r\n\treturn Math.round(((Math.cos(degreeToRadians(degree)) + 1) / 2) * 225);\r\n}\r\n\r\n@Component({\r\n\ttag: 'kol-kolibri',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolKolibri implements KoliBriKolibriAPI {\r\n\tpublic render(): JSX.Element {\r\n\t\tconst fillColor: string =\r\n\t\t\tthis.state._animate === true\r\n\t\t\t\t? `rgb(${getColorNumber(this.state._color.red)},${getColorNumber(this.state._color.green)},${getColorNumber(this.state._color.blue)})`\r\n\t\t\t\t: `rgb(${this.state._color.red},${this.state._color.green},${this.state._color.blue})`;\r\n\t\treturn (\r\n\t\t\t<Host>\r\n\t\t\t\t<svg role=\"img\" aria-label={translate('kol-kolibri-logo')} xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 600 600\" fill={fillColor}>\r\n\t\t\t\t\t<path d=\"M353 322L213 304V434L353 322Z\" />\r\n\t\t\t\t\t<path d=\"M209 564V304L149 434L209 564Z\" />\r\n\t\t\t\t\t<path d=\"M357 316L417 250L361 210L275 244L357 316Z\" />\r\n\t\t\t\t\t<path d=\"M329 218L237 92L250 222L272 241L329 218Z\" />\r\n\t\t\t\t\t<path d=\"M353 318L35 36L213 300L353 318Z\" />\r\n\t\t\t\t\t<path d=\"M391 286L565 272L421 252L391 286Z\" />\r\n\t\t\t\t\t{this.state._labeled === true && (\r\n\t\t\t\t\t\t<text x=\"250\" y=\"525\" fill={fillColor}>\r\n\t\t\t\t\t\t\tKoliBri\r\n\t\t\t\t\t\t</text>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</svg>\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate interval?: NodeJS.Timer;\r\n\r\n\t/**\r\n\t * Gibt an, ob das Bild-Logo farblich animiert werden soll.\r\n\t */\r\n\t@Prop() public _animate?: boolean;\r\n\r\n\t/**\r\n\t * Gibt an, in welcher Farbe das Bild-Logo initial dargestellt werden soll.\r\n\t */\r\n\t@Prop() public _color?: Stringified<PropColor> = '#003c78';\r\n\r\n\t/**\r\n\t * Gibt an, ob die Logo-Beschriftung angezeigt werden soll.\r\n\t */\r\n\t@Prop() public _labeled?: boolean;\r\n\r\n\t@State() public state: KoliBriKolibriStates = {\r\n\t\t_animate: false,\r\n\t\t_color: {\r\n\t\t\tred: 0,\r\n\t\t\tgreen: 60,\r\n\t\t\tblue: 120,\r\n\t\t},\r\n\t\t_labeled: true,\r\n\t};\r\n\r\n\t@Watch('_animate')\r\n\tpublic validateAnimate(value?: boolean): void {\r\n\t\twatchBoolean(this, '_animate', value);\r\n\t}\r\n\r\n\tprivate handleColorChange: Generic.Element.NextStateHooksCallback = (nextValue: unknown, nextState: Map<string, unknown>): void => {\r\n\t\tif (typeof nextValue === 'string') {\r\n\t\t\tconst rgba = colorRgba(nextValue);\r\n\t\t\tnextState.set('_color', {\r\n\t\t\t\tred: rgba[0],\r\n\t\t\t\tgreen: rgba[1],\r\n\t\t\t\tblue: rgba[2],\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tdevHint(`[KolKolibri] You used the complex color schema. For the KoliBri we use need the color as hex string.`);\r\n\t\t}\r\n\t};\r\n\r\n\t@Watch('_color')\r\n\tpublic validateColor(value?: Stringified<PropColor>): void {\r\n\t\tvalidateColor(this, value, {\r\n\t\t\tdefaultValue: '#003c78',\r\n\t\t\thooks: {\r\n\t\t\t\tbeforePatch: this.handleColorChange,\r\n\t\t\t},\r\n\t\t});\r\n\t}\r\n\r\n\t@Watch('_labeled')\r\n\tpublic validateLabeled(value?: boolean): void {\r\n\t\twatchBoolean(this, '_labeled', value);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis.validateAnimate(this._animate);\r\n\t\tthis.validateColor(this._color);\r\n\t\tthis.validateLabeled(this._labeled);\r\n\t}\r\n\r\n\tpublic componentDidRender(): void {\r\n\t\tclearInterval(this.interval as NodeJS.Timer);\r\n\t\tif (this.state._animate) {\r\n\t\t\tthis.interval = setInterval(() => {\r\n\t\t\t\tthis.state = {\r\n\t\t\t\t\t...this.state,\r\n\t\t\t\t\t_color: {\r\n\t\t\t\t\t\tred: (this.state._color.red + 1) % max,\r\n\t\t\t\t\t\tgreen: (this.state._color.green + 2) % max,\r\n\t\t\t\t\t\tblue: (this.state._color.blue + 3) % max,\r\n\t\t\t\t\t},\r\n\t\t\t\t};\r\n\t\t\t}, 50);\r\n\t\t}\r\n\t}\r\n\r\n\tpublic disconnectedCallback(): void {\r\n\t\tclearInterval(this.interval as NodeJS.Timer);\r\n\t}\r\n}\r\n"],"mappings":";;;+VAAA,MAAMA,EAAkB,qvBCWxB,MAAMC,EAAM,IACZ,SAASC,EAAgBC,GACxB,OAAQA,EAASC,KAAKC,GAAM,GAC7B,CACA,SAASC,EAAeH,GACvB,OAAOC,KAAKG,OAAQH,KAAKI,IAAIN,EAAgBC,IAAW,GAAK,EAAK,IACnE,C,MASaM,EAAU,M,yBAyDdC,KAAAC,kBAA4D,CAACC,EAAoBC,KACxF,UAAWD,IAAc,SAAU,CAClC,MAAME,EAAOC,EAAUH,GACvBC,EAAUG,IAAI,SAAU,CACvBC,IAAKH,EAAK,GACVI,MAAOJ,EAAK,GACZK,KAAML,EAAK,I,KAEN,CACNM,EAAQ,uG,uCA/BuC,U,mCAOH,CAC7CC,SAAU,MACVC,OAAQ,CACPL,IAAK,EACLC,MAAO,GACPC,KAAM,KAEPI,SAAU,K,CAhDJC,SACN,MAAMC,EACLf,KAAKgB,MAAML,WAAa,KACrB,OAAOf,EAAeI,KAAKgB,MAAMJ,OAAOL,QAAQX,EAAeI,KAAKgB,MAAMJ,OAAOJ,UAAUZ,EAAeI,KAAKgB,MAAMJ,OAAOH,SAC5H,OAAOT,KAAKgB,MAAMJ,OAAOL,OAAOP,KAAKgB,MAAMJ,OAAOJ,SAASR,KAAKgB,MAAMJ,OAAOH,QACjF,OACCQ,EAACC,EAAI,KACJD,EAAA,OAAKE,KAAK,MAAK,aAAaC,EAAU,oBAAqBC,MAAM,6BAA6BC,QAAQ,cAAcC,KAAMR,GACzHE,EAAA,QAAMO,EAAE,kCACRP,EAAA,QAAMO,EAAE,kCACRP,EAAA,QAAMO,EAAE,8CACRP,EAAA,QAAMO,EAAE,6CACRP,EAAA,QAAMO,EAAE,oCACRP,EAAA,QAAMO,EAAE,sCACPxB,KAAKgB,MAAMH,WAAa,MACxBI,EAAA,QAAMQ,EAAE,MAAMC,EAAE,MAAMH,KAAMR,GAAS,Y,CAqCnCY,gBAAgBC,GACtBC,EAAa7B,KAAM,WAAY4B,E,CAiBzBE,cAAcF,GACpBE,EAAc9B,KAAM4B,EAAO,CAC1BG,aAAc,UACdC,MAAO,CACNC,YAAajC,KAAKC,oB,CAMdiC,gBAAgBN,GACtBC,EAAa7B,KAAM,WAAY4B,E,CAGzBO,oBACNnC,KAAK2B,gBAAgB3B,KAAKW,UAC1BX,KAAK8B,cAAc9B,KAAKY,QACxBZ,KAAKkC,gBAAgBlC,KAAKa,S,CAGpBuB,qBACNC,cAAcrC,KAAKsC,UACnB,GAAItC,KAAKgB,MAAML,SAAU,CACxBX,KAAKsC,SAAWC,aAAY,KAC3BvC,KAAKgB,MAAKwB,OAAAC,OAAAD,OAAAC,OAAA,GACNzC,KAAKgB,OAAK,CACbJ,OAAQ,CACPL,KAAMP,KAAKgB,MAAMJ,OAAOL,IAAM,GAAKhB,EACnCiB,OAAQR,KAAKgB,MAAMJ,OAAOJ,MAAQ,GAAKjB,EACvCkB,MAAOT,KAAKgB,MAAMJ,OAAOH,KAAO,GAAKlB,IAEtC,GACC,G,EAIEmD,uBACNL,cAAcrC,KAAKsC,S"}