{"version":3,"names":["InputNumberController","InputIconController","constructor","component","name","host","super","this","numberOrIsoDateRegex","parseToString","value","Date","toISOString","validateIso8601","propName","afterPatch","parsedValue","parseFloat","valueMatched","watchValidator","undefined","test","Set","hooks","validateAutoComplete","validateList","watchJsonArrayString","item","onChange","event","target","_value","validateMax","validateMin","validatePlaceholder","watchString","validateReadOnly","watchBoolean","validateRequired","validateStep","watchNumber","validateType","validateValue","validateValueEx","setFormAssociatedValue","state","componentWillLoad","_autoComplete","_max","_min","_list","_placeholder","_readOnly","_required","_step","_type","defaultStyleCss","KolInputNumber","render","ariaDescribedBy","getRenderStates","hasList","Array","isArray","length","showExpertSlot","_label","showDefaultSlot","h","Host","class","_hasValue","_hideLabel","_disabled","_error","_hint","_icon","_id","_smartButton","_touched","slot","Object","assign","ref","catchRef","title","accessKey","_accessKey","join","autoCapitalize","autoComplete","autoCorrect","disabled","id","list","max","min","_name","readOnly","required","placeholder","step","spellcheck","type","controller","onFacade","onKeyUp","hostRef","propagateFocus","code","propagateSubmitEventToForm","form","nonce","validateAccessKey","validateAlert","validateDisabled","validateError","validateHideLabel","validateHint","validateIcon","validateId","validateLabel","validateName","validateOn","validateSmartButton","validateSyncValueBySelector","validateTabIndex","validateTouched","v","_alert","addValueChangeListener"],"sources":["src/components/input-number/controller.ts","src/components/input-number/style.css?tag=kol-input-number&mode=default&encapsulation=shadow","src/components/input-number/component.tsx"],"sourcesContent":["import { Generic } from '@a11y-ui/core';\r\n\r\nimport { Stringified } from '../../types/common';\r\nimport { InputNumberType } from '../../types/input/control/number';\r\nimport { Iso8601 } from '../../types/input/iso8601';\r\nimport { InputTypeOnOff } from '../../types/input/types';\r\nimport { watchBoolean, watchJsonArrayString, watchNumber, watchString, watchValidator } from '../../utils/prop.validators';\r\nimport { InputIconController } from '../@deprecated/input/controller-icon';\r\nimport { Props, Watches } from './types';\r\n\r\nexport class InputNumberController extends InputIconController implements Watches {\r\n\t/**\r\n\t * Regex to check whether a string is a number or a date in ISO-8601 format.\r\n\t * Test the regex here: https://regex101.com/r/ddGR4V/1\r\n\t */\r\n\tprivate readonly numberOrIsoDateRegex =\r\n\t\t/^\\d+$|(^\\d{4}-([0]\\d|1[0-2])-([0-2]\\d|3[01])([T ][0-2]\\d:[0-5]\\d:[0-5]\\d(?:\\.\\d+)?([+-][0-2]\\d:[0-5]\\d|Z)?)?$)|(^[0-2]\\d:[0-5]\\d(:[0-5]\\d)?$)/;\r\n\r\n\tprotected readonly component: Generic.Element.Component & Props;\r\n\r\n\tpublic constructor(component: Generic.Element.Component & Props, name: string, host?: HTMLElement) {\r\n\t\tsuper(component, name, host);\r\n\t\tthis.component = component;\r\n\t}\r\n\r\n\tpublic validateAutoComplete(value?: InputTypeOnOff): void {\r\n\t\twatchValidator(\r\n\t\t\tthis.component,\r\n\t\t\t'_autoComplete',\r\n\t\t\t(value): boolean => typeof value === 'string' && (value === 'on' || value === 'off'),\r\n\t\t\tnew Set(['on | off']),\r\n\t\t\tvalue\r\n\t\t);\r\n\t}\r\n\r\n\tpublic validateList(value?: Stringified<string[]>): void {\r\n\t\twatchJsonArrayString(this.component, '_list', (item: string) => typeof item === 'string', value);\r\n\t}\r\n\r\n\tprivate readonly parseToString = (value?: number | Date | string | null) => {\r\n\t\tif (typeof value === 'string') {\r\n\t\t\treturn value;\r\n\t\t}\r\n\t\tif (typeof value === 'number') {\r\n\t\t\treturn `${value}`;\r\n\t\t}\r\n\t\tif (typeof value === 'object' && value instanceof Date) {\r\n\t\t\treturn value.toISOString();\r\n\t\t}\r\n\t\treturn '';\r\n\t};\r\n\r\n\tprivate readonly validateIso8601 = (propName: string, value?: number | Iso8601 | null, afterPatch?: (v: string) => void) => {\r\n\t\tconst parsedValue = parseFloat(value as string);\r\n\t\tconst valueMatched = parsedValue == value;\r\n\t\treturn watchValidator(\r\n\t\t\tthis.component,\r\n\t\t\tpropName,\r\n\t\t\t(value): boolean => value === undefined || value === '' || (valueMatched && typeof parsedValue === 'number') || this.numberOrIsoDateRegex.test(value),\r\n\t\t\tnew Set(['number', 'Date', 'string{ISO-8601}']),\r\n\t\t\tthis.parseToString(value),\r\n\t\t\t{\r\n\t\t\t\thooks: {\r\n\t\t\t\t\tafterPatch: (value) => {\r\n\t\t\t\t\t\tif (typeof value === 'string' && afterPatch) {\r\n\t\t\t\t\t\t\tafterPatch(value);\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t},\r\n\t\t\t\t},\r\n\t\t\t}\r\n\t\t);\r\n\t};\r\n\r\n\tprotected onChange(event: Event): void {\r\n\t\tsuper.onChange(event);\r\n\r\n\t\t// set the value here when the value is switched between blank and set (or vice versa) to enable value resets via setting null as value.\r\n\t\tif (!!(event.target as HTMLInputElement).value !== !!this.component._value) {\r\n\t\t\tthis.component._value = (event.target as HTMLInputElement).value as number | Iso8601;\r\n\t\t}\r\n\t}\r\n\r\n\tpublic validateMax(value?: number | Iso8601): void {\r\n\t\tthis.validateIso8601('_max', value);\r\n\t}\r\n\r\n\tpublic validateMin(value?: number | Iso8601): void {\r\n\t\tthis.validateIso8601('_min', value);\r\n\t}\r\n\r\n\tpublic validatePlaceholder(value?: string): void {\r\n\t\twatchString(this.component, '_placeholder', value);\r\n\t}\r\n\r\n\tpublic validateReadOnly(value?: boolean): void {\r\n\t\twatchBoolean(this.component, '_readOnly', value);\r\n\t}\r\n\r\n\tpublic validateRequired(value?: boolean): void {\r\n\t\twatchBoolean(this.component, '_required', value);\r\n\t}\r\n\r\n\tpublic validateStep(value?: number): void {\r\n\t\twatchNumber(this.component, '_step', value);\r\n\t}\r\n\r\n\t/**\r\n\t * @see: components/abbr/component.tsx (@Watch)\r\n\t * @deprecated\r\n\t */\r\n\tpublic validateType(value?: InputNumberType): void {\r\n\t\twatchValidator(\r\n\t\t\tthis.component,\r\n\t\t\t'_type',\r\n\t\t\t(value): boolean =>\r\n\t\t\t\ttypeof value === 'string' &&\r\n\t\t\t\t(value === 'date' || value === 'datetime-local' || value === 'month' || value === 'number' || value === 'time' || value === 'week'),\r\n\t\t\tnew Set(['String {date, datetime-local, month, number, time, week}']),\r\n\t\t\tvalue\r\n\t\t);\r\n\t}\r\n\r\n\tpublic validateValue(value?: number | Iso8601 | null): void {\r\n\t\tthis.validateValueEx(value);\r\n\t}\r\n\r\n\t/**\r\n\t * Overload of validate value. Extends by an after patch callback function.\r\n\t */\r\n\tpublic validateValueEx(value?: number | Iso8601 | null, afterPatch?: (v: string) => void): void {\r\n\t\tthis.validateIso8601('_value', value, afterPatch);\r\n\t\tthis.setFormAssociatedValue(this.component.state._value as string);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tsuper.componentWillLoad();\r\n\t\tthis.validateAutoComplete(this.component._autoComplete);\r\n\t\tthis.validateMax(this.component._max);\r\n\t\tthis.validateMin(this.component._min);\r\n\t\tthis.validateList(this.component._list);\r\n\t\tthis.validatePlaceholder(this.component._placeholder);\r\n\t\tthis.validateReadOnly(this.component._readOnly);\r\n\t\tthis.validateRequired(this.component._required);\r\n\t\tthis.validateStep(this.component._step);\r\n\t\tthis.validateType(this.component._type);\r\n\t\tthis.validateValue(this.component._value);\r\n\t}\r\n}\r\n","@import url(../input-line.css);\n","import { Component, Element, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { ButtonProps } from '../../types/button-link';\r\nimport { Stringified } from '../../types/common';\r\nimport { KoliBriHorizontalIcon } from '../../types/icon';\r\nimport { InputNumberType } from '../../types/input/control/number';\r\nimport { Iso8601 } from '../../types/input/iso8601';\r\nimport { InputTypeOnDefault, InputTypeOnOff } from '../../types/input/types';\r\nimport { LabelWithExpertSlotPropType } from '../../types/props/label';\r\nimport { nonce } from '../../utils/dev.utils';\r\nimport { propagateFocus } from '../../utils/reuse';\r\nimport { propagateSubmitEventToForm } from '../form/controller';\r\nimport { getRenderStates } from '../input/controller';\r\nimport { InputNumberController } from './controller';\r\nimport { ComponentApi, States } from './types';\r\n\r\n/**\r\n * @slot - Die Beschriftung des Eingabefeldes.\r\n */\r\n@Component({\r\n\ttag: 'kol-input-number',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolInputNumber implements ComponentApi {\r\n\t@Element() private readonly host?: HTMLKolInputNumberElement;\r\n\tprivate ref?: HTMLInputElement;\r\n\r\n\tprivate readonly catchRef = (ref?: HTMLInputElement) => {\r\n\t\tthis.ref = ref;\r\n\t\tpropagateFocus(this.host, this.ref);\r\n\t};\r\n\r\n\tprivate readonly onKeyUp = (event: KeyboardEvent) => {\r\n\t\tif (event.code === 'Enter') {\r\n\t\t\tpropagateSubmitEventToForm({\r\n\t\t\t\tform: this.host,\r\n\t\t\t\tref: this.ref,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.controller.onFacade.onChange(event);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst { ariaDescribedBy } = getRenderStates(this.state);\r\n\t\tconst hasList = Array.isArray(this.state._list) && this.state._list.length > 0;\r\n\t\tconst showExpertSlot = this.state._label === ''; // _label=\"\" or _label\r\n\t\tconst showDefaultSlot = this.state._label === 'â€¦'; // deprecated: default slot will be removed in v2.0.0\r\n\t\treturn (\r\n\t\t\t<Host\r\n\t\t\t\tclass={{\r\n\t\t\t\t\t'has-value': this.state._hasValue,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<kol-input\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\t[this.state._type]: true,\r\n\t\t\t\t\t\t'hide-label': !!this.state._hideLabel,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t_disabled={this.state._disabled}\r\n\t\t\t\t\t_error={this.state._error}\r\n\t\t\t\t\t_hideLabel={this.state._hideLabel}\r\n\t\t\t\t\t_hint={this.state._hint}\r\n\t\t\t\t\t_icon={this.state._icon}\r\n\t\t\t\t\t_id={this.state._id}\r\n\t\t\t\t\t_list={this.state._list}\r\n\t\t\t\t\t_readOnly={this.state._readOnly}\r\n\t\t\t\t\t_required={this.state._required}\r\n\t\t\t\t\t_smartButton={this.state._smartButton}\r\n\t\t\t\t\t_touched={this.state._touched}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span slot=\"label\">{showExpertSlot ? <slot name=\"expert\"></slot> : showDefaultSlot ? <slot></slot> : this.state._label}</span>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={this.catchRef}\r\n\t\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\t\taccessKey={this.state._accessKey}\r\n\t\t\t\t\t\taria-describedby={ariaDescribedBy.length > 0 ? ariaDescribedBy.join(' ') : undefined}\r\n\t\t\t\t\t\taria-labelledby={`${this.state._id}-label`}\r\n\t\t\t\t\t\tautoCapitalize=\"off\"\r\n\t\t\t\t\t\tautoComplete={this.state._autoComplete}\r\n\t\t\t\t\t\tautoCorrect=\"off\"\r\n\t\t\t\t\t\tdisabled={this.state._disabled}\r\n\t\t\t\t\t\tid={this.state._id}\r\n\t\t\t\t\t\tlist={hasList ? `${this.state._id}-list` : undefined}\r\n\t\t\t\t\t\tmax={this.state._max}\r\n\t\t\t\t\t\tmin={this.state._min}\r\n\t\t\t\t\t\tname={this.state._name}\r\n\t\t\t\t\t\treadOnly={this.state._readOnly}\r\n\t\t\t\t\t\trequired={this.state._required}\r\n\t\t\t\t\t\tplaceholder={this.state._placeholder}\r\n\t\t\t\t\t\tslot=\"input\"\r\n\t\t\t\t\t\tstep={this.state._step}\r\n\t\t\t\t\t\tspellcheck=\"false\"\r\n\t\t\t\t\t\ttype={this.state._type}\r\n\t\t\t\t\t\tvalue={this.state._value as string}\r\n\t\t\t\t\t\t{...this.controller.onFacade}\r\n\t\t\t\t\t\tonKeyUp={this.onKeyUp}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</kol-input>\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate readonly controller: InputNumberController;\r\n\r\n\t/**\r\n\t * Gibt an, mit welcher Tastenkombination man das interaktive Element der Komponente auslÃ¶sen oder fokussieren kann.\r\n\t */\r\n\t@Prop() public _accessKey?: string;\r\n\r\n\t/**\r\n\t * Gibt an, ob der Screenreader die Meldung aktiv vorlesen soll.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _alert?: boolean = true;\r\n\r\n\t/**\r\n\t * Gibt an, ob das Eingabefeld autovervollstÃ¤ndigt werden kann.\r\n\t */\r\n\t@Prop() public _autoComplete?: InputTypeOnOff;\r\n\r\n\t/**\r\n\t * Deaktiviert das interaktive Element in der Komponente und erlaubt keine Interaktion mehr damit.\r\n\t */\r\n\t@Prop() public _disabled?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Text fÃ¼r eine Fehlermeldung an.\r\n\t */\r\n\t@Prop() public _error?: string;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t */\r\n\t@Prop() public _hideLabel?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Hinweistext an.\r\n\t */\r\n\t@Prop() public _hint?: string = '';\r\n\r\n\t/**\r\n\t * Setzt die Iconklasse (z.B.: `_icon=\"codicon codicon-home`).\r\n\t */\r\n\t@Prop() public _icon?: Stringified<KoliBriHorizontalIcon>;\r\n\r\n\t/**\r\n\t * Gibt die interne ID des primÃ¤ren Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _id?: string;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _label!: LabelWithExpertSlotPropType;\r\n\r\n\t/**\r\n\t * Gibt die Liste der Vorschlagszahlen an.\r\n\t */\r\n\t@Prop() public _list?: Stringified<string[]>;\r\n\r\n\t/**\r\n\t * Gibt den grÃ¶ÃŸtmÃ¶glichen Eingabewert an.\r\n\t */\r\n\t@Prop() public _max?: number | Iso8601;\r\n\r\n\t/**\r\n\t * Gibt den kleinstmÃ¶glichen Eingabewert an.\r\n\t */\r\n\t@Prop() public _min?: number | Iso8601;\r\n\r\n\t/**\r\n\t * Gibt den technischen Namen des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _name?: string;\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Funktionen fÃ¼r das Input-Event an.\r\n\t */\r\n\t@Prop() public _on?: InputTypeOnDefault;\r\n\r\n\t/**\r\n\t * Gibt den Platzhalter des Eingabefeldes an, wenn es leer ist.\r\n\t */\r\n\t@Prop() public _placeholder?: string;\r\n\r\n\t/**\r\n\t * Setzt das Eingabefeld in den schreibgeschÃ¼tzten Modus.\r\n\t */\r\n\t@Prop() public _readOnly?: boolean;\r\n\r\n\t/**\r\n\t * Macht das Eingabeelement zu einem Pflichtfeld.\r\n\t */\r\n\t@Prop() public _required?: boolean;\r\n\r\n\t/**\r\n\t * ErmÃ¶glicht eine SchaltflÃ¤che ins das Eingabefeld mit einer beliebigen Aktion zu einzufÃ¼gen (ohne label).\r\n\t */\r\n\t@Prop() public _smartButton?: ButtonProps;\r\n\r\n\t/**\r\n\t * Gibt die Schrittweite der WertverÃ¤nderung an.\r\n\t */\r\n\t@Prop() public _step?: number;\r\n\r\n\t/**\r\n\t * Selector for synchronizing the value with another input element.\r\n\t * @internal\r\n\t */\r\n\t@Prop() public _syncValueBySelector?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welchen Tab-Index das primÃ¤re Element in der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)\r\n\t */\r\n\t@Prop() public _tabIndex?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/berÃ¼hrt wurde.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _touched?: boolean = false;\r\n\r\n\t/**\r\n\t * Setzt den Typ der Komponente oder des interaktiven Elements in der Komponente an.\r\n\t *\r\n\t * @deprecated Das W3C hat die Date-Typen in eine eigene Gruppe zusammengefasst. Verwende hierfÃ¼r die InputDate-Komponente.\r\n\t */\r\n\t@Prop() public _type?: InputNumberType = 'number';\r\n\r\n\t/**\r\n\t * Gibt den Wert des Eingabefeldes an.\r\n\t */\r\n\t@Prop({ mutable: true }) public _value?: number | Iso8601 | null;\r\n\r\n\t@State() public state: States = {\r\n\t\t_autoComplete: 'off',\r\n\t\t_hasValue: false,\r\n\t\t_id: nonce(), // âš  required\r\n\t\t_label: false, // âš  required\r\n\t\t_list: [],\r\n\t\t_type: 'number',\r\n\t};\r\n\r\n\tpublic constructor() {\r\n\t\tthis.controller = new InputNumberController(this, 'number', this.host);\r\n\t}\r\n\r\n\t@Watch('_accessKey')\r\n\tpublic validateAccessKey(value?: string): void {\r\n\t\tthis.controller.validateAccessKey(value);\r\n\t}\r\n\r\n\t@Watch('_alert')\r\n\tpublic validateAlert(value?: boolean): void {\r\n\t\tthis.controller.validateAlert(value);\r\n\t}\r\n\r\n\t@Watch('_autoComplete')\r\n\tpublic validateAutoComplete(value?: InputTypeOnOff): void {\r\n\t\tthis.controller.validateAutoComplete(value);\r\n\t}\r\n\r\n\t@Watch('_disabled')\r\n\tpublic validateDisabled(value?: boolean): void {\r\n\t\tthis.controller.validateDisabled(value);\r\n\t}\r\n\r\n\t@Watch('_error')\r\n\tpublic validateError(value?: string): void {\r\n\t\tthis.controller.validateError(value);\r\n\t}\r\n\r\n\t@Watch('_hideLabel')\r\n\tpublic validateHideLabel(value?: boolean): void {\r\n\t\tthis.controller.validateHideLabel(value);\r\n\t}\r\n\r\n\t@Watch('_hint')\r\n\tpublic validateHint(value?: string): void {\r\n\t\tthis.controller.validateHint(value);\r\n\t}\r\n\r\n\t@Watch('_icon')\r\n\tpublic validateIcon(value?: Stringified<KoliBriHorizontalIcon>): void {\r\n\t\tthis.controller.validateIcon(value);\r\n\t}\r\n\r\n\t@Watch('_id')\r\n\tpublic validateId(value?: string): void {\r\n\t\tthis.controller.validateId(value);\r\n\t}\r\n\r\n\t@Watch('_label')\r\n\tpublic validateLabel(value?: LabelWithExpertSlotPropType): void {\r\n\t\tthis.controller.validateLabel(value);\r\n\t}\r\n\r\n\t@Watch('_list')\r\n\tpublic validateList(value?: Stringified<string[]>): void {\r\n\t\tthis.controller.validateList(value);\r\n\t}\r\n\r\n\t@Watch('_max')\r\n\tpublic validateMax(value?: number | Iso8601): void {\r\n\t\tthis.controller.validateMax(value);\r\n\t}\r\n\r\n\t@Watch('_min')\r\n\tpublic validateMin(value?: number | Iso8601): void {\r\n\t\tthis.controller.validateMin(value);\r\n\t}\r\n\r\n\t@Watch('_name')\r\n\tpublic validateName(value?: string): void {\r\n\t\tthis.controller.validateName(value);\r\n\t}\r\n\r\n\t@Watch('_on')\r\n\tpublic validateOn(value?: InputTypeOnDefault): void {\r\n\t\tthis.controller.validateOn(value);\r\n\t}\r\n\r\n\t@Watch('_placeholder')\r\n\tpublic validatePlaceholder(value?: string): void {\r\n\t\tthis.controller.validatePlaceholder(value);\r\n\t}\r\n\r\n\t@Watch('_readOnly')\r\n\tpublic validateReadOnly(value?: boolean): void {\r\n\t\tthis.controller.validateReadOnly(value);\r\n\t}\r\n\r\n\t@Watch('_required')\r\n\tpublic validateRequired(value?: boolean): void {\r\n\t\tthis.controller.validateRequired(value);\r\n\t}\r\n\r\n\t@Watch('_smartButton')\r\n\tpublic validateSmartButton(value?: ButtonProps | string): void {\r\n\t\tthis.controller.validateSmartButton(value);\r\n\t}\r\n\r\n\t@Watch('_step')\r\n\tpublic validateStep(value?: number): void {\r\n\t\tthis.controller.validateStep(value);\r\n\t}\r\n\r\n\t@Watch('_syncValueBySelector')\r\n\tpublic validateSyncValueBySelector(value?: string): void {\r\n\t\tthis.controller.validateSyncValueBySelector(value);\r\n\t}\r\n\r\n\t@Watch('_tabIndex')\r\n\tpublic validateTabIndex(value?: number): void {\r\n\t\tthis.controller.validateTabIndex(value);\r\n\t}\r\n\r\n\t@Watch('_touched')\r\n\tpublic validateTouched(value?: boolean): void {\r\n\t\tthis.controller.validateTouched(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @see: components/abbr/component.tsx (@Watch)\r\n\t * @deprecated\r\n\t */\r\n\t@Watch('_type')\r\n\tpublic validateType(value?: InputNumberType): void {\r\n\t\tthis.controller.validateType(value);\r\n\t}\r\n\r\n\t@Watch('_value')\r\n\tpublic validateValue(value?: number | Iso8601 | null): void {\r\n\t\tthis.controller.validateValueEx(value, (v) => {\r\n\t\t\tif (v === '' && this.ref) {\r\n\t\t\t\tthis.ref.value = '';\r\n\t\t\t}\r\n\t\t});\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis._alert = this._alert === true;\r\n\t\tthis._touched = this._touched === true;\r\n\t\tthis.controller.componentWillLoad();\r\n\r\n\t\tthis.state._hasValue = !!this.state._value;\r\n\t\tthis.controller.addValueChangeListener((v) => (this.state._hasValue = !!v));\r\n\t}\r\n}\r\n"],"mappings":"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"}