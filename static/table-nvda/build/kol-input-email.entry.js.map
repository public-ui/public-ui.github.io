{"version":3,"names":["validateMultiple","component","value","watchBoolean","InputEmailController","InputTextEmailController","constructor","name","host","super","this","componentWillLoad","_multiple","defaultStyleCss","KolInputEmail","render","ariaDescribedBy","getRenderStates","state","hasList","Array","isArray","_list","length","showExpertSlot","_label","showDefaultSlot","h","Host","class","_hasValue","email","_hideLabel","_alert","_currentLength","_disabled","_error","_hasCounter","_hint","_icon","_id","_maxLength","_readOnly","_required","_smartButton","_touched","onClick","_a","ref","focus","slot","Object","assign","catchRef","title","accessKey","_accessKey","join","undefined","autoCapitalize","autoComplete","_autoComplete","autoCorrect","disabled","multiple","id","list","maxlength","_name","pattern","_pattern","placeholder","_placeholder","readOnly","required","size","_size","spellcheck","type","_value","controller","onFacade","onKeyUp","hostRef","propagateFocus","event","setState","target","code","propagateSubmitEventToForm","form","onChange","nonce","validateAccessKey","validateAlert","validateAutoComplete","validateDisabled","validateError","validateHasCounter","validateHideLabel","validateHint","validateIcon","validateId","validateLabel","validateList","validateMaxLength","validateName","validateOn","validatePattern","validatePlaceholder","validateReadOnly","validateRequired","validateSize","validateSmartButton","validateSyncValueBySelector","validateTabIndex","validateTouched","validateValue","addValueChangeListener","v"],"sources":["src/types/props/multiple.ts","src/components/input-email/controller.ts","src/components/input-email/style.css?tag=kol-input-email&mode=default&encapsulation=shadow","src/components/input-email/component.tsx"],"sourcesContent":["import { Generic } from '@a11y-ui/core';\r\n\r\nimport { watchBoolean } from '../../utils/prop.validators';\r\n\r\n/* types */\r\n/** de\r\n * Schlatet das Eingabefeld um, sodass es mehrere Eingaben akzeptiert.\r\n */\r\n/** en\r\n * Makes the input accept multiple inputs.\r\n */\r\nexport type PropMultiple = {\r\n\tmultiple: boolean;\r\n};\r\n\r\n/* validator */\r\nexport const validateMultiple = (component: Generic.Element.Component, value?: boolean): void => {\r\n\twatchBoolean(component, '_multiple', value);\r\n};\r\n","import { Generic } from '@a11y-ui/core';\r\n\r\nimport { InputTextEmailController } from '../input-text/controller';\r\nimport { Props, Watches } from './types';\r\nimport { validateMultiple } from '../../types/props/multiple';\r\n\r\nexport class InputEmailController extends InputTextEmailController implements Watches {\r\n\tprotected readonly component: Generic.Element.Component & Props;\r\n\r\n\tpublic constructor(component: Generic.Element.Component & Props, name: string, host?: HTMLElement) {\r\n\t\tsuper(component, name, host);\r\n\t\tthis.component = component;\r\n\t}\r\n\r\n\tpublic validateMultiple(value?: boolean): void {\r\n\t\tvalidateMultiple(this.component, value);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tsuper.componentWillLoad();\r\n\t\tthis.validateMultiple(this.component._multiple);\r\n\t}\r\n}\r\n","@import url(../input-line.css);\n","import { Component, Element, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { ButtonProps } from '../../types/button-link';\r\nimport { Stringified } from '../../types/common';\r\nimport { KoliBriHorizontalIcon } from '../../types/icon';\r\nimport { InputTypeOnDefault, InputTypeOnOff } from '../../types/input/types';\r\nimport { LabelWithExpertSlotPropType } from '../../types/props/label';\r\nimport { nonce } from '../../utils/dev.utils';\r\nimport { setState } from '../../utils/prop.validators';\r\nimport { propagateFocus } from '../../utils/reuse';\r\nimport { propagateSubmitEventToForm } from '../form/controller';\r\nimport { getRenderStates } from '../input/controller';\r\nimport { InputEmailController } from './controller';\r\nimport { ComponentApi, States } from './types';\r\n\r\n/**\r\n * @slot - Die Beschriftung des Eingabefeldes.\r\n */\r\n@Component({\r\n\ttag: 'kol-input-email',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolInputEmail implements ComponentApi {\r\n\t@Element() private readonly host?: HTMLKolInputEmailElement;\r\n\tprivate ref?: HTMLInputElement;\r\n\r\n\tprivate readonly catchRef = (ref?: HTMLInputElement) => {\r\n\t\tthis.ref = ref;\r\n\t\tpropagateFocus(this.host, this.ref);\r\n\t};\r\n\r\n\tprivate readonly onKeyUp = (event: KeyboardEvent) => {\r\n\t\tsetState(this, '_currentLength', (event.target as HTMLInputElement).value.length);\r\n\t\tif (event.code === 'Enter') {\r\n\t\t\tpropagateSubmitEventToForm({\r\n\t\t\t\tform: this.host,\r\n\t\t\t\tref: this.ref,\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\tthis.controller.onFacade.onChange(event);\r\n\t\t}\r\n\t};\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst { ariaDescribedBy } = getRenderStates(this.state);\r\n\t\tconst hasList = Array.isArray(this.state._list) && this.state._list.length > 0;\r\n\t\tconst showExpertSlot = this.state._label === ''; // _label=\"\" or _label\r\n\t\tconst showDefaultSlot = this.state._label === '…'; // deprecated: default slot will be removed in v2.0.0\r\n\t\treturn (\r\n\t\t\t<Host\r\n\t\t\t\tclass={{\r\n\t\t\t\t\t'has-value': this.state._hasValue,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t<kol-input\r\n\t\t\t\t\tclass={{ email: true, 'hide-label': !!this.state._hideLabel }}\r\n\t\t\t\t\t_alert={this.state._alert}\r\n\t\t\t\t\t_currentLength={this.state._currentLength}\r\n\t\t\t\t\t_disabled={this.state._disabled}\r\n\t\t\t\t\t_error={this.state._error}\r\n\t\t\t\t\t_hasCounter={this.state._hasCounter}\r\n\t\t\t\t\t_hideLabel={this.state._hideLabel}\r\n\t\t\t\t\t_hint={this.state._hint}\r\n\t\t\t\t\t_icon={this.state._icon}\r\n\t\t\t\t\t_id={this.state._id}\r\n\t\t\t\t\t_list={this.state._list}\r\n\t\t\t\t\t_maxLength={this.state._maxLength}\r\n\t\t\t\t\t_readOnly={this.state._readOnly}\r\n\t\t\t\t\t_required={this.state._required}\r\n\t\t\t\t\t_smartButton={this.state._smartButton}\r\n\t\t\t\t\t_touched={this.state._touched}\r\n\t\t\t\t\tonClick={() => this.ref?.focus()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span slot=\"label\">{showExpertSlot ? <slot name=\"expert\"></slot> : showDefaultSlot ? <slot></slot> : this.state._label}</span>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={this.catchRef}\r\n\t\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\t\taccessKey={this.state._accessKey}\r\n\t\t\t\t\t\taria-describedby={ariaDescribedBy.length > 0 ? ariaDescribedBy.join(' ') : undefined}\r\n\t\t\t\t\t\taria-labelledby={`${this.state._id}-label`}\r\n\t\t\t\t\t\tautoCapitalize=\"off\"\r\n\t\t\t\t\t\tautoComplete={this.state._autoComplete}\r\n\t\t\t\t\t\tautoCorrect=\"off\"\r\n\t\t\t\t\t\tdisabled={this.state._disabled}\r\n\t\t\t\t\t\tmultiple={this.state._multiple}\r\n\t\t\t\t\t\tid={this.state._id}\r\n\t\t\t\t\t\tlist={hasList ? `${this.state._id}-list` : undefined}\r\n\t\t\t\t\t\tmaxlength={this.state._maxLength}\r\n\t\t\t\t\t\tname={this.state._name}\r\n\t\t\t\t\t\tpattern={this.state._pattern}\r\n\t\t\t\t\t\tplaceholder={this.state._placeholder}\r\n\t\t\t\t\t\treadOnly={this.state._readOnly}\r\n\t\t\t\t\t\trequired={this.state._required}\r\n\t\t\t\t\t\tsize={this.state._size}\r\n\t\t\t\t\t\tslot=\"input\"\r\n\t\t\t\t\t\tspellcheck=\"false\"\r\n\t\t\t\t\t\ttype=\"email\"\r\n\t\t\t\t\t\tvalue={this.state._value as string}\r\n\t\t\t\t\t\t{...this.controller.onFacade}\r\n\t\t\t\t\t\tonKeyUp={this.onKeyUp}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</kol-input>\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate readonly controller: InputEmailController;\r\n\r\n\t/**\r\n\t * Gibt an, mit welcher Tastenkombination man das interaktive Element der Komponente auslösen oder fokussieren kann.\r\n\t */\r\n\t@Prop() public _accessKey?: string;\r\n\r\n\t/**\r\n\t * Gibt an, ob der Screenreader die Meldung aktiv vorlesen soll.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _alert?: boolean = true;\r\n\r\n\t/**\r\n\t * Gibt an, ob das Eingabefeld autovervollständigt werden kann.\r\n\t */\r\n\t@Prop() public _autoComplete?: InputTypeOnOff;\r\n\r\n\t/**\r\n\t * Deaktiviert das interaktive Element in der Komponente und erlaubt keine Interaktion mehr damit.\r\n\t */\r\n\t@Prop() public _disabled?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Text für eine Fehlermeldung an.\r\n\t */\r\n\t@Prop() public _error?: string;\r\n\r\n\t/**\r\n\t * Aktiviert den Zeichenanzahlzähler am unteren Rand des Eingabefeldes.\r\n\t */\r\n\t@Prop() public _hasCounter?: boolean;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t */\r\n\t@Prop() public _hideLabel?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Hinweistext an.\r\n\t */\r\n\t@Prop() public _hint?: string = '';\r\n\r\n\t/**\r\n\t * Setzt die Iconklasse (z.B.: `_icon=\"codicon codicon-home`).\r\n\t */\r\n\t@Prop() public _icon?: Stringified<KoliBriHorizontalIcon>;\r\n\r\n\t/**\r\n\t * Gibt die interne ID des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _id?: string;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _label!: LabelWithExpertSlotPropType;\r\n\r\n\t/**\r\n\t * Gibt die Liste der Vorschlagswörter an.\r\n\t */\r\n\t@Prop() public _list?: Stringified<string[]>;\r\n\r\n\t/**\r\n\t * Gibt an, wie viele Zeichen maximal eingegeben werden können.\r\n\t */\r\n\t@Prop() public _maxLength?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob mehrere Werte eingegeben werden können.\r\n\t */\r\n\t@Prop() public _multiple?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den technischen Namen des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _name?: string;\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Funktionen für das Input-Event an.\r\n\t */\r\n\t@Prop() public _on?: InputTypeOnDefault;\r\n\r\n\t/**\r\n\t * Gibt ein Prüfmuster (Pattern) für das Eingabefeld an.\r\n\t */\r\n\t@Prop() public _pattern?: string;\r\n\r\n\t/**\r\n\t * Gibt den Platzhalter des Eingabefeldes an, wenn es leer ist.\r\n\t */\r\n\t@Prop() public _placeholder?: string;\r\n\r\n\t/**\r\n\t * Setzt das Eingabefeld in den schreibgeschützten Modus.\r\n\t */\r\n\t@Prop() public _readOnly?: boolean;\r\n\r\n\t/**\r\n\t * Macht das Eingabeelement zu einem Pflichtfeld.\r\n\t */\r\n\t@Prop() public _required?: boolean;\r\n\r\n\t/**\r\n\t * Setzt die Breite des Eingabefeldes in Buchstabenbreiten.\r\n\t */\r\n\t@Prop() public _size?: number;\r\n\r\n\t/**\r\n\t * Ermöglicht eine Schaltfläche ins das Eingabefeld mit einer beliebigen Aktion zu einzufügen (ohne label).\r\n\t */\r\n\t@Prop() public _smartButton?: ButtonProps;\r\n\r\n\t/**\r\n\t * Selector for synchronizing the value with another input element.\r\n\t * @internal\r\n\t */\r\n\t@Prop() public _syncValueBySelector?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welchen Tab-Index das primäre Element in der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)\r\n\t */\r\n\t@Prop() public _tabIndex?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/berührt wurde.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _touched?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt den Wert des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _value?: string;\r\n\r\n\t@State() public state: States = {\r\n\t\t_autoComplete: 'off',\r\n\t\t_currentLength: 0,\r\n\t\t_hasValue: false,\r\n\t\t_id: nonce(), // ⚠ required\r\n\t\t_label: false, // ⚠ required\r\n\t\t_list: [],\r\n\t};\r\n\r\n\tpublic constructor() {\r\n\t\tthis.controller = new InputEmailController(this, 'email', this.host);\r\n\t}\r\n\r\n\t@Watch('_accessKey')\r\n\tpublic validateAccessKey(value?: string): void {\r\n\t\tthis.controller.validateAccessKey(value);\r\n\t}\r\n\r\n\t@Watch('_alert')\r\n\tpublic validateAlert(value?: boolean): void {\r\n\t\tthis.controller.validateAlert(value);\r\n\t}\r\n\r\n\t@Watch('_autoComplete')\r\n\tpublic validateAutoComplete(value?: InputTypeOnOff): void {\r\n\t\tthis.controller.validateAutoComplete(value);\r\n\t}\r\n\r\n\t@Watch('_disabled')\r\n\tpublic validateDisabled(value?: boolean): void {\r\n\t\tthis.controller.validateDisabled(value);\r\n\t}\r\n\r\n\t@Watch('_error')\r\n\tpublic validateError(value?: string): void {\r\n\t\tthis.controller.validateError(value);\r\n\t}\r\n\r\n\t@Watch('_hasCounter')\r\n\tpublic validateHasCounter(value?: boolean): void {\r\n\t\tthis.controller.validateHasCounter(value);\r\n\t}\r\n\r\n\t@Watch('_hideLabel')\r\n\tpublic validateHideLabel(value?: boolean): void {\r\n\t\tthis.controller.validateHideLabel(value);\r\n\t}\r\n\r\n\t@Watch('_hint')\r\n\tpublic validateHint(value?: string): void {\r\n\t\tthis.controller.validateHint(value);\r\n\t}\r\n\r\n\t@Watch('_icon')\r\n\tpublic validateIcon(value?: Stringified<KoliBriHorizontalIcon>): void {\r\n\t\tthis.controller.validateIcon(value);\r\n\t}\r\n\r\n\t@Watch('_id')\r\n\tpublic validateId(value?: string): void {\r\n\t\tthis.controller.validateId(value);\r\n\t}\r\n\r\n\t@Watch('_label')\r\n\tpublic validateLabel(value?: LabelWithExpertSlotPropType): void {\r\n\t\tthis.controller.validateLabel(value);\r\n\t}\r\n\r\n\t@Watch('_list')\r\n\tpublic validateList(value?: Stringified<string[]>): void {\r\n\t\tthis.controller.validateList(value);\r\n\t}\r\n\r\n\t@Watch('_maxLength')\r\n\tpublic validateMaxLength(value?: number): void {\r\n\t\tthis.controller.validateMaxLength(value);\r\n\t}\r\n\r\n\t@Watch('_multiple')\r\n\tpublic validateMultiple(value?: boolean): void {\r\n\t\tthis.controller.validateMultiple(value);\r\n\t}\r\n\r\n\t@Watch('_name')\r\n\tpublic validateName(value?: string): void {\r\n\t\tthis.controller.validateName(value);\r\n\t}\r\n\r\n\t@Watch('_on')\r\n\tpublic validateOn(value?: InputTypeOnDefault): void {\r\n\t\tthis.controller.validateOn(value);\r\n\t}\r\n\r\n\t@Watch('_pattern')\r\n\tpublic validatePattern(value?: string): void {\r\n\t\tthis.controller.validatePattern(value);\r\n\t}\r\n\r\n\t@Watch('_placeholder')\r\n\tpublic validatePlaceholder(value?: string): void {\r\n\t\tthis.controller.validatePlaceholder(value);\r\n\t}\r\n\r\n\t@Watch('_readOnly')\r\n\tpublic validateReadOnly(value?: boolean): void {\r\n\t\tthis.controller.validateReadOnly(value);\r\n\t}\r\n\r\n\t@Watch('_required')\r\n\tpublic validateRequired(value?: boolean): void {\r\n\t\tthis.controller.validateRequired(value);\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\t@Watch('_size')\r\n\tpublic validateSize(value?: number): void {\r\n\t\tthis.controller.validateSize(value);\r\n\t}\r\n\r\n\t@Watch('_smartButton')\r\n\tpublic validateSmartButton(value?: ButtonProps | string): void {\r\n\t\tthis.controller.validateSmartButton(value);\r\n\t}\r\n\r\n\t@Watch('_syncValueBySelector')\r\n\tpublic validateSyncValueBySelector(value?: string): void {\r\n\t\tthis.controller.validateSyncValueBySelector(value);\r\n\t}\r\n\r\n\t@Watch('_tabIndex')\r\n\tpublic validateTabIndex(value?: number): void {\r\n\t\tthis.controller.validateTabIndex(value);\r\n\t}\r\n\r\n\t@Watch('_touched')\r\n\tpublic validateTouched(value?: boolean): void {\r\n\t\tthis.controller.validateTouched(value);\r\n\t}\r\n\r\n\t@Watch('_value')\r\n\tpublic validateValue(value?: string): void {\r\n\t\tthis.controller.validateValue(value);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis._alert = this._alert === true;\r\n\t\tthis._touched = this._touched === true;\r\n\t\tthis.controller.componentWillLoad();\r\n\r\n\t\tthis.state._hasValue = !!this.state._value;\r\n\t\tthis.controller.addValueChangeListener((v) => (this.state._hasValue = !!v));\r\n\t}\r\n}\r\n"],"mappings":"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"}