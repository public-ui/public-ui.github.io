{"version":3,"names":["KolIconFontAwesome","render","h","exportparts","this","_part","_ariaLabel","_icon","_prefix","undefined"],"sources":["src/components/icon-font-awesome/component.tsx"],"sourcesContent":["import { Generic } from '@a11y-ui/core';\r\nimport { Component, h, JSX, Prop } from '@stencil/core';\r\n\r\nimport { FontAwesome, FontAwesomeOssPrefix } from '../../enums/font-awesome';\r\nimport { PropAriaLabel } from '../../types/props/aria-label';\r\n\r\ntype RequiredProps = PropAriaLabel & {\r\n\ticon: FontAwesome;\r\n\tprefix: FontAwesomeOssPrefix;\r\n};\r\ntype OptionalProps = {\r\n\tpart: string;\r\n};\r\n// type Props = Generic.Element.Members<RequiredProps, OptionalProps>;\r\n\r\n/**\r\n * @deprecated Wir empfehlen die flexiblere KolIcon-Komponente zu verwenden.\r\n */\r\n@Component({\r\n\ttag: 'kol-icon-font-awesome',\r\n\tshadow: false,\r\n})\r\nexport class KolIconFontAwesome implements Generic.Element.Members<RequiredProps, OptionalProps> {\r\n\tpublic render(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<kol-icon\r\n\t\t\t\texportparts={`icon${typeof this._part === 'string' ? `,${this._part}` : ''}`}\r\n\t\t\t\t_ariaLabel={this._ariaLabel}\r\n\t\t\t\t_icon={typeof this._prefix === 'string' && typeof this._icon === 'string' ? `${this._prefix} fa-${this._icon}` : (undefined as unknown as string)}\r\n\t\t\t\t_part={this._part}\r\n\t\t\t/>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _ariaLabel!: string;\r\n\r\n\t/**\r\n\t * Gibt einen Identifier eines Font Awesome Icons an. (https://fontawesome.com/v5.15/icons)\r\n\t */\r\n\t@Prop() public _icon!: FontAwesome;\r\n\r\n\t/**\r\n\t * Gibt den Prefix der Font Awesome Icons an. (https://fontawesome.com/v5.15/how-to-use/on-the-web/referencing-icons/basic-use)\r\n\t */\r\n\t@Prop() public _prefix!: FontAwesomeOssPrefix;\r\n\r\n\t/**\r\n\t * Gibt den Identifier für den CSS-Part an, um das Icon von Außen ändern zu können. (https://meowni.ca/posts/part-theme-explainer/)\r\n\t/**\r\n\t * @deprecated Das Styling sollte stets über CSS erfolgen.\r\n\t */\r\n\t@Prop() public _part?: string;\r\n}\r\n"],"mappings":";;;qDAsBaA,EAAkB,M,oHACvBC,SACN,OACCC,EAAA,YACCC,YAAa,cAAcC,KAAKC,QAAU,SAAW,IAAID,KAAKC,QAAU,KACxEC,WAAYF,KAAKE,WACjBC,aAAcH,KAAKI,UAAY,iBAAmBJ,KAAKG,QAAU,SAAW,GAAGH,KAAKI,cAAcJ,KAAKG,QAAWE,UAClHJ,MAAOD,KAAKC,O"}