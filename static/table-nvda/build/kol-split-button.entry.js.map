{"version":3,"names":["defaultStyleCss","KolSplitButton","this","clickHandler","e","state","_on","onClick","toggleDropdown","openDropdown","dropdown","dropdownContent","style","height","clientHeight","Object","assign","_showDropdown","closeDropdown","value","openIt","forceCounter","forceOpenDropdown","_a","setTimeout","catchDropdownElements","firstChild","_icon","_label","render","h","Host","class","button","_variant","_customClass","length","_accessKey","_ariaControls","_ariaCurrent","_ariaExpanded","_ariaSelected","_disabled","_hideLabel","_role","_tabIndex","_tooltipAlign","_type","_value","ref","validateAccessKey","watchString","validateAriaControls","validateAriaCurrent","validateAriaExpanded","validateAriaLabel","validateLabel","validateAriaSelected","validateCustomClass","defaultValue","undefined","validateDisabled","a11yHintDisabled","validateHideLabel","validateIcon","validateIconOnly","validateOn","validateRole","validateShowDropdown","watchBoolean","validateTabIndex","validateTooltipAlign","watchTooltipAlignment","validateType","watchButtonType","validateValue","setState","validateVariant","watchButtonVariant","componentWillLoad","_iconOnly","_ariaLabel"],"sources":["src/components/split-button/style.css?tag=kol-split-button&mode=default&encapsulation=shadow","src/components/split-button/component.tsx"],"sourcesContent":["@import url(../style.css);\n:host {\n\tdisplay: flex;\n\tposition: relative;\n}\n.main-button {\n\tflex-grow: 1;\n\ttext-align: left;\n}\n.main-button kol-span-wc {\n\tplace-items: start;\n}\n.secondary-button button {\n\theight: 100%;\n}\n.horizontal-line {\n\tbackground-color: rgba(0, 0, 0, 0.2);\n\tborder-radius: 2px;\n\theight: 70%;\n\tmargin-block: auto;\n\twidth: 1px;\n}\n/* popover */\n.popover {\n\theight: 0;\n\tleft: 0;\n\tmin-width: 100%;\n\toverflow: hidden;\n\tposition: absolute;\n\ttop: 100%;\n\ttransition: height 0.3s ease-in-out;\n}\n.popover-content {\n\tinset: 0 0 auto 0;\n\tmin-width: 100%;\n\tposition: absolute;\n}\n","import { Component, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { AlternativButtonLinkRole, KoliBriButtonType, KoliBriButtonVariant, watchTooltipAlignment } from '../../types/button-link';\r\nimport { Stringified } from '../../types/common';\r\nimport { Align } from '../../types/props/align';\r\nimport { AriaCurrent, validateAriaCurrent } from '../../types/props/aria-current';\r\nimport { validateAriaExpanded } from '../../types/props/aria-expanded';\r\nimport { validateAriaSelected } from '../../types/props/aria-selected';\r\nimport { validateDisabled } from '../../types/props/disabled';\r\nimport { validateHideLabel } from '../../types/props/hide-label';\r\nimport { LabelPropType, validateLabel } from '../../types/props/label';\r\nimport { a11yHintDisabled } from '../../utils/a11y.tipps';\r\nimport { setState, watchBoolean, watchString } from '../../utils/prop.validators';\r\nimport { validateTabIndex } from '../../utils/validators/tab-index';\r\nimport { watchButtonType, watchButtonVariant } from '../button/controller';\r\nimport { KoliBriSplitButtonAPI, KoliBriSplitButtonAStates, KoliBriSplitButtonCallback } from './types';\r\n\r\n/**\r\n * @slot - Ermöglicht das Einfügen beliebigen HTML's in das dropdown.\r\n */\r\n@Component({\r\n\ttag: 'kol-split-button',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolSplitButton implements KoliBriSplitButtonAPI {\r\n\tprivate dropdown: HTMLDivElement | undefined;\r\n\tprivate dropdownContent: HTMLDivElement | undefined;\r\n\r\n\tprivate readonly clickHandler = (e: Event) => {\r\n\t\tif (typeof this.state._on.onClick === 'function') this.state._on.onClick(e);\r\n\t\telse this.toggleDropdown();\r\n\t};\r\n\r\n\tprivate readonly openDropdown = () => {\r\n\t\tif (this.dropdown && this.dropdownContent) {\r\n\t\t\tthis.dropdown.style.height = `${this.dropdownContent.clientHeight}px`;\r\n\t\t\tthis.state = { ...this.state, _showDropdown: true };\r\n\t\t}\r\n\t};\r\n\tprivate readonly closeDropdown = () => {\r\n\t\tif (this.dropdown && this.dropdownContent) {\r\n\t\t\tthis.dropdown.style.height = ``;\r\n\t\t\tthis.state = { ...this.state, _showDropdown: false };\r\n\t\t}\r\n\t};\r\n\tprivate readonly toggleDropdown = (value?: boolean) => {\r\n\t\tconst openIt = typeof value === 'boolean' ? value : !this.state._showDropdown;\r\n\t\tif (openIt) this.openDropdown();\r\n\t\telse this.closeDropdown();\r\n\t};\r\n\tprivate forceCounter = 100; // because the dropdown could be empty\r\n\tprivate readonly forceOpenDropdown = () => {\r\n\t\tif (this.forceCounter > 0) {\r\n\t\t\tif (this.dropdownContent?.clientHeight) this.openDropdown();\r\n\t\t\telse setTimeout(this.forceOpenDropdown, 10);\r\n\t\t\tthis.forceCounter--;\r\n\t\t}\r\n\t};\r\n\r\n\tprivate readonly catchDropdownElements = (e?: HTMLDivElement | null) => {\r\n\t\tif (e) {\r\n\t\t\tthis.dropdown = e;\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.dropdownContent = e.firstChild as HTMLDivElement;\r\n\t\t\t\tif (this._showDropdown) this.forceOpenDropdown();\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\treturn (\r\n\t\t\t<Host>\r\n\t\t\t\t<kol-button-wc\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\t'main-button': true,\r\n\t\t\t\t\t\tbutton: true,\r\n\t\t\t\t\t\t[this._variant as string]: this._variant !== 'custom',\r\n\t\t\t\t\t\t[this._customClass as string]: this._variant === 'custom' && typeof this._customClass === 'string' && this._customClass.length > 0,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t_accessKey={this._accessKey}\r\n\t\t\t\t\t_ariaControls={this._ariaControls}\r\n\t\t\t\t\t_ariaCurrent={this._ariaCurrent}\r\n\t\t\t\t\t_ariaExpanded={this._ariaExpanded}\r\n\t\t\t\t\t_ariaSelected={this._ariaSelected}\r\n\t\t\t\t\t_customClass={this._customClass}\r\n\t\t\t\t\t_disabled={this._disabled}\r\n\t\t\t\t\t_icon={this._icon}\r\n\t\t\t\t\t_hideLabel={this._hideLabel}\r\n\t\t\t\t\t_label={this._label}\r\n\t\t\t\t\t_on={{ onClick: this.clickHandler }}\r\n\t\t\t\t\t_role={this._role}\r\n\t\t\t\t\t_tabIndex={this._tabIndex}\r\n\t\t\t\t\t_tooltipAlign={this._tooltipAlign}\r\n\t\t\t\t\t_type={this._type}\r\n\t\t\t\t\t_value={this._value}\r\n\t\t\t\t\t_variant={this._variant}\r\n\t\t\t\t></kol-button-wc>\r\n\t\t\t\t<div class=\"horizontal-line\"></div>\r\n\t\t\t\t<kol-button-wc\r\n\t\t\t\t\tclass=\"secondary-button\"\r\n\t\t\t\t\t_disabled={this._disabled}\r\n\t\t\t\t\t_hideLabel\r\n\t\t\t\t\t_icon=\"codicon codicon-triangle-down\"\r\n\t\t\t\t\t_label={`dropdown ${this.state._showDropdown ? 'schließen' : 'öffnen'}`}\r\n\t\t\t\t\t_on={{ onClick: () => this.toggleDropdown() }}\r\n\t\t\t\t></kol-button-wc>\r\n\t\t\t\t<div class=\"popover\" ref={this.catchDropdownElements}>\r\n\t\t\t\t\t<div class=\"popover-content\">\r\n\t\t\t\t\t\t<slot />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Gibt an, mit welcher Tastenkombination man das interaktive Element der Komponente auslösen oder fokussieren kann.\r\n\t */\r\n\t@Prop() public _accessKey?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welche Elemente kontrolliert werden. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-controls)\r\n\t */\r\n\t@Prop() public _ariaControls?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welchen aktuellen Auswahlstatus das interaktive Element der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-current)\r\n\t */\r\n\t@Prop() public _ariaCurrent?: AriaCurrent;\r\n\r\n\t/**\r\n\t * Gibt an, ob durch das interaktive Element in der Komponente etwas aufgeklappt wurde. (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded)\r\n\t */\r\n\t@Prop() public _ariaExpanded?: boolean;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t * @deprecated use _label\r\n\t */\r\n\t@Prop({ mutable: true, reflect: false }) public _ariaLabel?: string;\r\n\r\n\t/**\r\n\t * Gibt an, ob interaktive Element in der Komponente ausgewählt ist (z.B. role=tab). (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-selected)\r\n\t */\r\n\t@Prop() public _ariaSelected?: boolean;\r\n\r\n\t/**\r\n\t * Gibt an, welche Custom-Class übergeben werden soll, wenn _variant=\"custom\" gesetzt ist.\r\n\t */\r\n\t@Prop() public _customClass?: string;\r\n\r\n\t/**\r\n\t * Deaktiviert das interaktive Element in der Komponente und erlaubt keine Interaktion mehr damit.\r\n\t */\r\n\t@Prop() public _disabled?: boolean = false;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t */\r\n\t@Prop() public _hideLabel?: boolean = false;\r\n\r\n\t/**\r\n\t * Setzt die Iconklasse (z.B.: `_icon=\"codicon codicon-home`).\r\n\t */\r\n\t@Prop() public _icon?: string;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t * @deprecated use _hide-label\r\n\t */\r\n\t@Prop() public _iconOnly?: boolean;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _label!: LabelPropType;\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Funktionen für die Button-Events an.\r\n\t */\r\n\t@Prop() public _on?: { onClick: KoliBriSplitButtonCallback };\r\n\r\n\t/**\r\n\t * Gibt die Rolle des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _role?: AlternativButtonLinkRole;\r\n\r\n\t/**\r\n\t * Gibt die Rolle des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _showDropdown?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt an, welchen Tab-Index das primäre Element in der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)\r\n\t */\r\n\t@Prop() public _tabIndex?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob der Tooltip bevorzugt entweder oben, rechts, unten oder links angezeigt werden soll.\r\n\t */\r\n\t@Prop() public _tooltipAlign?: Align = 'top';\r\n\r\n\t/**\r\n\t * Setzt den Typ der Komponente oder des interaktiven Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _type?: KoliBriButtonType = 'button';\r\n\r\n\t/**\r\n\t * Gibt einen Wert an, den der Schalter bei einem Klick zurückgibt.\r\n\t */\r\n\t@Prop() public _value?: Stringified<unknown>;\r\n\r\n\t/**\r\n\t * Gibt an, welche Variante der Darstellung genutzt werden soll.\r\n\t */\r\n\t@Prop() public _variant?: KoliBriButtonVariant = 'normal';\r\n\r\n\t@State() public state: KoliBriSplitButtonAStates = {\r\n\t\t_icon: '',\r\n\t\t_label: '',\r\n\t\t_on: {},\r\n\t\t_showDropdown: false,\r\n\t};\r\n\r\n\t@Watch('_accessKey')\r\n\tpublic validateAccessKey(value?: string): void {\r\n\t\twatchString(this, '_accessKey', value);\r\n\t}\r\n\r\n\t@Watch('_ariaControls')\r\n\tpublic validateAriaControls(value?: string): void {\r\n\t\twatchString(this, '_ariaControls', value);\r\n\t}\r\n\r\n\t@Watch('_ariaCurrent')\r\n\tpublic validateAriaCurrent(value?: AriaCurrent): void {\r\n\t\tvalidateAriaCurrent(this, value);\r\n\t}\r\n\r\n\t@Watch('_ariaExpanded')\r\n\tpublic validateAriaExpanded(value?: boolean): void {\r\n\t\tvalidateAriaExpanded(this, value);\r\n\t}\r\n\r\n\t/**\r\n\t * @deprecated use _label\r\n\t */\r\n\t@Watch('_ariaLabel')\r\n\tpublic validateAriaLabel(value?: string): void {\r\n\t\tthis.validateLabel(value);\r\n\t}\r\n\r\n\t@Watch('_ariaSelected')\r\n\tpublic validateAriaSelected(value?: boolean): void {\r\n\t\tvalidateAriaSelected(this, value);\r\n\t}\r\n\r\n\t@Watch('_customClass')\r\n\tpublic validateCustomClass(value?: string): void {\r\n\t\twatchString(this, '_customClass', value, { defaultValue: undefined });\r\n\t}\r\n\r\n\t@Watch('_disabled')\r\n\tpublic validateDisabled(value?: boolean): void {\r\n\t\tvalidateDisabled(this, value);\r\n\t\tif (value) a11yHintDisabled();\r\n\t}\r\n\r\n\t@Watch('_hideLabel')\r\n\tpublic validateHideLabel(value?: boolean): void {\r\n\t\tvalidateHideLabel(this, value);\r\n\t}\r\n\r\n\t@Watch('_icon')\r\n\tpublic validateIcon(value?: string): void {\r\n\t\twatchString(this, '_icon', value);\r\n\t}\r\n\r\n\t@Watch('_iconOnly')\r\n\tpublic validateIconOnly(value?: boolean): void {\r\n\t\tthis.validateHideLabel(value);\r\n\t}\r\n\r\n\t@Watch('_label')\r\n\tpublic validateLabel(value?: LabelPropType): void {\r\n\t\tvalidateLabel(this, value);\r\n\t}\r\n\r\n\t@Watch('_on')\r\n\tpublic validateOn(value?: { onClick: KoliBriSplitButtonCallback }): void {\r\n\t\tif (typeof value === 'object' && value !== null) {\r\n\t\t\tthis.state = {\r\n\t\t\t\t...this.state,\r\n\t\t\t\t_on: value,\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n\r\n\t@Watch('_role')\r\n\tpublic validateRole(value?: AlternativButtonLinkRole): void {\r\n\t\twatchString(this, '_role', value);\r\n\t}\r\n\r\n\t@Watch('_showDropdown')\r\n\tpublic validateShowDropdown(value?: boolean): void {\r\n\t\twatchBoolean(this, '_showDropdown', value);\r\n\t\tthis.toggleDropdown(value);\r\n\t}\r\n\r\n\t@Watch('_tabIndex')\r\n\tpublic validateTabIndex(value?: number): void {\r\n\t\tvalidateTabIndex(this, value);\r\n\t}\r\n\r\n\t@Watch('_tooltipAlign')\r\n\tpublic validateTooltipAlign(value?: Align): void {\r\n\t\twatchTooltipAlignment(this, '_tooltipAlign', value);\r\n\t}\r\n\r\n\t@Watch('_type')\r\n\tpublic validateType(value?: KoliBriButtonType): void {\r\n\t\twatchButtonType(this, '_type', value);\r\n\t}\r\n\r\n\t@Watch('_value')\r\n\tpublic validateValue(value?: Stringified<unknown>): void {\r\n\t\tsetState(this, '_value', value);\r\n\t}\r\n\r\n\t@Watch('_variant')\r\n\tpublic validateVariant(value?: KoliBriButtonVariant): void {\r\n\t\twatchButtonVariant(this, '_variant', value);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis.validateAccessKey(this._accessKey);\r\n\t\tthis.validateAriaControls(this._ariaControls);\r\n\t\tthis.validateAriaCurrent(this._ariaCurrent);\r\n\t\tthis.validateAriaExpanded(this._ariaExpanded);\r\n\t\tthis.validateAriaSelected(this._ariaSelected);\r\n\t\tthis.validateCustomClass(this._customClass);\r\n\t\tthis.validateDisabled(this._disabled);\r\n\t\tthis.validateHideLabel(this._hideLabel || this._iconOnly);\r\n\t\tthis.validateIcon(this._icon);\r\n\t\tthis.validateLabel(this._label || this._ariaLabel);\r\n\t\tthis.validateOn(this._on);\r\n\t\tthis.validateRole(this._role);\r\n\t\tthis.validateShowDropdown(this._showDropdown);\r\n\t\tthis.validateTabIndex(this._tabIndex);\r\n\t\tthis.validateTooltipAlign(this._tooltipAlign);\r\n\t\tthis.validateType(this._type);\r\n\t\tthis.validateValue(this._value);\r\n\t\tthis.validateVariant(this._variant);\r\n\t}\r\n}\r\n"],"mappings":"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"}