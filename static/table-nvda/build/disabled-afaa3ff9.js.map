{"version":3,"names":["validateAriaExpanded","component","value","watchBoolean","validateDisabled"],"sources":["src/types/props/aria-expanded.ts","src/types/props/disabled.ts"],"sourcesContent":["import { Generic } from '@a11y-ui/core';\r\n\r\nimport { watchBoolean } from '../../utils/prop.validators';\r\n\r\n/* types */\r\n/** de\r\n * Markiert dieses Element als geöffnet, oder dass das verknüpfte Element (aria-controls/aria-owns) geöffnet ist.\r\n * (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded)\r\n */\r\n/** en\r\n * Marks this element as open/expanded, or that the connected element (aria-controls/aria-owns) is open/expanded.\r\n * (https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Attributes/aria-expanded)\r\n */\r\nexport type PropAriaExpanded = {\r\n\tariaExpanded: boolean;\r\n};\r\n\r\n/* validator */\r\nexport const validateAriaExpanded = (component: Generic.Element.Component, value?: boolean): void => {\r\n\twatchBoolean(component, '_ariaExpanded', value);\r\n};\r\n","import { Generic } from '@a11y-ui/core';\r\n\r\nimport { watchBoolean } from '../../utils/prop.validators';\r\n\r\n/* types */\r\n/** de\r\n * Macht das Element nicht fokussierbar und lässt es alle Events ignorieren.\r\n */\r\n/** en\r\n * Makes the element not focusable and ignore all events.\r\n */\r\nexport type PropDisabled = {\r\n\tdisabled: boolean;\r\n};\r\n\r\n/* validator */\r\nexport const validateDisabled = (component: Generic.Element.Component, value?: boolean): void => {\r\n\twatchBoolean(component, '_disabled', value);\r\n};\r\n"],"mappings":";;;wDAkBaA,EAAuB,CAACC,EAAsCC,KAC1EC,EAAaF,EAAW,gBAAiBC,EAAM,E,MCHnCE,EAAmB,CAACH,EAAsCC,KACtEC,EAAaF,EAAW,YAAaC,EAAM,S"}