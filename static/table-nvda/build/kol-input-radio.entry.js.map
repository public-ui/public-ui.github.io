{"version":3,"names":["defaultStyleCss","KolInputRadio","render","ariaDescribedBy","hasError","getRenderStates","this","state","showExpertSlot","_label","showDefaultSlot","h","Host","class","disabled","_disabled","error","required","_required","_orientation","name","_list","map","option","index","customId","_id","slotName","key","_hideLabel","_hint","_renderNoLabel","_slotName","_touched","slot","Object","assign","ref","_value","value","catchRef","undefined","accessKey","_accessKey","length","join","title","type","id","checked","_name","tabIndex","_tabIndex","controller","onFacade","onChange","htmlFor","style","height","margin","padding","visibility","label","_alert","_type","_variant","_error","constructor","hostRef","propagateFocus","host","event","target","HTMLInputElement","getOptionByKey","setValue","nonce","InputRadioController","validateAccessKey","validateAlert","validateDisabled","validateError","validateHideLabel","validateHint","validateId","validateLabel","validateList","validateName","validateOn","validateOrientation","validateRequired","validateSyncValueBySelector","validateTabIndex","validateTouched","validateValue","componentWillLoad"],"sources":["src/components/input-radio/style.css?tag=kol-input-radio&mode=default&encapsulation=shadow","src/components/input-radio/component.tsx"],"sourcesContent":["@import url(../input.css);\n:host {\n\t--border-width: 2px;\n\t--input-size: 1.5em;\n}\nkol-input .icons {\n\tdisplay: none;\n}\nlabel {\n\tcursor: pointer;\n}\ninput {\n\tappearance: none;\n\tborder-width: var(--border-width);\n\tborder-style: solid;\n\tborder-radius: 100%;\n\tcursor: pointer;\n\tdisplay: flex;\n\theight: var(--input-size);\n\tmargin: 0;\n\tmin-height: var(--input-size);\n\tmin-width: var(--input-size);\n\tpadding: 0;\n\twidth: var(--input-size);\n}\ninput:before {\n\tborder-radius: 100%;\n\tcontent: '';\n\tmargin: auto;\n\theight: calc(var(--input-size) / 2);\n\twidth: calc(var(--input-size) / 2);\n}\ninput:checked:before {\n\tbackground-color: #000;\n}\nfieldset {\n\tdisplay: flex;\n}\nfieldset.vertical {\n\tflex-direction: column;\n}\nfieldset [slot='input'] {\n\talign-items: center;\n\tdisplay: flex;\n}\n/* required star is on fieldset legend */\n.required label > span::after {\n\tcontent: '';\n}\n","import { Component, Element, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { Stringified } from '../../types/common';\r\nimport { InputTypeOnDefault, Option } from '../../types/input/types';\r\nimport { Orientation } from '../../types/orientation';\r\nimport { LabelWithExpertSlotPropType } from '../../types/props/label';\r\nimport { W3CInputValue } from '../../types/w3c';\r\nimport { nonce } from '../../utils/dev.utils';\r\nimport { propagateFocus } from '../../utils/reuse';\r\nimport { getRenderStates } from '../input/controller';\r\nimport { InputRadioController } from './controller';\r\nimport { ComponentApi, States } from './types';\r\n\r\n/**\r\n * @slot - Die Legende/Überschrift der Radiobuttons.\r\n */\r\n@Component({\r\n\ttag: 'kol-input-radio',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolInputRadio implements ComponentApi {\r\n\t@Element() private readonly host?: HTMLKolInputRadioElement;\r\n\tprivate ref?: HTMLInputElement;\r\n\r\n\tprivate readonly catchRef = (ref?: HTMLInputElement) => {\r\n\t\tthis.ref = ref;\r\n\t\tpropagateFocus(this.host, this.ref);\r\n\t};\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst { ariaDescribedBy, hasError } = getRenderStates(this.state);\r\n\t\tconst showExpertSlot = this.state._label === ''; // _label=\"\" or _label\r\n\t\tconst showDefaultSlot = this.state._label === '…'; // deprecated: default slot will be removed in v2.0.0\r\n\t\treturn (\r\n\t\t\t<Host>\r\n\t\t\t\t<fieldset\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\tdisabled: this.state._disabled === true,\r\n\t\t\t\t\t\terror: hasError === true,\r\n\t\t\t\t\t\trequired: this.state._required === true,\r\n\t\t\t\t\t\t[this.state._orientation]: true,\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t<legend class=\"block w-full mb-1 leading-normal\">\r\n\t\t\t\t\t\t{/* INFO: span is needed for css styling :after content like a star (*) or optional text ! */}\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{/* INFO: label comes with any html tag or as plain text! */}\r\n\t\t\t\t\t\t\t{showExpertSlot ? <slot name=\"expert\"></slot> : showDefaultSlot ? <slot></slot> : this.state._label}\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</legend>\r\n\t\t\t\t\t{this.state._list.map((option, index) => {\r\n\t\t\t\t\t\t/**\r\n\t\t\t\t\t\t * Damit der Value einer Option ein beliebigen Typ haben kann\r\n\t\t\t\t\t\t * muss man auf HTML-Ebene den Value auf einen String-Wert\r\n\t\t\t\t\t\t * mappen. Das tun wir mittels der Map.\r\n\t\t\t\t\t\t */\r\n\t\t\t\t\t\tconst customId = `${this.state._id}-${index}`;\r\n\t\t\t\t\t\tconst slotName = `radio-${index}`;\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<kol-input\r\n\t\t\t\t\t\t\t\tclass=\"radio\"\r\n\t\t\t\t\t\t\t\tkey={customId}\r\n\t\t\t\t\t\t\t\t_disabled={this.state._disabled || option.disabled}\r\n\t\t\t\t\t\t\t\t_hideLabel={this.state._hideLabel}\r\n\t\t\t\t\t\t\t\t_hint={this.state._hint}\r\n\t\t\t\t\t\t\t\t_id={customId}\r\n\t\t\t\t\t\t\t\t_renderNoLabel={true}\r\n\t\t\t\t\t\t\t\t_required={this.state._required}\r\n\t\t\t\t\t\t\t\t_slotName={slotName}\r\n\t\t\t\t\t\t\t\t_touched={this.state._touched}\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t<div slot={slotName}>\r\n\t\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\t\tref={this.state._value === option.value ? this.catchRef : undefined}\r\n\t\t\t\t\t\t\t\t\t\taccessKey={this.state._accessKey} // by radio?!\r\n\t\t\t\t\t\t\t\t\t\taria-describedby={ariaDescribedBy.length > 0 ? ariaDescribedBy.join(' ') : undefined}\r\n\t\t\t\t\t\t\t\t\t\taria-labelledby={`${customId}-label`}\r\n\t\t\t\t\t\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\t\t\t\t\t\ttype=\"radio\"\r\n\t\t\t\t\t\t\t\t\t\tid={customId}\r\n\t\t\t\t\t\t\t\t\t\tchecked={this.state._value === option.value}\r\n\t\t\t\t\t\t\t\t\t\tname={this.state._name || this.state._id}\r\n\t\t\t\t\t\t\t\t\t\tdisabled={this.state._disabled || option.disabled}\r\n\t\t\t\t\t\t\t\t\t\trequired={this.state._required}\r\n\t\t\t\t\t\t\t\t\t\ttabIndex={this.state._tabIndex}\r\n\t\t\t\t\t\t\t\t\t\tvalue={`-${index}`}\r\n\t\t\t\t\t\t\t\t\t\t{...this.controller.onFacade}\r\n\t\t\t\t\t\t\t\t\t\tonChange={this.onChange}\r\n\t\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t\t\t<label\r\n\t\t\t\t\t\t\t\t\t\thtmlFor={`${customId}`}\r\n\t\t\t\t\t\t\t\t\t\tid={`${customId}-label`}\r\n\t\t\t\t\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\t\t\t\t\theight: this.state._hideLabel && this.state._required !== true ? '0' : undefined,\r\n\t\t\t\t\t\t\t\t\t\t\tmargin: this.state._hideLabel && this.state._required !== true ? '0' : undefined,\r\n\t\t\t\t\t\t\t\t\t\t\tpadding: this.state._hideLabel && this.state._required !== true ? '0' : undefined,\r\n\t\t\t\t\t\t\t\t\t\t\tvisibility: this.state._hideLabel && this.state._required !== true ? 'hidden' : undefined,\r\n\t\t\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t\t\t\t\t<span>{option.label}</span>\r\n\t\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t\t</label>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t</kol-input>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t\t{hasError && (\r\n\t\t\t\t\t\t<kol-alert id=\"error\" _alert={true} _type=\"error\" _variant=\"msg\">\r\n\t\t\t\t\t\t\t{this.state._error}\r\n\t\t\t\t\t\t</kol-alert>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</fieldset>\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate readonly controller: InputRadioController;\r\n\r\n\t/**\r\n\t * Gibt an, mit welcher Tastenkombination man das interaktive Element der Komponente auslösen oder fokussieren kann.\r\n\t */\r\n\t@Prop() public _accessKey?: string;\r\n\r\n\t/**\r\n\t * Gibt an, ob der Screenreader die Meldung aktiv vorlesen soll.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _alert?: boolean = true;\r\n\r\n\t/**\r\n\t * Deaktiviert das interaktive Element in der Komponente und erlaubt keine Interaktion mehr damit.\r\n\t */\r\n\t@Prop() public _disabled?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Text für eine Fehlermeldung an.\r\n\t */\r\n\t@Prop() public _error?: string;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t */\r\n\t@Prop() public _hideLabel?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Hinweistext an.\r\n\t */\r\n\t@Prop() public _hint?: string = '';\r\n\r\n\t/**\r\n\t * Gibt die interne ID des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _id?: string;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _label!: LabelWithExpertSlotPropType;\r\n\r\n\t/**\r\n\t * Gibt die Liste der Optionen für das Eingabefeld an.\r\n\t */\r\n\t@Prop() public _list!: Stringified<Option<W3CInputValue>[]>;\r\n\r\n\t/**\r\n\t * Gibt den technischen Namen des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _name?: string;\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Funktionen für das Input-Event an.\r\n\t */\r\n\t@Prop() public _on?: InputTypeOnDefault;\r\n\r\n\t/**\r\n\t * Gibt die horizontale oder vertikale Ausrichtung der Komponente an.\r\n\t */\r\n\t@Prop() public _orientation?: Orientation = 'vertical';\r\n\r\n\t/**\r\n\t * Macht das Eingabeelement zu einem Pflichtfeld.\r\n\t */\r\n\t@Prop() public _required?: boolean;\r\n\r\n\t/**\r\n\t * Selector for synchronizing the value with another input element.\r\n\t * @internal\r\n\t */\r\n\t@Prop() public _syncValueBySelector?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welchen Tab-Index das primäre Element in der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)\r\n\t */\r\n\t@Prop() public _tabIndex?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/berührt wurde.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _touched?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt den Wert der Radio an. (Known Bug: https://github.com/ionic-team/stencil/issues/3902)\r\n\t */\r\n\t@Prop() public _value?: Stringified<W3CInputValue>;\r\n\r\n\t@State() public state: States = {\r\n\t\t_id: nonce(), // ⚠ required\r\n\t\t_label: false, // ⚠ required\r\n\t\t_list: [],\r\n\t\t_orientation: 'vertical',\r\n\t};\r\n\r\n\tpublic constructor() {\r\n\t\tthis.controller = new InputRadioController(this, 'radio', this.host);\r\n\t}\r\n\r\n\t@Watch('_accessKey')\r\n\tpublic validateAccessKey(value?: string): void {\r\n\t\tthis.controller.validateAccessKey(value);\r\n\t}\r\n\r\n\t@Watch('_alert')\r\n\tpublic validateAlert(value?: boolean): void {\r\n\t\tthis.controller.validateAlert(value);\r\n\t}\r\n\r\n\t@Watch('_disabled')\r\n\tpublic validateDisabled(value?: boolean): void {\r\n\t\tthis.controller.validateDisabled(value);\r\n\t}\r\n\r\n\t@Watch('_error')\r\n\tpublic validateError(value?: string): void {\r\n\t\tthis.controller.validateError(value);\r\n\t}\r\n\r\n\t@Watch('_hideLabel')\r\n\tpublic validateHideLabel(value?: boolean): void {\r\n\t\tthis.controller.validateHideLabel(value);\r\n\t}\r\n\r\n\t@Watch('_hint')\r\n\tpublic validateHint(value?: string): void {\r\n\t\tthis.controller.validateHint(value);\r\n\t}\r\n\r\n\t@Watch('_id')\r\n\tpublic validateId(value?: string): void {\r\n\t\tthis.controller.validateId(value);\r\n\t}\r\n\r\n\t@Watch('_label')\r\n\tpublic validateLabel(value?: LabelWithExpertSlotPropType): void {\r\n\t\tthis.controller.validateLabel(value);\r\n\t}\r\n\r\n\t@Watch('_list')\r\n\tpublic validateList(value?: Stringified<Option<W3CInputValue>[]>): void {\r\n\t\tthis.controller.validateList(value);\r\n\t}\r\n\r\n\t@Watch('_name')\r\n\tpublic validateName(value?: string): void {\r\n\t\tthis.controller.validateName(value);\r\n\t}\r\n\r\n\t@Watch('_on')\r\n\tpublic validateOn(value?: InputTypeOnDefault): void {\r\n\t\tthis.controller.validateOn(value);\r\n\t}\r\n\r\n\t@Watch('_orientation')\r\n\tpublic validateOrientation(value?: Orientation): void {\r\n\t\tthis.controller.validateOrientation(value);\r\n\t}\r\n\r\n\t@Watch('_required')\r\n\tpublic validateRequired(value?: boolean): void {\r\n\t\tthis.controller.validateRequired(value);\r\n\t}\r\n\r\n\t@Watch('_syncValueBySelector')\r\n\tpublic validateSyncValueBySelector(value?: string): void {\r\n\t\tthis.controller.validateSyncValueBySelector(value);\r\n\t}\r\n\r\n\t@Watch('_tabIndex')\r\n\tpublic validateTabIndex(value?: number): void {\r\n\t\tthis.controller.validateTabIndex(value);\r\n\t}\r\n\r\n\t@Watch('_touched')\r\n\tpublic validateTouched(value?: boolean): void {\r\n\t\tthis.controller.validateTouched(value);\r\n\t}\r\n\r\n\t@Watch('_value')\r\n\tpublic validateValue(value?: Stringified<unknown>): void {\r\n\t\tthis.controller.validateValue(value);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis._alert = this._alert === true;\r\n\t\tthis._touched = this._touched === true;\r\n\t\tthis.controller.componentWillLoad(this.onChange);\r\n\t}\r\n\r\n\tprivate onChange = (event: Event): void => {\r\n\t\tif (event.target instanceof HTMLInputElement) {\r\n\t\t\tconst option = this.controller.getOptionByKey(event.target.value);\r\n\t\t\tif (option !== undefined) {\r\n\t\t\t\tthis.controller.setValue(event, option.value as string); // TODO: fix type\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n}\r\n"],"mappings":"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"}