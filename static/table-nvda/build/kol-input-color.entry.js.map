{"version":3,"names":["InputColorController","InputIconController","constructor","component","name","host","super","this","validateAutoComplete","value","watchValidator","Set","validateList","watchJsonArrayString","item","validateValue","watchString","setFormAssociatedValue","state","_value","componentWillLoad","_autoComplete","_list","defaultStyleCss","KolInputColor","render","ariaDescribedBy","getRenderStates","hasList","Array","isArray","length","showExpertSlot","_label","showDefaultSlot","h","Host","class","color","_hideLabel","_disabled","_error","_hint","_icon","_id","_smartButton","_touched","onClick","_a","ref","focus","slot","Object","assign","catchRef","title","accessKey","_accessKey","join","undefined","autoCapitalize","autoComplete","autoCorrect","disabled","id","list","_name","spellcheck","type","controller","onFacade","hostRef","propagateFocus","nonce","validateAccessKey","validateAlert","validateDisabled","validateError","validateHideLabel","validateHint","validateIcon","validateId","validateLabel","validateName","validateOn","validateSmartButton","validateSyncValueBySelector","validateTabIndex","validateTouched","_alert"],"sources":["src/components/input-color/controller.ts","src/components/input-color/style.css?tag=kol-input-color&mode=default&encapsulation=shadow","src/components/input-color/component.tsx"],"sourcesContent":["import { Generic } from '@a11y-ui/core';\r\n\r\nimport { Stringified } from '../../types/common';\r\nimport { InputTypeOnOff } from '../../types/input/types';\r\nimport { watchJsonArrayString, watchString, watchValidator } from '../../utils/prop.validators';\r\nimport { InputIconController } from '../@deprecated/input/controller-icon';\r\nimport { Props, Watches } from './types';\r\n\r\nexport class InputColorController extends InputIconController implements Watches {\r\n\tprotected readonly component: Generic.Element.Component & Props;\r\n\r\n\tpublic constructor(component: Generic.Element.Component & Props, name: string, host?: HTMLElement) {\r\n\t\tsuper(component, name, host);\r\n\t\tthis.component = component;\r\n\t}\r\n\r\n\tpublic validateAutoComplete(value?: InputTypeOnOff): void {\r\n\t\twatchValidator(\r\n\t\t\tthis.component,\r\n\t\t\t'_autoComplete',\r\n\t\t\t(value): boolean => typeof value === 'string' && (value === 'on' || value === 'off'),\r\n\t\t\tnew Set(['on | off']),\r\n\t\t\tvalue\r\n\t\t);\r\n\t}\r\n\r\n\tpublic validateList(value?: Stringified<string[]>): void {\r\n\t\twatchJsonArrayString(this.component, '_list', (item: string) => typeof item === 'string', value);\r\n\t}\r\n\r\n\tpublic validateValue(value?: string): void {\r\n\t\twatchString(this.component, '_value', value);\r\n\t\tthis.setFormAssociatedValue(this.component.state._value as string);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tsuper.componentWillLoad();\r\n\t\tthis.validateAutoComplete(this.component._autoComplete);\r\n\t\tthis.validateList(this.component._list);\r\n\t\tthis.validateValue(this.component._value);\r\n\t}\r\n}\r\n","@import url(../input-line.css);\ndiv.input {\n\tcursor: pointer;\n}\n","import { Component, Element, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { ButtonProps } from '../../types/button-link';\r\nimport { Stringified } from '../../types/common';\r\nimport { KoliBriHorizontalIcon } from '../../types/icon';\r\nimport { InputTypeOnDefault, InputTypeOnOff } from '../../types/input/types';\r\nimport { LabelWithExpertSlotPropType } from '../../types/props/label';\r\nimport { nonce } from '../../utils/dev.utils';\r\nimport { propagateFocus } from '../../utils/reuse';\r\nimport { getRenderStates } from '../input/controller';\r\nimport { InputColorController } from './controller';\r\nimport { ComponentApi, States } from './types';\r\n\r\n/**\r\n * @slot - Die Beschriftung des Eingabefeldes.\r\n */\r\n@Component({\r\n\ttag: 'kol-input-color',\r\n\tstyleUrls: {\r\n\t\tdefault: './style.css',\r\n\t},\r\n\tshadow: true,\r\n})\r\nexport class KolInputColor implements ComponentApi {\r\n\t@Element() private readonly host?: HTMLKolInputColorElement;\r\n\tprivate ref?: HTMLInputElement;\r\n\r\n\tprivate readonly catchRef = (ref?: HTMLInputElement) => {\r\n\t\tthis.ref = ref;\r\n\t\tpropagateFocus(this.host, this.ref);\r\n\t};\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tconst { ariaDescribedBy } = getRenderStates(this.state);\r\n\t\tconst hasList = Array.isArray(this.state._list) && this.state._list.length > 0;\r\n\t\tconst showExpertSlot = this.state._label === ''; // _label=\"\" or _label\r\n\t\tconst showDefaultSlot = this.state._label === '…'; // deprecated: default slot will be removed in v2.0.0\r\n\t\treturn (\r\n\t\t\t<Host>\r\n\t\t\t\t<kol-input\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\tcolor: true,\r\n\t\t\t\t\t\t'hide-label': !!this.state._hideLabel,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\t_disabled={this.state._disabled}\r\n\t\t\t\t\t_error={this.state._error}\r\n\t\t\t\t\t_hideLabel={this.state._hideLabel}\r\n\t\t\t\t\t_hint={this.state._hint}\r\n\t\t\t\t\t_icon={this.state._icon}\r\n\t\t\t\t\t_id={this.state._id}\r\n\t\t\t\t\t_list={this.state._list}\r\n\t\t\t\t\t_smartButton={this.state._smartButton}\r\n\t\t\t\t\t_touched={this.state._touched}\r\n\t\t\t\t\tonClick={() => this.ref?.focus()}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span slot=\"label\">{showExpertSlot ? <slot name=\"expert\"></slot> : showDefaultSlot ? <slot></slot> : this.state._label}</span>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tref={this.catchRef}\r\n\t\t\t\t\t\ttitle=\"\"\r\n\t\t\t\t\t\taccessKey={this.state._accessKey}\r\n\t\t\t\t\t\taria-describedby={ariaDescribedBy.length > 0 ? ariaDescribedBy.join(' ') : undefined}\r\n\t\t\t\t\t\taria-labelledby={`${this.state._id}-label`}\r\n\t\t\t\t\t\tautoCapitalize=\"off\"\r\n\t\t\t\t\t\tautoComplete={this.state._autoComplete}\r\n\t\t\t\t\t\tautoCorrect=\"off\"\r\n\t\t\t\t\t\tdisabled={this.state._disabled === true}\r\n\t\t\t\t\t\tid={this.state._id}\r\n\t\t\t\t\t\tlist={hasList ? `${this.state._id}-list` : undefined}\r\n\t\t\t\t\t\tname={this.state._name}\r\n\t\t\t\t\t\tslot=\"input\"\r\n\t\t\t\t\t\tspellcheck=\"false\"\r\n\t\t\t\t\t\ttype=\"color\"\r\n\t\t\t\t\t\tvalue={this.state._value as string}\r\n\t\t\t\t\t\t{...this.controller.onFacade}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</kol-input>\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\tprivate readonly controller: InputColorController;\r\n\r\n\t/**\r\n\t * Gibt an, mit welcher Tastenkombination man das interaktive Element der Komponente auslösen oder fokussieren kann.\r\n\t */\r\n\t@Prop() public _accessKey?: string;\r\n\r\n\t/**\r\n\t * Gibt an, ob der Screenreader die Meldung aktiv vorlesen soll.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _alert?: boolean = true;\r\n\r\n\t/**\r\n\t * Gibt an, ob das Eingabefeld autovervollständigt werden kann.\r\n\t */\r\n\t@Prop() public _autoComplete?: InputTypeOnOff;\r\n\r\n\t/**\r\n\t * Deaktiviert das interaktive Element in der Komponente und erlaubt keine Interaktion mehr damit.\r\n\t */\r\n\t@Prop() public _disabled?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Text für eine Fehlermeldung an.\r\n\t */\r\n\t@Prop() public _error?: string;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t */\r\n\t@Prop() public _hideLabel?: boolean;\r\n\r\n\t/**\r\n\t * Gibt den Hinweistext an.\r\n\t */\r\n\t@Prop() public _hint?: string = '';\r\n\r\n\t/**\r\n\t * Setzt die Iconklasse (z.B.: `_icon=\"codicon codicon-home`).\r\n\t */\r\n\t@Prop() public _icon?: Stringified<KoliBriHorizontalIcon>;\r\n\r\n\t/**\r\n\t * Gibt die interne ID des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _id?: string;\r\n\r\n\t/**\r\n\t * Setzt die sichtbare oder semantische Beschriftung der Komponente (z.B. Aria-Label, Label, Headline, Caption, Summary usw.).\r\n\t */\r\n\t@Prop() public _label!: LabelWithExpertSlotPropType;\r\n\r\n\t/**\r\n\t * Gibt die Liste der Vorschlagswörter an.\r\n\t */\r\n\t@Prop() public _list?: Stringified<string[]>;\r\n\r\n\t/**\r\n\t * Gibt den technischen Namen des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _name?: string;\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Funktionen für das Input-Event an.\r\n\t */\r\n\t@Prop() public _on?: InputTypeOnDefault;\r\n\r\n\t/**\r\n\t * Ermöglicht eine Schaltfläche ins das Eingabefeld mit einer beliebigen Aktion zu einzufügen (ohne label).\r\n\t */\r\n\t@Prop() public _smartButton?: ButtonProps;\r\n\r\n\t/**\r\n\t * Selector for synchronizing the value with another input element.\r\n\t * @internal\r\n\t */\r\n\t@Prop() public _syncValueBySelector?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welchen Tab-Index das primäre Element in der Komponente hat. (https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex)\r\n\t */\r\n\t@Prop() public _tabIndex?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/berührt wurde.\r\n\t */\r\n\t@Prop({ mutable: true, reflect: true }) public _touched?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt den Wert des Eingabefeldes an.\r\n\t */\r\n\t@Prop() public _value?: string;\r\n\r\n\t@State() public state: States = {\r\n\t\t_autoComplete: 'off',\r\n\t\t_id: nonce(), // ⚠ required\r\n\t\t_label: false, // ⚠ required\r\n\t\t_list: [],\r\n\t};\r\n\r\n\tpublic constructor() {\r\n\t\tthis.controller = new InputColorController(this, 'color', this.host);\r\n\t}\r\n\r\n\t@Watch('_accessKey')\r\n\tpublic validateAccessKey(value?: string): void {\r\n\t\tthis.controller.validateAccessKey(value);\r\n\t}\r\n\r\n\t@Watch('_alert')\r\n\tpublic validateAlert(value?: boolean): void {\r\n\t\tthis.controller.validateAlert(value);\r\n\t}\r\n\r\n\t@Watch('_autoComplete')\r\n\tpublic validateAutoComplete(value?: InputTypeOnOff): void {\r\n\t\tthis.controller.validateAutoComplete(value);\r\n\t}\r\n\r\n\t@Watch('_disabled')\r\n\tpublic validateDisabled(value?: boolean): void {\r\n\t\tthis.controller.validateDisabled(value);\r\n\t}\r\n\r\n\t@Watch('_error')\r\n\tpublic validateError(value?: string): void {\r\n\t\tthis.controller.validateError(value);\r\n\t}\r\n\r\n\t@Watch('_hideLabel')\r\n\tpublic validateHideLabel(value?: boolean): void {\r\n\t\tthis.controller.validateHideLabel(value);\r\n\t}\r\n\r\n\t@Watch('_hint')\r\n\tpublic validateHint(value?: string): void {\r\n\t\tthis.controller.validateHint(value);\r\n\t}\r\n\r\n\t@Watch('_icon')\r\n\tpublic validateIcon(value?: Stringified<KoliBriHorizontalIcon>): void {\r\n\t\tthis.controller.validateIcon(value);\r\n\t}\r\n\r\n\t@Watch('_id')\r\n\tpublic validateId(value?: string): void {\r\n\t\tthis.controller.validateId(value);\r\n\t}\r\n\r\n\t@Watch('_label')\r\n\tpublic validateLabel(value?: LabelWithExpertSlotPropType): void {\r\n\t\tthis.controller.validateLabel(value);\r\n\t}\r\n\r\n\t@Watch('_list')\r\n\tpublic validateList(value?: Stringified<string[]>): void {\r\n\t\tthis.controller.validateList(value);\r\n\t}\r\n\r\n\t@Watch('_name')\r\n\tpublic validateName(value?: string): void {\r\n\t\tthis.controller.validateName(value);\r\n\t}\r\n\r\n\t@Watch('_on')\r\n\tpublic validateOn(value?: InputTypeOnDefault): void {\r\n\t\tthis.controller.validateOn(value);\r\n\t}\r\n\r\n\t@Watch('_smartButton')\r\n\tpublic validateSmartButton(value?: ButtonProps | string): void {\r\n\t\tthis.controller.validateSmartButton(value);\r\n\t}\r\n\r\n\t@Watch('_syncValueBySelector')\r\n\tpublic validateSyncValueBySelector(value?: string): void {\r\n\t\tthis.controller.validateSyncValueBySelector(value);\r\n\t}\r\n\r\n\t@Watch('_tabIndex')\r\n\tpublic validateTabIndex(value?: number): void {\r\n\t\tthis.controller.validateTabIndex(value);\r\n\t}\r\n\r\n\t@Watch('_touched')\r\n\tpublic validateTouched(value?: boolean): void {\r\n\t\tthis.controller.validateTouched(value);\r\n\t}\r\n\r\n\t@Watch('_value')\r\n\tpublic validateValue(value?: string): void {\r\n\t\tthis.controller.validateValue(value);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis._alert = this._alert === true;\r\n\t\tthis._touched = this._touched === true;\r\n\t\tthis.controller.componentWillLoad();\r\n\t}\r\n}\r\n"],"mappings":"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"}