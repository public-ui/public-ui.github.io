{"version":3,"names":["Icon","props","h","class","_ariaLabel","heading","length","ariaLabel","_icon","icon","AlertIcon","type","translate","KolAlertWc","this","close","_a","_on","onClose","undefined","Event","on","onClick","validateOnValue","value","_level","render","state","_alert","Log","debug","navigator","vibrate","e","setTimeout","validateAlert","Host","_type","_variant","role","_heading","_label","_hasCloser","_hideLabel","left","_tooltipAlign","watchBoolean","validateHasCloser","validateHeading","watchString","validateLevel","watchHeadingLevel","validateOn","setState","validateType","watchValidator","Set","validateVariant","componentWillLoad","KolInput","hasError","_error","_touched","hasHint","_hint","hideLabel","_required","slotName","_slotName","disabled","_disabled","error","_readOnly","required","touched","_renderNoLabel","id","_id","hidden","htmlFor","name","input","_b","right","_c","_smartButton","_customClass","_d","Array","isArray","_list","map","option","_hasCounter","_currentLength","_maxLength","Fragment"],"sources":["src/components/alert/component.tsx","src/components/input/component.tsx"],"sourcesContent":["import { Component, h, Host, JSX, Prop, State, Watch } from '@stencil/core';\r\n\r\nimport { translate } from '../../i18n';\r\nimport { HeadingLevel } from '../../types/heading-level';\r\nimport { validateHasCloser } from '../../types/props/has-closer';\r\nimport { Log } from '../../utils/dev.utils';\r\nimport { setState, watchBoolean, watchString, watchValidator } from '../../utils/prop.validators';\r\nimport { watchHeadingLevel } from '../heading/validation';\r\nimport { AlertType, AlertVariant, API, KoliBriAlertEventCallbacks, States } from './types';\r\n\r\nconst Icon = (props: { ariaLabel: string; icon: string; heading?: string }) => {\r\n\treturn <kol-icon class=\"heading-icon\" _ariaLabel={typeof props.heading === 'string' && props.heading.length > 0 ? '' : props.ariaLabel} _icon={props.icon} />;\r\n};\r\n\r\nconst AlertIcon = (props: { heading?: string; type?: AlertType }) => {\r\n\tswitch (props.type) {\r\n\t\tcase 'error':\r\n\t\t\treturn <Icon ariaLabel={translate('kol-error')} icon=\"codicon codicon-error\" heading={props.heading} />;\r\n\t\tcase 'info':\r\n\t\t\treturn <Icon ariaLabel={translate('kol-info')} icon=\"codicon codicon-info\" heading={props.heading} />;\r\n\t\tcase 'warning':\r\n\t\t\treturn <Icon ariaLabel={translate('kol-warning')} icon=\"codicon codicon-warning\" heading={props.heading} />;\r\n\t\tcase 'success':\r\n\t\t\treturn <Icon ariaLabel={translate('kol-success')} icon=\"codicon codicon-pass\" heading={props.heading} />;\r\n\t\tdefault:\r\n\t\t\treturn <Icon ariaLabel={translate('kol-message')} icon=\"codicon codicon-comment\" heading={props.heading} />;\r\n\t}\r\n};\r\n\r\n/**\r\n * @slot - Der Inhalt der Meldung.\r\n */\r\n@Component({\r\n\ttag: 'kol-alert-wc',\r\n\tshadow: false,\r\n})\r\nexport class KolAlertWc implements API {\r\n\tprivate readonly close = () => {\r\n\t\tif (this._on?.onClose !== undefined) {\r\n\t\t\tthis._on.onClose(new Event('Close'));\r\n\t\t}\r\n\t};\r\n\r\n\tprivate readonly on = {\r\n\t\tonClick: this.close,\r\n\t};\r\n\r\n\tpublic render(): JSX.Element {\r\n\t\tif (this.state._alert) {\r\n\t\t\t/**\r\n\t\t\t * - https://developer.mozilla.org/de/docs/Web/API/Navigator/vibrate\r\n\t\t\t * - https://googlechrome.github.io/samples/vibration/\r\n\t\t\t */\r\n\t\t\ttry {\r\n\t\t\t\tLog.debug(['Navigator should vibrate ...', navigator.vibrate([100, 75, 100, 75, 100])]);\r\n\t\t\t} catch (e) {\r\n\t\t\t\tLog.debug('Navigator does not support vibration.');\r\n\t\t\t}\r\n\r\n\t\t\tsetTimeout(() => {\r\n\t\t\t\tthis.validateAlert(false);\r\n\t\t\t}, 10000);\r\n\t\t}\r\n\r\n\t\treturn (\r\n\t\t\t<Host\r\n\t\t\t\tclass={{\r\n\t\t\t\t\t[this.state._type as string]: true,\r\n\t\t\t\t\t[this.state._variant as string]: true,\r\n\t\t\t\t}}\r\n\t\t\t\trole={this.state._alert ? 'alert' : undefined}\r\n\t\t\t>\r\n\t\t\t\t<div class=\"heading\">\r\n\t\t\t\t\t<AlertIcon heading={this.state._heading} type={this.state._type} />\r\n\t\t\t\t\t<div>\r\n\t\t\t\t\t\t{typeof this.state._heading === 'string' && this.state._heading?.length > 0 && (\r\n\t\t\t\t\t\t\t<kol-heading-wc _label={this.state._heading} _level={this.state._level}></kol-heading-wc>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t{this._variant === 'msg' && (\r\n\t\t\t\t\t\t\t<div class=\"content\">\r\n\t\t\t\t\t\t\t\t<slot />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t{this.state._hasCloser && (\r\n\t\t\t\t\t\t<kol-button-wc\r\n\t\t\t\t\t\t\tclass=\"close\"\r\n\t\t\t\t\t\t\t_hideLabel\r\n\t\t\t\t\t\t\t_icon={{\r\n\t\t\t\t\t\t\t\tleft: {\r\n\t\t\t\t\t\t\t\t\ticon: 'codicon codicon-close',\r\n\t\t\t\t\t\t\t\t},\r\n\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t_label={translate('kol-close')}\r\n\t\t\t\t\t\t\t_on={this.on}\r\n\t\t\t\t\t\t\t_tooltipAlign=\"left\"\r\n\t\t\t\t\t\t></kol-button-wc>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\t\t\t\t{this._variant === 'card' && (\r\n\t\t\t\t\t<div class=\"content\">\r\n\t\t\t\t\t\t<slot />\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Gibt an, ob der Screenreader die Meldung aktiv vorlesen soll.\r\n\t */\r\n\t@Prop() public _alert?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt an, ob die Komponente einen Schließen-Schalter hat.\r\n\t */\r\n\t@Prop() public _hasCloser?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt die Beschriftung der Komponente an.\r\n\t */\r\n\t@Prop() public _heading?: string;\r\n\r\n\t/**\r\n\t * Gibt an, welchen H-Level von 1 bis 6 die Überschrift hat. Oder bei 0, ob es keine Überschrift ist und als fett gedruckter Text angezeigt werden soll.\r\n\t */\r\n\t@Prop() public _level?: HeadingLevel = 1;\r\n\r\n\t/**\r\n\t * Gibt die EventCallback-Function für das Schließen des Alerts an.\r\n\t */\r\n\t@Prop() public _on?: KoliBriAlertEventCallbacks;\r\n\r\n\t/**\r\n\t * Setzt den Typ der Komponente oder des interaktiven Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _type?: AlertType = 'default';\r\n\r\n\t/**\r\n\t * Gibt an, welche Variante der Darstellung genutzt werden soll.\r\n\t */\r\n\t@Prop() public _variant?: AlertVariant = 'msg';\r\n\r\n\t@State() public state: States = {\r\n\t\t_level: 1,\r\n\t};\r\n\r\n\t@Watch('_alert')\r\n\tpublic validateAlert(value?: boolean): void {\r\n\t\twatchBoolean(this, '_alert', value);\r\n\t}\r\n\r\n\t@Watch('_hasCloser')\r\n\tpublic validateHasCloser(value?: boolean): void {\r\n\t\tvalidateHasCloser(this, value);\r\n\t}\r\n\r\n\t@Watch('_heading')\r\n\tpublic validateHeading(value?: string): void {\r\n\t\twatchString(this, '_heading', value);\r\n\t}\r\n\r\n\t@Watch('_level')\r\n\tpublic validateLevel(value?: HeadingLevel): void {\r\n\t\twatchHeadingLevel(this, value);\r\n\t}\r\n\r\n\tprivate validateOnValue = (value: unknown): boolean =>\r\n\t\ttypeof value === 'object' && value !== null && typeof (value as KoliBriAlertEventCallbacks).onClose === 'function';\r\n\r\n\t@Watch('_on')\r\n\tpublic validateOn(value?: KoliBriAlertEventCallbacks): void {\r\n\t\tif (this.validateOnValue(value)) {\r\n\t\t\tsetState<KoliBriAlertEventCallbacks>(\r\n\t\t\t\tthis,\r\n\t\t\t\t'_on',\r\n\t\t\t\t{\r\n\t\t\t\t\tonClose: (value as KoliBriAlertEventCallbacks).onClose,\r\n\t\t\t\t}\r\n\t\t\t\t// {\r\n\t\t\t\t// \tafterPatch: (value: unknown) => {\r\n\t\t\t\t// \t\tthis._hasCloser = this.validateOnValue(value);\r\n\t\t\t\t// \t},\r\n\t\t\t\t// }\r\n\t\t\t);\r\n\t\t\t// } else {\r\n\t\t\t// \tsetState<KoliBriAlertEventCallbacks>(this, '_on', null, {\r\n\t\t\t// \t\tafterPatch: (value: unknown) => {\r\n\t\t\t// \t\t\tthis._hasCloser = this.validateOnValue(value);\r\n\t\t\t// \t\t},\r\n\t\t\t// \t});\r\n\t\t}\r\n\t}\r\n\r\n\t@Watch('_type')\r\n\tpublic validateType(value?: AlertType): void {\r\n\t\twatchValidator(\r\n\t\t\tthis,\r\n\t\t\t'_type',\r\n\t\t\t(value) => typeof value === 'string' && (value === 'default' || value === 'error' || value === 'info' || value === 'success' || value === 'warning'),\r\n\t\t\tnew Set('String {success, info, warning, error}'),\r\n\t\t\tvalue\r\n\t\t);\r\n\t}\r\n\r\n\t@Watch('_variant')\r\n\tpublic validateVariant(value?: AlertVariant): void {\r\n\t\twatchValidator(this, '_variant', (value) => value === 'card' || value === 'msg', new Set('AlertVariant {card, msg}'), value);\r\n\t}\r\n\r\n\tpublic componentWillLoad(): void {\r\n\t\tthis.validateAlert(this._alert);\r\n\t\tthis.validateHasCloser(this._hasCloser);\r\n\t\tthis.validateHeading(this._heading);\r\n\t\tthis.validateLevel(this._level);\r\n\t\tthis.validateOn(this._on);\r\n\t\tthis.validateType(this._type);\r\n\t\tthis.validateVariant(this._variant);\r\n\t}\r\n}\r\n","/* eslint-disable jsx-a11y/label-has-associated-control */\r\nimport { Component, Fragment, h, Host, JSX, Prop } from '@stencil/core';\r\n\r\nimport { translate } from '../../i18n';\r\nimport { ButtonProps } from '../../types/button-link';\r\nimport { Stringified } from '../../types/common';\r\nimport { KoliBriCustomIcon, KoliBriHorizontalIcon } from '../../types/icon';\r\nimport { Props } from './types';\r\n\r\n/**\r\n * @internal\r\n */\r\n@Component({\r\n\ttag: 'kol-input',\r\n\tshadow: false,\r\n})\r\nexport class KolInput implements Props {\r\n\tpublic render(): JSX.Element {\r\n\t\tconst hasError = typeof this._error === 'string' && this._error.length > 0 && this._touched === true;\r\n\t\tconst hasHint = typeof this._hint === 'string' && this._hint.length > 0;\r\n\t\tconst hideLabel = this._hideLabel === true && this._required !== true;\r\n\t\tconst slotName = this._slotName ? this._slotName : 'input';\r\n\r\n\t\treturn (\r\n\t\t\t<Host\r\n\t\t\t\tclass={{\r\n\t\t\t\t\tdisabled: this._disabled === true,\r\n\t\t\t\t\terror: hasError === true,\r\n\t\t\t\t\t'read-only': this._readOnly === true,\r\n\t\t\t\t\trequired: this._required === true,\r\n\t\t\t\t\ttouched: this._touched === true,\r\n\t\t\t\t}}\r\n\t\t\t>\r\n\t\t\t\t{this._renderNoLabel === false && (\r\n\t\t\t\t\t<label id={`${this._id}-label`} hidden={hideLabel} htmlFor={this._id}>\r\n\t\t\t\t\t\t{/* INFO: span is needed for css styling :after content like a star (*) or optional text ! */}\r\n\t\t\t\t\t\t<span>\r\n\t\t\t\t\t\t\t{/* INFO: label comes with any html tag or as plain text! */}\r\n\t\t\t\t\t\t\t<slot name=\"label\"></slot>\r\n\t\t\t\t\t\t</span>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t)}\r\n\t\t\t\t{hasHint && (\r\n\t\t\t\t\t<span class=\"hint\" id={`${this._id}-hint`}>\r\n\t\t\t\t\t\t{this._hint}\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)}\r\n\t\t\t\t<div\r\n\t\t\t\t\tclass={{\r\n\t\t\t\t\t\tinput: true,\r\n\t\t\t\t\t\t'icon-left': typeof this._icon?.left === 'object',\r\n\t\t\t\t\t\t'icon-right': typeof this._icon?.right === 'object',\r\n\t\t\t\t\t}}\r\n\t\t\t\t>\r\n\t\t\t\t\t{this._icon?.left && <kol-icon _ariaLabel=\"\" _icon={(this._icon.left as KoliBriCustomIcon).icon}></kol-icon>}\r\n\t\t\t\t\t<slot name={slotName}></slot>\r\n\t\t\t\t\t{typeof this._smartButton === 'object' && this._smartButton !== null && (\r\n\t\t\t\t\t\t<kol-button-wc\r\n\t\t\t\t\t\t\t_customClass={this._smartButton._customClass}\r\n\t\t\t\t\t\t\t_disabled={this._smartButton._disabled}\r\n\t\t\t\t\t\t\t_icon={this._smartButton._icon}\r\n\t\t\t\t\t\t\t_hideLabel={true}\r\n\t\t\t\t\t\t\t_id={this._smartButton._id}\r\n\t\t\t\t\t\t\t_label={this._smartButton._label}\r\n\t\t\t\t\t\t\t_on={this._smartButton._on}\r\n\t\t\t\t\t\t\t_tooltipAlign={this._smartButton._tooltipAlign}\r\n\t\t\t\t\t\t\t_variant={this._smartButton._variant}\r\n\t\t\t\t\t\t></kol-button-wc>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{this._icon?.right && <kol-icon _ariaLabel=\"\" _icon={(this._icon.right as KoliBriCustomIcon).icon}></kol-icon>}\r\n\t\t\t\t</div>\r\n\t\t\t\t{hasError && (\r\n\t\t\t\t\t<kol-alert class=\"error\" id={`${this._id}-error`} _alert={this._alert} _type=\"error\" _variant=\"msg\">\r\n\t\t\t\t\t\t{this._error}\r\n\t\t\t\t\t</kol-alert>\r\n\t\t\t\t)}\r\n\t\t\t\t{Array.isArray(this._list) && this._list.length > 0 && (\r\n\t\t\t\t\t<datalist id={`${this._id}-list`}>\r\n\t\t\t\t\t\t{this._list.map((option: string) => (\r\n\t\t\t\t\t\t\t<option value={option} />\r\n\t\t\t\t\t\t))}\r\n\t\t\t\t\t</datalist>\r\n\t\t\t\t)}\r\n\t\t\t\t{this._hasCounter && (\r\n\t\t\t\t\t<span aria-atomic=\"true\" aria-live=\"polite\">\r\n\t\t\t\t\t\t{this._currentLength}\r\n\t\t\t\t\t\t{this._maxLength && (\r\n\t\t\t\t\t\t\t<Fragment>\r\n\t\t\t\t\t\t\t\t<span aria-label={translate('kol-of')} role=\"img\">\r\n\t\t\t\t\t\t\t\t\t/\r\n\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t{this._maxLength}\r\n\t\t\t\t\t\t\t</Fragment>\r\n\t\t\t\t\t\t)}{' '}\r\n\t\t\t\t\t\t<span>{translate('kol-characters')}</span>\r\n\t\t\t\t\t</span>\r\n\t\t\t\t)}\r\n\t\t\t</Host>\r\n\t\t);\r\n\t}\r\n\r\n\t/**\r\n\t * Gibt an, ob der Screenreader die Meldung aktiv vorlesen soll.\r\n\t */\r\n\t@Prop() public _alert?: boolean = true;\r\n\r\n\t/**\r\n\t * @internal\r\n\t */\r\n\t@Prop() public _currentLength?: number;\r\n\r\n\t/**\r\n\t * Deaktiviert das interaktive Element in der Komponente und erlaubt keine Interaktion mehr damit.\r\n\t */\r\n\t@Prop() public _disabled?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt den Text für eine Fehlermeldung an.\r\n\t */\r\n\t@Prop() public _error?: string = '';\r\n\r\n\t/**\r\n\t * Aktiviert den Zeichenanzahlzähler am unteren Rand des Eingabefeldes.\r\n\t */\r\n\t@Prop() public _hasCounter?: boolean;\r\n\r\n\t/**\r\n\t * Blendet die Beschriftung (Label) aus und zeigt sie stattdessen mittels eines Tooltips an.\r\n\t */\r\n\t@Prop() public _hideLabel?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt den Hinweistext an.\r\n\t */\r\n\t@Prop() public _hint?: string = '';\r\n\r\n\t/**\r\n\t * Setzt die Iconklasse (z.B.: `_icon=\"codicon codicon-home`).\r\n\t */\r\n\t@Prop() public _icon?: KoliBriHorizontalIcon;\r\n\r\n\t/**\r\n\t * Gibt die interne ID des primären Elements in der Komponente an.\r\n\t */\r\n\t@Prop() public _id!: string;\r\n\r\n\t/**\r\n\t * Gibt die Liste der Vorschlagswörter an.\r\n\t */\r\n\t@Prop() public _list?: Stringified<string[]>;\r\n\r\n\t/**\r\n\t * Gibt an, wie viele Zeichen maximal eingegeben werden können.\r\n\t */\r\n\t@Prop() public _maxLength?: number;\r\n\r\n\t/**\r\n\t * Gibt an, ob die Eingabefeld nur lesend ist.\r\n\t */\r\n\t@Prop() public _readOnly?: boolean = false;\r\n\r\n\t/**\r\n\t * Gibt an, ob die Komponente kein Label rendern soll.\r\n\t */\r\n\t@Prop() public _renderNoLabel?: boolean = false;\r\n\r\n\t/**\r\n\t * Macht das Eingabeelement zu einem Pflichtfeld.\r\n\t */\r\n\t@Prop() public _required?: boolean = false;\r\n\r\n\t/**\r\n\t * Ermöglicht den Slotnamen zu bestimmen. Wird nur verwendet, wenn sonst mehrere Slots mit dem gleichen Namen innerhalb eines ShadowDOMs existieren würden.\r\n\t * @internal\r\n\t */\r\n\t@Prop() public _slotName?: string;\r\n\r\n\t/**\r\n\t * Ermöglicht eine Schaltfläche ins das Eingabefeld mit einer beliebigen Aktion zu einzufügen (ohne label).\r\n\t */\r\n\t@Prop() public _smartButton?: ButtonProps;\r\n\r\n\t/**\r\n\t * Gibt an, ob dieses Eingabefeld von Nutzer:innen einmal besucht/berührt wurde.\r\n\t */\r\n\t@Prop() public _touched?: boolean = false;\r\n}\r\n"],"mappings":"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"}