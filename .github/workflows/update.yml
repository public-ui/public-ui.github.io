# This is a basic workflow to help you get started with Actions

name: update github page

env:
  github-registry: https://npm.pkg.github.com
  github-token: ${{ secrets.GITHUB_TOKEN }}
  npmjs-registry: https://registry.npmjs.org
  scope: public-ui
  token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

on:
  push:
    branches:
      - main
  # schedule:
  #   - cron: '0 4 * * *'
  # workflow_call:
  workflow_dispatch:

jobs:
  update:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # https://github.com/pnpm/action-setup#use-cache-to-reduce-installation-time
      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "${{env.npmjs-registry}}"
          scope: "@${{env.scope}}"
      - uses: pnpm/action-setup@v2
        id: pnpm-install
        with:
          version: 7
          run_install: false
      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT
      - uses: actions/cache@v3
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store # -${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store

      - name: Build doc
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
        run: |
          pnpm i --frozen-lockfile
          npm run build
        working-directory: dev

      - uses: actions/setup-node@v3
        with:
          node-version: 16
          registry-url: "${{env.github-registry}}"
          scope: "@${{env.scope}}"

      - name: Download designer
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
        run: |
          rm -rf package *.tgz
          npm pack @${{env.scope}}/designer
          tar -xzvf public-ui-designer-*.tgz
          mv package/dist build/designer
          rm -rf package *.tgz
          ls -la build
        working-directory: dev

      - name: Download sample react
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
        run: |
          rm -rf package *.tgz
          npm pack @${{env.scope}}/sample-react
          tar -xzvf public-ui-sample-react-*.tgz
          mv package/dist build/sample-react
          rm -rf package *.tgz
          ls -la build
        working-directory: dev

      - name: Download slidev
        env:
          NODE_AUTH_TOKEN: ${{env.token}}
        run: |
          rm -rf package *.tgz
          npm pack @${{env.scope}}/slidev
          tar -xzvf public-ui-slidev-*.tgz
          mv package/dist build/presentation
          mv package/presentation.pdf build/presentation/presentation.pdf
          rm -rf package *.tgz
          ls -la build
        working-directory: dev

      # - name: Download storybook
      #   env:
      #     NODE_AUTH_TOKEN: ${{env.token}}
      #   run: |
      #     rm -rf package *.tgz
      #     npm pack @${{env.scope}}/storybook
      #     tar -xzvf public-ui-storybook-*.tgz
      #     mv package/dist build/storybook
      #     rm -rf package *.tgz
      #     ls -la build
      #   working-directory: dev

      - name: Commit changed files
        continue-on-error: true
        run: |
          rm -rf docs
          mv dev/build docs
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git status
          git commit -m "Auto update github page"

      - uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          force: true
