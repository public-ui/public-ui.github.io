{"file":"kol-icon.entry.js","mappings":";;;;;;AAAA,MAAM,eAAe,GAAG,sk5BAAsk5B,CAAC;AAC/l5B,6BAAe,eAAe;;MCcjB,OAAO;;;;;qBAgCiB;YACnC,MAAM,EAAE,sBAAsB;YAC9B,MAAM,EAAE,EAAE;SACV;;IAlCM,MAAM;QACZ,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,MAAM,GAAG,CAAC,CAAC;QAC9C,QACC,EAAC,IAAI,IAAC,WAAW,EAAC,MAAM,IACvB,wBACc,QAAQ,GAAG,SAAS,GAAG,MAAM,gBAO9B,QAAQ,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,SAAS,EACpD,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM,EACxB,IAAI,EAAC,MAAM,EACX,IAAI,EAAC,KAAK,GACN,CACC,EACN;KACF;IAkBM,aAAa,CAAC,KAAc;QAClC,WAAW,CAAC,IAAI,EAAE,QAAQ,EAAE,KAAK,EAAE;YAClC,QAAQ,EAAE,IAAI;SACd,CAAC,CAAC;KACH;IAGM,aAAa,CAAC,KAAqB;QACzC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE;YAC1B,QAAQ,EAAE,IAAI;SACd,CAAC,CAAC;KACH;IAEM,iBAAiB;QACvB,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;KAChC;;;;;;;;;;;;","names":[],"sources":["src/components/icon/style.css?tag=kol-icon&mode=default&encapsulation=shadow","src/components/icon/component.tsx"],"sourcesContent":["@import url(../../assets/codicons/codicon.css);\n@layer kol-component {\n\t:host {\n\t\tcolor: inherit;\n\t\tdisplay: contents;\n\t\theight: 1em;\n\t\tline-height: inherit;\n\t\twidth: 1em;\n\t}\n\n\t:host > i {\n\t\theight: 1em;\n\t\twidth: 1em;\n\t}\n\n\t/*\n   * The <code>:important</code> is important, because we should always override the font icon style.\n   */\n\t:host > i,\n\t:host > i:before {\n\t\tfont-size: inherit !important;\n\t}\n}\n","import type { IconAPI, IconStates, LabelPropType } from '@public-ui/schema';\nimport { validateLabel, watchString } from '@public-ui/schema';\nimport { Component, h, Host, Prop, State, Watch } from '@stencil/core';\n\nimport type { JSX } from '@stencil/core';\n/**\n * @part icon - Ermöglicht das Styling des inneren Icons.\n */\n@Component({\n\ttag: 'kol-icon',\n\tstyleUrls: {\n\t\tdefault: './style.css',\n\t},\n\tshadow: true,\n})\nexport class KolIcon implements IconAPI {\n\tpublic render(): JSX.Element {\n\t\tconst ariaShow = this.state._label.length > 0;\n\t\treturn (\n\t\t\t<Host exportparts=\"icon\">\n\t\t\t\t<i\n\t\t\t\t\taria-hidden={ariaShow ? undefined : 'true'}\n\t\t\t\t\t/**\n\t\t\t\t\t * Die Auszeichnung `aria-hidden` ist eigentlich nicht erforderlich, da die aktuellen\n\t\t\t\t\t * Screenreader, wie NVDA und JAWS, es auch ohne `aria-hidden` nicht vorlesen.\n\t\t\t\t\t *\n\t\t\t\t\t * Referenz: https://www.w3.org/TR/wai-aria/states_and_properties#aria-hidden\n\t\t\t\t\t */\n\t\t\t\t\taria-label={ariaShow ? this.state._label : undefined}\n\t\t\t\t\tclass={this.state._icons}\n\t\t\t\t\tpart=\"icon\"\n\t\t\t\t\trole=\"img\"\n\t\t\t\t></i>\n\t\t\t</Host>\n\t\t);\n\t}\n\n\t/**\n\t * Defines the icon classnames (e.g. `_icons=\"fa-solid fa-user\"`).\n\t */\n\t@Prop() public _icons!: string;\n\n\t/**\n\t * Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.).\n\t */\n\t@Prop() public _label!: LabelPropType;\n\n\t@State() public state: IconStates = {\n\t\t_icons: 'codicon codicon-home',\n\t\t_label: '', // ⚠ required\n\t};\n\n\t@Watch('_icons')\n\tpublic validateIcons(value?: string): void {\n\t\twatchString(this, '_icons', value, {\n\t\t\trequired: true,\n\t\t});\n\t}\n\n\t@Watch('_label')\n\tpublic validateLabel(value?: LabelPropType): void {\n\t\tvalidateLabel(this, value, {\n\t\t\trequired: true,\n\t\t});\n\t}\n\n\tpublic componentWillLoad(): void {\n\t\tthis.validateIcons(this._icons);\n\t\tthis.validateLabel(this._label);\n\t}\n}\n"],"version":3}