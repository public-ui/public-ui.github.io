{"file":"table-data-foot-8bae51b6.js","mappings":";;;;;MAiBa,iBAAiB,GAAG,CAAC,SAAoC,EAAE,KAAyB,EAAE,aAA6B;IAC/H,yBAAyB,CAAC,KAAK,EAAE;QAChC,mBAAmB,CAAC,KAAK,EAAE;YAC1B,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBACjC,KAAK,GAAG,EAAE,CAAC;aACX;YACD,IAAI;gBACH,KAAK,GAAG,SAAS,CAAyB,KAAK,CAAC,CAAC;aAEjD;YAAC,OAAO,CAAC,EAAE;aAEX;YACD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAA0B,KAAK,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,CAAC,EAAE;gBACnH,QAAQ,CAAC,SAAS,EAAE,OAAO,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;aACnD;SACD,CAAC,CAAC;KACH,CAAC,CAAC;AACJ;;MCjBa,qBAAqB,GAAG,CAAC,SAAoC,EAAE,KAA6B,EAAE,aAA6B;IACvI,yBAAyB,CAAC,KAAK,EAAE;QAChC,mBAAmB,CAAC,KAAK,EAAE;YAC1B,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBACjC,KAAK,GAAG,EAAE,CAAC;aACX;YACD,IAAI;gBACH,KAAK,GAAG,SAAS,CAAyB,KAAK,CAAC,CAAC;aAEjD;YAAC,OAAO,CAAC,EAAE;aAEX;YACD,IAAI,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC,IAA0B,KAAK,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,CAAC,EAAE;gBACnH,QAAQ,CAAC,SAAS,EAAE,WAAW,EAAE,KAAK,EAAE,aAAa,CAAC,CAAC;aACvD;SACD,CAAC,CAAC;KACH,CAAC,CAAC;AACJ;;;;","names":[],"sources":["src/schema/props/table-data.ts","src/schema/props/table-data-foot.ts"],"sourcesContent":["import type { Generic } from 'adopted-style-sheets';\n\nimport type { SetStateHooks } from '../utils';\nimport { emptyStringByArrayHandler, objectObjectHandler, parseJson, setState } from '../utils';\nimport type { KoliBriTableDataType, Stringified } from '../types';\n\n/* types */\nexport type TableDataPropType = Stringified<kolibritabledatatype []>;\n\n/**\n * Defines the primary table data.\n */\nexport type PropTableData = {\n\tdata: TableDataPropType;\n};\n\n/* validator */\nexport const validateTableData = (component: Generic.Element.Component, value?: TableDataPropType, setStateHooks?: SetStateHooks): void => {\n\temptyStringByArrayHandler(value, () => {\n\t\tobjectObjectHandler(value, () => {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\tvalue = [];\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvalue = parseJson<kolibritabledatatype []>(value);\n\t\t\t\t// eslint-disable-next-line no-empty\n\t\t\t} catch (e) {\n\t\t\t\t// value keeps the original data\n\t\t\t}\n\t\t\tif (Array.isArray(value) && value.every((data: KoliBriTableDataType) => typeof data === 'object' && data !== null)) {\n\t\t\t\tsetState(component, '_data', value, setStateHooks);\n\t\t\t}\n\t\t});\n\t});\n};\n","import type { Generic } from 'adopted-style-sheets';\n\nimport type { SetStateHooks } from '../utils';\nimport { emptyStringByArrayHandler, objectObjectHandler, parseJson, setState } from '../utils';\nimport type { KoliBriTableDataType, Stringified } from '../types';\n\n/* types */\nexport type TableDataFootPropType = Stringified<kolibritabledatatype []>;\n\n/**\n * Defines the data for the table footer.\n */\nexport type PropTableDataFoot = {\n\tdataFoot: TableDataFootPropType;\n};\n\n/* validator */\nexport const validateTableDataFoot = (component: Generic.Element.Component, value?: TableDataFootPropType, setStateHooks?: SetStateHooks): void => {\n\temptyStringByArrayHandler(value, () => {\n\t\tobjectObjectHandler(value, () => {\n\t\t\tif (typeof value === 'undefined') {\n\t\t\t\tvalue = [];\n\t\t\t}\n\t\t\ttry {\n\t\t\t\tvalue = parseJson<kolibritabledatatype []>(value);\n\t\t\t\t// eslint-disable-next-line no-empty\n\t\t\t} catch (e) {\n\t\t\t\t// value keeps the original data\n\t\t\t}\n\t\t\tif (Array.isArray(value) && value.every((data: KoliBriTableDataType) => typeof data === 'object' && data !== null)) {\n\t\t\t\tsetState(component, '_dataFoot', value, setStateHooks);\n\t\t\t}\n\t\t});\n\t});\n};\n"],"version":3}</kolibritabledatatype></kolibritabledatatype></kolibritabledatatype></kolibritabledatatype>