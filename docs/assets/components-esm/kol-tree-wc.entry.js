/*! For license information please see kol-tree-wc.entry.js.LICENSE.txt */ import{r as registerInstance,h,H as Host,g as getElement}from"./index-360ad69b.js";import{v as validateLabel}from"./label-452f8c01.js";import"./prop.validators-f2b9a155.js";import"./index-db4aa6e4.js";import"./dev.utils-1ca991a2.js";const TREE_ITEM_TAG_NAME="kol-tree-item",KolTreeWc=class{constructor(e){registerInstance(this,e),this.state={_label:""},this._label=void 0}validateLabel(e){validateLabel(this,e)}render(){return h(Host,{key:"7c9d73edb4c812b2dbb0c14fd7d23d74d8bfea7b",onSlotchange:this.handleSlotchange.bind(this),class:"kol-tree-wc"},h("nav",{key:"b52bf9bda7e966e098509d135b9ea6ae80e5f530",class:"tree","aria-label":this.state._label},h("ul",{key:"2a9f9e5f0bf2dfa56d41bf5d371c18bdc60e0da9",class:"treeview-navigation",role:"tree","aria-label":this.state._label},h("slot",{key:"c114c9fab49fb6298c97851e2d08a800d54e06b2"}))))}static isTreeItem(e){return(null==e?void 0:e.tagName)==="kol-tree-item".toUpperCase()}componentWillLoad(){this.validateLabel(this._label),this.handleTreeChange(),this.observeChildListMutations()}disconnectedCallback(){var e;null===(e=this.observer)||void 0===e||e.disconnect()}observeChildListMutations(){this.observer=new MutationObserver(this.handleTreeChange.bind(this)),this.observeTopLevelItems()}handleSlotchange(){this.observeTopLevelItems(),this.handleTreeChange()}observeTopLevelItems(){this.getTopLevelTreeItems().forEach((e=>{var t;null===(t=this.observer)||void 0===t||t.observe(e,{childList:!0,subtree:!0})}))}getTopLevelTreeItems(){var e;return(null===(e=this.host.querySelector("slot"))||void 0===e?void 0:e.assignedNodes()).filter(KolTreeWc.isTreeItem)}handleTreeChange(){this.treeItemElements=this.getTreeItemElements(),this.ensureActiveItemVisibility()}getTreeItemElements(){return this.getTopLevelTreeItems().reduce(((e,t)=>{const a=t.querySelectorAll("kol-tree-item");return[...e,t,...a]}),[])}async getOpenTreeItemElements(){if(!this.treeItemElements)return;const e=async t=>!KolTreeWc.isTreeItem(t.parentElement)||await t.parentElement.isOpen()&&await e(t.parentElement);return(await Promise.all(this.treeItemElements.map((async t=>({value:t,include:await e(t)}))))).filter((e=>e.include)).map((e=>e.value))}async handleKeyDown(e){var t,a,i,s,l,r,n,o,c;const d=await this.getOpenTreeItemElements(),v=null===(t=document.activeElement)||void 0===t?void 0:t.closest("kol-tree-item");if(!d||!v)return;const u=null==d?void 0:d.findIndex((e=>e===v));switch(e.key){case"ArrowDown":await(null===(a=d[u+1])||void 0===a?void 0:a.focusLink()),e.preventDefault();break;case"ArrowUp":await(null===(i=d[u-1])||void 0===i?void 0:i.focusLink()),e.preventDefault();break;case"Right":case"ArrowRight":e.preventDefault(),await v.isOpen()?await(null===(s=d[u+1])||void 0===s?void 0:s.focusLink()):await v.expand();break;case"Left":case"ArrowLeft":if(e.preventDefault(),await v.isOpen())await v.collapse();else{const e=d.findIndex((e=>e===v.parentElement));-1!==e&&await(null===(l=d[e])||void 0===l?void 0:l.focusLink())}break;case"Home":await(null===(r=d[0])||void 0===r?void 0:r.focusLink()),e.preventDefault();break;case"End":await(null===(n=d[d.length-1])||void 0===n?void 0:n.focusLink()),e.preventDefault();break;case null===(o=e.key.match(/[a-zA-Z0-9]/))||void 0===o?void 0:o.input:{const t=e.key.toLowerCase(),a=d.indexOf(v)+1,i=d.concat(d),s=i.slice(a,a+d.length).findIndex((e=>{var a;return null===(a=e.getAttribute("_label"))||void 0===a?void 0:a.trim().toLowerCase().startsWith(t)}));-1!==s&&(await i[a+s].focusLink(),e.preventDefault());break}case"*":{const e=null===(c=v.parentElement)||void 0===c?void 0:c.querySelectorAll("kol-tree-item");null==e||e.forEach((e=>{e.expand()}));break}}}async handleFocusOut(e){e.relatedTarget&&!e.relatedTarget.closest("kol-tree")&&await this.ensureActiveItemVisibility()}async ensureActiveItemVisibility(){const e=t=>{KolTreeWc.isTreeItem(t.parentElement)&&(t.parentElement.expand(),e(t.parentElement))},t=(()=>{var e;const t=(null===(e=this.host.querySelector("slot"))||void 0===e?void 0:e.assignedNodes()).filter(KolTreeWc.isTreeItem);for(const a of t){if(a._active)return a;const e=a.querySelector('kol-tree-item[_active="true"]');if(e&&e._active)return e}})();t&&e(t)}get host(){return getElement(this)}static get watchers(){return{_label:["validateLabel"]}}};export{KolTreeWc as kol_tree_wc};