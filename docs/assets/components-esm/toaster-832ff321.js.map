{"file":"toaster-832ff321.js","mappings":"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","names":[],"sources":["src/components/toast/toaster.tsx"],"sourcesContent":["import { LabelPropType } from '../../types/props/label';\nimport { AlertType } from '../alert/types';\n\ntype Toast = {\n\tdescription: string;\n\t/**\n\t * @deprecated Use label.\n\t */\n\theading?: string;\n\tlabel?: LabelPropType;\n\ttype: AlertType;\n};\n\n/**\n * @deprecated Use toast/toaster.tsx\n */\nexport class ToasterService {\n\tprivate static readonly instances: Map<document , toasterservice> = new Map<document , toasterservice>();\n\n\tprivate toastElement?: HTMLKolToastElement;\n\n\tprivate readonly queue: Set<toast> = new Set();\n\n\tprivate isOpen = false;\n\n\tprivate constructor(private readonly document: Document) {\n\t\tthis.toastElement = this.document.createElement('kol-toast');\n\t\tthis.toastElement.setAttribute('_level', '0');\n\t\tthis.toastElement.setAttribute('_show', 'false');\n\t\tthis.toastElement.setAttribute('_show-duration', '-1'); // @deprecated in v2\n\t\tthis.toastElement.setAttribute('_has-closer', 'true');\n\t\tthis.toastElement._on = {\n\t\t\tonClose: () => {\n\t\t\t\tconst next = this.queue.values().next();\n\t\t\t\tif (next.value) {\n\t\t\t\t\tthis.queue.delete(next.value as Toast);\n\t\t\t\t\tsetTimeout(() => {\n\t\t\t\t\t\tthis.showToast(next.value as Toast);\n\t\t\t\t\t}, 200);\n\t\t\t\t} else {\n\t\t\t\t\tthis.isOpen = false;\n\t\t\t\t}\n\t\t\t},\n\t\t};\n\t\tthis.document.body.insertBefore(this.toastElement, this.document.body.firstChild);\n\t}\n\n\t/**\n\t * Get a toaster for the specified document environment. Each environment has exactly one instance of the service.\n\t */\n\tpublic static getInstance(document: Document) {\n\t\tlet instance = this.instances.get(document);\n\t\tif (!instance) {\n\t\t\tinstance = new ToasterService(document);\n\t\t\tthis.instances.set(document, instance);\n\t\t}\n\t\treturn instance;\n\t}\n\n\tpublic dispose() {\n\t\tconst element = this.toastElement;\n\t\tif (element) {\n\t\t\tthis.toastElement = undefined;\n\t\t\tthis.queue.clear();\n\t\t\telement.remove();\n\n\t\t\tconst on = element._on;\n\t\t\tif (on && on.onClose) {\n\t\t\t\ton.onClose(new Event('dispose'));\n\t\t\t}\n\t\t} else {\n\t\t\tconsole.warn('Toaster service is already disposed.');\n\t\t}\n\t}\n\n\t/**\n\t * Reiht einen neuen Toast in die Warteschlange ein, um ihn anzuzeigen.\n\t */\n\tpublic enqueue(data: Toast): void {\n\t\tif (this.isOpen) {\n\t\t\tthis.queue.add(data);\n\t\t} else {\n\t\t\tthis.showToast(data);\n\t\t}\n\t}\n\n\tprivate showToast(data: Toast): void {\n\t\tconst label = data.label || data.heading;\n\n\t\tif (typeof label === 'undefined') {\n\t\t\t// TODO v2: Make label required, remove this check.\n\t\t\tthrow new Error('Toast requires a label.');\n\t\t}\n\n\t\tif (!this.toastElement) {\n\t\t\tconsole.warn('Tried to show a new toast at a disposed toaster service!');\n\t\t\treturn;\n\t\t}\n\t\tthis.toastElement.setAttribute('_label', label);\n\t\tthis.toastElement.setAttribute('_show', 'true');\n\t\tthis.toastElement.setAttribute('_type', data.type);\n\t\tthis.toastElement.innerText = data.description;\n\t\tthis.isOpen = true;\n\t}\n}\n"],"version":3}</toast></document></document>