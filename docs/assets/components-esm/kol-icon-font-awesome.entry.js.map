{"file":"kol-icon-font-awesome.entry.js","mappings":";;;;;MAsBa,kBAAkB;;;;;;;;IACvB,MAAM;QACZ,QACC,gBACC,WAAW,EAAE,OAAO,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,GAAG,IAAI,IAAI,CAAC,KAAK,EAAE,GAAG,EAAE,EAAE,EAC5E,UAAU,EAAE,IAAI,CAAC,UAAU,EAC3B,KAAK,EAAE,OAAO,IAAI,CAAC,OAAO,KAAK,QAAQ,IAAI,OAAO,IAAI,CAAC,KAAK,KAAK,QAAQ,GAAG,GAAG,IAAI,CAAC,OAAO,OAAO,IAAI,CAAC,KAAK,EAAE,GAAI,SAA+B,GAChJ,EACD;KACF;;;;;","names":[],"sources":["src/components/icon-font-awesome/component.tsx"],"sourcesContent":["import type { Generic } from 'adopted-style-sheets';\nimport { Component, h, JSX, Prop } from '@stencil/core';\n\nimport { FontAwesome, FontAwesomeOssPrefix } from '../../enums/font-awesome';\nimport { PropAriaLabel } from '../../types/props/aria-label';\n\ntype RequiredProps = PropAriaLabel & {\n\ticon: FontAwesome;\n\tprefix: FontAwesomeOssPrefix;\n};\ntype OptionalProps = {\n\tpart: string;\n};\n// type Props = Generic.Element.Members<RequiredProps, OptionalProps>;\n\n/**\n * @deprecated Wir empfehlen die flexiblere KolIcon-Komponente zu verwenden.\n */\n@Component({\n\ttag: 'kol-icon-font-awesome',\n\tshadow: false,\n})\nexport class KolIconFontAwesome implements Generic.Element.Members<RequiredProps, OptionalProps> {\n\tpublic render(): JSX.Element {\n\t\treturn (\n\t\t\t<kol-icon\n\t\t\t\texportparts={`icon${typeof this._part === 'string' ? `,${this._part}` : ''}`}\n\t\t\t\t_ariaLabel={this._ariaLabel}\n\t\t\t\t_icon={typeof this._prefix === 'string' && typeof this._icon === 'string' ? `${this._prefix} fa-${this._icon}` : (undefined as unknown as string)}\n\t\t\t/>\n\t\t);\n\t}\n\n\t/**\n\t * Setzt die semantische Beschriftung der Komponente.\n\t */\n\t@Prop() public _ariaLabel!: string;\n\n\t/**\n\t * Gibt einen Identifier eines Font Awesome Icons an. (https://fontawesome.com/v5.15/icons)\n\t */\n\t@Prop() public _icon!: FontAwesome;\n\n\t/**\n\t * Gibt den Prefix der Font Awesome Icons an. (https://fontawesome.com/v5.15/how-to-use/on-the-web/referencing-icons/basic-use)\n\t */\n\t@Prop() public _prefix!: FontAwesomeOssPrefix;\n\n\t/**\n\t * Deprecated: Gibt den Identifier für den CSS-Part an, um das Icon von Außen ändern zu können. (https://meowni.ca/posts/part-theme-explainer/)\n\t *\n\t * @deprecated Das Styling sollte stets über CSS erfolgen.\n\t */\n\t@Prop() public _part?: string;\n}\n"],"version":3}