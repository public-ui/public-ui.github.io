{"file":"kol-drawer.entry.js","mappings":";;;;;;;;;;;AAeO,MAAM,aAAa,GAAG,CAAC,SAAoC,EAAE,KAAqB;IACxF,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC1C,CAAC;;ACjBD,MAAM,eAAe,GAAG,yrJAAyrJ,CAAC;AACltJ,+BAAe,eAAe;;MCgBjB,SAAS;;;QAkCb,kBAAa,GAAG,CAAC,EAA8B,MAAM,IAAI,CAAC,oBAAoB,GAAG,EAAoB,CAAC,CAAC;QAgBvG,WAAM,GAAG,CAAC,EAAiC,MAAM,IAAI,CAAC,aAAa,GAAG,EAAuB,CAAC,CAAC;;;;;;qBAqCjE;YACrC,MAAM,EAAE,EAAE;YACV,KAAK,EAAE,KAAK;YACZ,MAAM,EAAE,MAAM;SACd;;IApFD,MAAM,IAAI;;QACT,IAAI,CAAC,KAAK,mCACN,IAAI,CAAC,KAAK,KACb,KAAK,EAAE,IAAI,GACX,CAAC;QACF,IAAI,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE;YACtB,MAAA,IAAI,CAAC,aAAa,0CAAE,SAAS,EAAE,CAAC;SAChC;aAAM;YACN,MAAA,IAAI,CAAC,aAAa,0CAAE,IAAI,EAAE,CAAC;SAC3B;KACD;IAID,MAAM,KAAK;QACV,IAAI,CAAC,KAAK,mCACN,IAAI,CAAC,KAAK,KACb,KAAK,EAAE,KAAK,GACZ,CAAC;QACF,MAAM,OAAO,GAAG,IAAI,CAAC,oBAAoB,CAAC;QAC1C,IAAI,CAAC,OAAO;YAAE,OAAO;QACrB,MAAM,aAAa,GAAG,MAAM,CAAC,gBAAgB,CAAC,OAAO,CAAC,CAAC;QACvD,IAAI,aAAa,CAAC,aAAa,KAAK,MAAM,EAAE;YAC3C,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACzB;KACD;IAGO,mBAAmB;QAC1B,MAAM,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,MAAgB,CAAC;QAC1C,QACC,WACC,GAAG,EAAE,IAAI,CAAC,aAAa,EACvB,KAAK,EAAE,oCAAoC,KAAK,IAAI,IAAI,CAAC,KAAK,CAAC,KAAK,GAAG,uBAAuB,GAAG,YAAY,EAAE,gBACnG,IAAI,CAAC,KAAK,CAAC,MAAM,IAE7B,WAAK,KAAK,EAAC,iBAAiB,IAC3B,eAAQ,CACH,CACD,EACL;KACF;IAGM,MAAM;QACZ,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QAClC,QACC,EAAC,IAAI,qDAAC,KAAK,EAAE,qBAAqB,OAAO,GAAG,eAAe,GAAG,EAAE,EAAE,EAAE,GAAG,EAAE,CAAC,EAAE,MAAM,IAAI,CAAC,WAAW,GAAG,EAAiB,CAAC,IACtH,+DAAQ,KAAK,EAAC,gBAAgB,EAAC,GAAG,EAAE,IAAI,CAAC,MAAM,IAC7C,IAAI,CAAC,mBAAmB,EAAE,CACnB,CACH,EACN;KACF;IAkCM,aAAa,CAAC,KAAqB;QACzC,aAAa,CAAC,IAAI,EAAE,KAAK,EAAE;YAC1B,QAAQ,EAAE,IAAI;SACd,CAAC,CAAC;KACH;IAGM,aAAa,CAAC,KAAqB;QACzC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC3B;IAGM,aAAa,CAAC,KAAqB;QACzC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;KAC3B;IAGM,MAAM,YAAY,CAAC,KAAoB;QAC7C,IAAI,OAAO,KAAK,KAAK,SAAS,EAAE;YAC/B,YAAY,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAC1B,KAAK,GAAG,MAAM,IAAI,CAAC,IAAI,EAAE,GAAG,MAAM,IAAI,CAAC,KAAK,EAAE,CAAC;SAC/C;KACD;IAGM,UAAU,CAAC,KAAkC;QACnD,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,EAAE;YAChD,MAAM,SAAS,GAA+B,EAAE,CAAC;YACjD,IAAI,OAAO,KAAK,CAAC,OAAO,KAAK,UAAU,EAAE;gBACxC,SAAS,CAAC,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC;aAClC;YACD,QAAQ,CAA6B,IAAI,EAAE,KAAK,EAAE,SAAS,CAAC,CAAC;SAC7D;KACD;IAEO,iBAAiB;;QACxB,MAAA,IAAI,CAAC,aAAa,0CAAE,KAAK,EAAE,CAAC;QAC5B,MAAA,MAAA,IAAI,CAAC,GAAG,0CAAE,OAAO,kDAAI,CAAC;KACtB;IAEO,WAAW;KAKlB;IAEO,kBAAkB,CAAC,CAAQ;QAClC,MAAM,cAAc,GAAG,CAAmB,CAAC;QAC3C,IAAI,cAAc,CAAC,aAAa,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;YACtD,IAAI,CAAC,iBAAiB,EAAE,CAAC;SACzB;KACD;IAEM,gBAAgB;;QACtB,MAAA,IAAI,CAAC,aAAa,0CAAE,gBAAgB,CAAC,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QACzF,MAAA,IAAI,CAAC,aAAa,0CAAE,gBAAgB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC3E;IAEM,oBAAoB;;QAC1B,MAAA,IAAI,CAAC,aAAa,0CAAE,mBAAmB,CAAC,cAAc,EAAE,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAC5F,MAAA,IAAI,CAAC,aAAa,0CAAE,mBAAmB,CAAC,OAAO,EAAE,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;KAC9E;IAEM,MAAM,iBAAiB;QAC7B,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,MAAM,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;QAChC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;KAC1B;;;;;;;;;;;;;;;","names":[],"sources":["src/schema/props/modal.ts","src/components/drawer/style.scss?tag=kol-drawer&mode=default&encapsulation=shadow","src/components/drawer/shadow.tsx"],"sourcesContent":["import type { Generic } from 'adopted-style-sheets';\n\nimport { watchBoolean } from '../utils';\n\n/* types */\nexport type ModalPropType = boolean;\n\n/**\n * Controls if a dialog is a modal.\n */\nexport type PropModal = {\n\tmodal: ModalPropType;\n};\n\n/* validator */\nexport const validateModal = (component: Generic.Element.Component, value?: ModalPropType): void => {\n\twatchBoolean(component, '_modal', value);\n};\n","@import '../@shared/mixins';\n@import '../style';\n\n@layer kol-component {\n\t.drawer {\n\t\t&__dialog {\n\t\t\tpadding: 0;\n\t\t\tborder: none;\n\t\t}\n\n\t\t&__wrapper {\n\t\t\tposition: fixed;\n\t\t\twidth: auto;\n\t\t\toverflow: auto;\n\t\t\tbackground: white;\n\n\t\t\t&--left {\n\t\t\t\ttop: 0;\n\t\t\t\tleft: 0;\n\t\t\t\theight: 100vh;\n\t\t\t\tmax-height: 100%;\n\t\t\t}\n\n\t\t\t&--right {\n\t\t\t\ttop: 0;\n\t\t\t\tright: 0;\n\t\t\t\theight: 100vh;\n\t\t\t\tmax-height: 100%;\n\t\t\t}\n\n\t\t\t&--top {\n\t\t\t\tleft: 0;\n\t\t\t\ttop: 0;\n\t\t\t\twidth: 100vw;\n\t\t\t\tmax-width: 100%;\n\t\t\t}\n\n\t\t\t&--bottom {\n\t\t\t\tleft: 0;\n\t\t\t\tbottom: 0;\n\t\t\t\twidth: 100vw;\n\t\t\t\tmax-width: 100%;\n\t\t\t}\n\t\t}\n\n\t\t&__content {\n\t\t\tposition: relative;\n\t\t\tpadding: rem(16);\n\t\t}\n\t}\n}\n","/* eslint-disable jsx-a11y/no-noninteractive-element-interactions */\nimport type { KoliBriModalEventCallbacks, LabelPropType, DrawerAPI, AlignPropType, OpenPropType, ModalPropType, DrawerStates } from '../../schema';\nimport { setState, validateLabel, validateOpen, validateAlign, validateModal } from '../../schema';\nimport { Component, Host, Method, Prop, State, Watch, h } from '@stencil/core';\n\nimport type { JSX } from '@stencil/core';\n\n/**\n * @slot - The Content of drawer.\n */\n@Component({\n\ttag: 'kol-drawer',\n\tstyleUrls: {\n\t\tdefault: './style.scss',\n\t},\n\tshadow: true,\n})\nexport class KolDrawer implements DrawerAPI {\n\tpublic hostElement?: HTMLElement;\n\tprivate dialogElement?: HTMLDialogElement;\n\tprivate dialogWrapperElement?: HTMLDivElement;\n\n\t@Method()\n\t// eslint-disable-next-line @typescript-eslint/require-await\n\tasync open() {\n\t\tthis.state = {\n\t\t\t...this.state,\n\t\t\t_open: true,\n\t\t};\n\t\tif (this.state._modal) {\n\t\t\tthis.dialogElement?.showModal();\n\t\t} else {\n\t\t\tthis.dialogElement?.show();\n\t\t}\n\t}\n\n\t@Method()\n\t// eslint-disable-next-line @typescript-eslint/require-await\n\tasync close() {\n\t\tthis.state = {\n\t\t\t...this.state,\n\t\t\t_open: false,\n\t\t};\n\t\tconst wrapper = this.dialogWrapperElement;\n\t\tif (!wrapper) return;\n\t\tconst computedStyle = window.getComputedStyle(wrapper);\n\t\tif (computedStyle.animationName === 'none') {\n\t\t\tthis.handleCloseDialog();\n\t\t}\n\t}\n\n\tprivate getWrapperRef = (el: HTMLDivElement | undefined) => (this.dialogWrapperElement = el as HTMLDivElement);\n\tprivate renderDialogContent() {\n\t\tconst align = this.state._align as string;\n\t\treturn (\n\t\t\t<div\n\t\t\t\tref={this.getWrapperRef}\n\t\t\t\tclass={`drawer__wrapper drawer__wrapper--${align} ${this.state._open ? 'drawer__wrapper--open' : 'is-closing'}`}\n\t\t\t\taria-label={this.state._label}\n\t\t\t>\n\t\t\t\t<div class=\"drawer__content\">\n\t\t\t\t\t<slot />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t);\n\t}\n\n\tprivate getRef = (el: HTMLDialogElement | undefined) => (this.dialogElement = el as HTMLDialogElement);\n\tpublic render(): JSX.Element {\n\t\tconst isModal = this.state._modal;\n\t\treturn (\n\t\t\t<Host class={`kol-drawer drawer ${isModal ? 'drawer--modal' : ''}`} ref={(el) => (this.hostElement = el as HTMLElement)}>\n\t\t\t\t<dialog class=\"drawer__dialog\" ref={this.getRef}>\n\t\t\t\t\t{this.renderDialogContent()}\n\t\t\t\t</dialog>\n\t\t\t</Host>\n\t\t);\n\t}\n\n\t/**\n\t * Specifies the default open state of the drawer.\n\t */\n\t@Prop() public _open?: OpenPropType;\n\n\t/**\n\t * Specifies the orientation of the drawer.\n\t */\n\t@Prop() public _align?: AlignPropType;\n\n\t/**\n\t * Defines the visible or semantic label of the component (e.g. aria-label, label, headline, caption, summary, etc.).\n\t */\n\t@Prop() public _label!: LabelPropType;\n\n\t/**\n\t * Indicates whether the drawer is a modal.\n\t */\n\t@Prop() public _modal?: ModalPropType;\n\n\t/**\n\t * Specifies the EventCallback function to be called when the drawer is closing.\n\t */\n\t@Prop() public _on?: KoliBriModalEventCallbacks;\n\n\t@State() public state: DrawerStates = {\n\t\t_label: '', // âš  required\n\t\t_open: false,\n\t\t_align: 'left',\n\t};\n\n\t@Watch('_label')\n\tpublic validateLabel(value?: LabelPropType): void {\n\t\tvalidateLabel(this, value, {\n\t\t\trequired: true,\n\t\t});\n\t}\n\n\t@Watch('_align')\n\tpublic validateAlign(value?: AlignPropType): void {\n\t\tvalidateAlign(this, value);\n\t}\n\n\t@Watch('_modal')\n\tpublic validateModal(value?: ModalPropType): void {\n\t\tvalidateModal(this, value);\n\t}\n\n\t@Watch('_open')\n\tpublic async validateOpen(value?: OpenPropType): Promise<void> {\n\t\tif (typeof value === 'boolean') {\n\t\t\tvalidateOpen(this, value);\n\t\t\tvalue ? await this.open() : await this.close();\n\t\t}\n\t}\n\n\t@Watch('_on')\n\tpublic validateOn(value?: KoliBriModalEventCallbacks): void {\n\t\tif (typeof value === 'object' && value !== null) {\n\t\t\tconst callbacks: KoliBriModalEventCallbacks = {};\n\t\t\tif (typeof value.onClose === 'function') {\n\t\t\t\tcallbacks.onClose = value.onClose;\n\t\t\t}\n\t\t\tsetState<KoliBriModalEventCallbacks>(this, '_on', callbacks);\n\t\t}\n\t}\n\n\tprivate handleCloseDialog() {\n\t\tthis.dialogElement?.close();\n\t\tthis._on?.onClose?.();\n\t}\n\n\tprivate handleClose(): void {\n\t\tasync () => {\n\t\t\tawait this.close();\n\t\t\tthis.handleCloseDialog();\n\t\t};\n\t}\n\n\tprivate handleAnimationEnd(e: Event): void {\n\t\tconst animationEvent = e as AnimationEvent;\n\t\tif (animationEvent.animationName.includes('slideOut')) {\n\t\t\tthis.handleCloseDialog();\n\t\t}\n\t}\n\n\tpublic componentDidLoad(): void {\n\t\tthis.dialogElement?.addEventListener('animationend', this.handleAnimationEnd.bind(this));\n\t\tthis.dialogElement?.addEventListener('close', this.handleClose.bind(this));\n\t}\n\n\tpublic disconnectedCallback(): void {\n\t\tthis.dialogElement?.removeEventListener('animationend', this.handleAnimationEnd.bind(this));\n\t\tthis.dialogElement?.removeEventListener('close', this.handleClose.bind(this));\n\t}\n\n\tpublic async componentWillLoad(): Promise<void> {\n\t\tthis.validateLabel(this._label);\n\t\tawait this.validateOpen(this._open);\n\t\tthis.validateAlign(this._align);\n\t\tthis.validateModal(this._modal);\n\t\tthis.validateOn(this._on);\n\t}\n}\n"],"version":3}