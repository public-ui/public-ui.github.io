{"file":"icons-05788852.js","mappings":";;;;;;AAsBA,MAAM,aAAa,GAAG,CAAC,KAAwB,EAAE,SAAwB,EAAE,IAA2C;IACrH,IAAI,QAAQ,CAAC,IAAI,CAAC,EAAE;QACnB,KAAK,CAAC,SAAS,CAAC,GAAG,IAAyB,CAAC;KAC7C;SAAM,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;QAC7B,KAAK,CAAC,SAAS,CAAC,GAAG;YAClB,IAAI,EAAE,IAAwB;SAC9B,CAAC;KACF;AACF,CAAC,CAAC;AAEK,MAAM,iBAAiB,GAAG,CAAC,IAAsB;IACvD,IAAI,KAAK,GAAsB,EAAE,CAAC;IAClC,IAAI,QAAQ,CAAC,IAAI,EAAE,CAAC,CAAC,EAAE;QACtB,KAAK,GAAG;YACP,IAAI,EAAE;gBACL,IAAI,EAAE,IAAwB;aAC9B;SACD,CAAC;KACF;SAAM,IAAI,OAAO,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,IAAI,EAAE;QACrD,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;QACtC,aAAa,CAAC,KAAK,EAAE,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,CAAC;QAC1C,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,IAAI,CAAC,MAAM,CAAC,CAAC;QAC5C,aAAa,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC;KACxC;IACD,OAAO,KAAK,CAAC;AACd,CAAC,CAAC;AAEF,MAAM,eAAe,GAAG,CAAC,SAAoC;;IAC5D,IAAI,MAAA,SAAS,CAAC,SAAS,0CAAE,GAAG,CAAC,QAAQ,CAAC,EAAE;QACvC,MAAM,KAAK,GAAG,MAAA,SAAS,CAAC,SAAS,0CAAE,GAAG,CAAC,QAAQ,CAAqB,CAAC;QACrE,MAAA,SAAS,CAAC,SAAS,0CAAE,GAAG,CAAC,QAAQ,EAAE,iBAAiB,CAAC,KAAK,CAAC,CAAC,CAAC;KAC7D;AACF,CAAC,CAAC;MAEW,MAAM,GAAG,CAAC,KAAe,KACrC,OAAO,KAAK,KAAK,QAAQ;IACzB,KAAK,KAAK,IAAI;KACb,OAAQ,KAA2B,CAAC,KAAK,KAAK,WAAW,IAAI,OAAO,CAAE,KAA2B,CAAC,KAAK,CAAC,CAAC;KACzG,OAAQ,KAA2B,CAAC,KAAK,KAAK,WAAW,IAAI,QAAQ,CAAE,KAA2B,CAAC,KAAK,CAAC,CAAC;IAC3G,QAAQ,CAAE,KAA2B,CAAC,IAAI,EAAE,CAAC,EAAE;MAEnC,aAAa,GAAG,CAAC,SAAoC,EAAE,KAAqB,EAAE,UAAwB,EAAE;IACpH,mBAAmB,CAAC,KAAK,EAAE;;QAC1B,IAAI;YACH,KAAK,GAAG,SAAS,CAAmB,KAAe,CAAC,CAAC;SACrD;QAAC,OAAO,CAAC,EAAE;SAEX;QACD,cAAc,CACb,SAAS,EACT,QAAQ,EACR,CAAC,KAAK;YACL,MAAM,kBAAkB,GAAG,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,IAAI,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC;YAC1G,QACC,KAAK,KAAK,IAAI;gBACd,kBAAkB;gBAClB,QAAQ,CAAC,KAAK,EAAE,CAAC,CAAC;iBACjB,OAAO,KAAK,KAAK,QAAQ;oBACzB,KAAK,KAAK,IAAI;qBACb,QAAQ,CAAC,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;wBACvB,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC;wBAClB,QAAQ,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC,CAAC;wBACxB,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC;wBACnB,QAAQ,CAAC,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;wBACtB,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC;wBACjB,QAAQ,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC,CAAC;wBACzB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC,CAAC,EACvB;SACF,EACD,IAAI,GAAG,CAAC,CAAC,aAAa,CAAC,CAAC,EACxB,KAAK,kCAED,OAAO,KACV,YAAY,EAAE,EAAE,EAChB,KAAK,EAAE;gBACN,UAAU,EAAE,MAAA,OAAO,CAAC,KAAK,0CAAE,UAAU;gBACrC,WAAW,EAAE,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG;;oBACjD,IAAI,QAAO,MAAA,OAAO,CAAC,KAAK,0CAAE,WAAW,CAAA,KAAK,UAAU,EAAE;wBACrD,MAAA,OAAO,CAAC,KAAK,0CAAE,WAAW,CAAC,SAAS,EAAE,SAAS,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;qBACjE;oBACD,eAAe,CAAC,SAAS,CAAC,CAAC;iBAC3B;aACD,IAEF,CAAC;KACF,CAAC,CAAC;AACJ;;;;","names":[],"sources":["src/schema/props/icons.ts"],"sourcesContent":["import type { Generic } from 'adopted-style-sheets';\n\nimport type { AnyIconFontClass, KoliBriCustomIcon, KoliBriIconsProp, KoliBriIconsState } from '../types';\nimport type { Stringified } from '../types/common';\nimport type { WatchOptions } from '../utils';\nimport { objectObjectHandler, parseJson, watchValidator } from '../utils';\nimport { isObject, isString, isStyle } from '../validators';\n\nimport type { AlignPropType } from './align';\n\n/* types */\nexport type IconsPropType = Stringified<kolibriiconsprop>;\n\n/**\n * Defines the icon classnames.\n */\nexport type PropIcons = {\n\ticons: IconsPropType;\n};\n\n/* validator */\n\nconst mapCustomIcon = (state: KoliBriIconsState, alignment: AlignPropType, icon?: AnyIconFontClass | KoliBriCustomIcon) => {\n\tif (isObject(icon)) {\n\t\tstate[alignment] = icon as KoliBriCustomIcon;\n\t} else if (isString(icon, 1)) {\n\t\tstate[alignment] = {\n\t\t\ticon: icon as AnyIconFontClass,\n\t\t};\n\t}\n};\n\nexport const mapIconProp2State = (icon: KoliBriIconsProp): KoliBriIconsState => {\n\tlet state: KoliBriIconsState = {};\n\tif (isString(icon, 1)) {\n\t\tstate = {\n\t\t\tleft: {\n\t\t\t\ticon: icon as AnyIconFontClass,\n\t\t\t},\n\t\t};\n\t} else if (typeof icon === 'object' && icon !== null) {\n\t\tmapCustomIcon(state, 'top', icon.top);\n\t\tmapCustomIcon(state, 'right', icon.right);\n\t\tmapCustomIcon(state, 'bottom', icon.bottom);\n\t\tmapCustomIcon(state, 'left', icon.left);\n\t}\n\treturn state;\n};\n\nconst beforePatchIcon = (component: Generic.Element.Component): void => {\n\tif (component.nextState?.has('_icons')) {\n\t\tconst icons = component.nextState?.get('_icons') as KoliBriIconsProp;\n\t\tcomponent.nextState?.set('_icons', mapIconProp2State(icons));\n\t}\n};\n\nexport const isIcon = (value?: unknown): boolean =>\n\ttypeof value === 'object' &&\n\tvalue !== null &&\n\t(typeof (value as KoliBriCustomIcon).style === 'undefined' || isStyle((value as KoliBriCustomIcon).style)) &&\n\t(typeof (value as KoliBriCustomIcon).label === 'undefined' || isString((value as KoliBriCustomIcon).label)) &&\n\tisString((value as KoliBriCustomIcon).icon, 1);\n\nexport const validateIcons = (component: Generic.Element.Component, value?: IconsPropType, options: WatchOptions = {}): void => {\n\tobjectObjectHandler(value, () => {\n\t\ttry {\n\t\t\tvalue = parseJson<kolibriiconsprop>(value as string);\n\t\t} catch (e) {\n\t\t\t// value behält den ursprünglichen Wert\n\t\t}\n\t\twatchValidator(\n\t\t\tcomponent,\n\t\t\t'_icons',\n\t\t\t(value): boolean => {\n\t\t\t\tconst valueIsEmptyObject = typeof value === 'object' && value !== null && Object.keys(value).length === 0;\n\t\t\t\treturn (\n\t\t\t\t\tvalue === null ||\n\t\t\t\t\tvalueIsEmptyObject ||\n\t\t\t\t\tisString(value, 1) ||\n\t\t\t\t\t(typeof value === 'object' &&\n\t\t\t\t\t\tvalue !== null &&\n\t\t\t\t\t\t(isString(value.left, 1) ||\n\t\t\t\t\t\t\tisIcon(value.left) ||\n\t\t\t\t\t\t\tisString(value.right, 1) ||\n\t\t\t\t\t\t\tisIcon(value.right) ||\n\t\t\t\t\t\t\tisString(value.top, 1) ||\n\t\t\t\t\t\t\tisIcon(value.top) ||\n\t\t\t\t\t\t\tisString(value.bottom, 1) ||\n\t\t\t\t\t\t\tisIcon(value.bottom)))\n\t\t\t\t);\n\t\t\t},\n\t\t\tnew Set(['KoliBriIcon']),\n\t\t\tvalue,\n\t\t\t{\n\t\t\t\t...options,\n\t\t\t\tdefaultValue: {},\n\t\t\t\thooks: {\n\t\t\t\t\tafterPatch: options.hooks?.afterPatch,\n\t\t\t\t\tbeforePatch: (nextValue, nextState, component, key) => {\n\t\t\t\t\t\tif (typeof options.hooks?.beforePatch === 'function') {\n\t\t\t\t\t\t\toptions.hooks?.beforePatch(nextValue, nextState, component, key);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbeforePatchIcon(component);\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t},\n\t\t);\n\t});\n};\n"],"version":3}</kolibriiconsprop></kolibriiconsprop>