"use strict";(self.webpackChunkroot=self.webpackChunkroot||[]).push([[28700],{86576:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var i=t(2488),o=t(16592);const s={title:"Translations",authors:"deleonio",tags:["website","seo","spec"]},l=void 0,a={permalink:"/en/blog/2023/01/04/",source:"@site/i18n/en/docusaurus-plugin-content-blog/2023-01-04.mdx",title:"Translations",description:"As an open source project, it is important for KoliBri to have a community around",date:"2023-01-04T00:00:00.000Z",tags:[{label:"website",permalink:"/en/blog/tags/website"},{label:"seo",permalink:"/en/blog/tags/seo"},{label:"spec",permalink:"/en/blog/tags/spec"}],readingTime:.785,hasTruncateMarker:!1,authors:[{name:"Martin Oppitz",title:"Architekt@ITZBund & Creator of KoliBri",url:"https://github.com/deleonio",imageURL:"https://avatars.githubusercontent.com/u/6279703",key:"deleonio"}],frontMatter:{title:"Translations",authors:"deleonio",tags:["website","seo","spec"]},unlisted:!1,prevItem:{title:"Button and link components",permalink:"/en/blog/2023/01/09/"}},r={authorsImageUrls:[void 0]},c=[{value:"Todo",id:"todo",level:2},{value:"English specification",id:"english-specification",level:3},{value:"Multilinguale Dokumentation",id:"multilinguale-dokumentation",level:3}];function u(e){const n={h2:"h2",h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.M)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["As an open source project, it is important for KoliBri to have a community around\nto build up the topic of accessible basic components. So for this too\noptimal accessibility is given, all technical\nSpecifications must be available in at least ",(0,i.jsx)(n.strong,{children:"English"}),". As in the\nScience allows for feedback and participation from all potential\nareas."]}),"\n",(0,i.jsx)(n.h2,{id:"todo",children:"Todo"}),"\n",(0,i.jsx)(n.h3,{id:"english-specification",children:"English specification"}),"\n",(0,i.jsxs)(n.p,{children:["The technical specification is automatically generated from the source code\nand synchronized. All the information we put from the source code into the\nTransfer specification, will in future only be in ",(0,i.jsx)(n.strong,{children:"English"}),"\nprovided."]}),"\n",(0,i.jsx)(n.p,{children:"This concerns, for example:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"API specification on the website"}),"\n",(0,i.jsx)(n.li,{children:"Details in IDE autocompletion"}),"\n",(0,i.jsx)(n.li,{children:"Representations generated from the meta data of the source code"}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"multilinguale-dokumentation",children:"Multilinguale Dokumentation"}),"\n",(0,i.jsxs)(n.p,{children:["In the future (in the medium term), the documentation will primarily include all content in\n",(0,i.jsx)(n.strong,{children:"German"})," and secondary in ",(0,i.jsx)(n.strong,{children:"English"})," provided."]}),"\n",(0,i.jsx)(n.p,{children:"This concerns, for example:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Instructions, concepts, examples and much more."}),"\n",(0,i.jsx)(n.li,{children:"Blog posts"}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,o.M)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},16592:(e,n,t)=>{t.d(n,{I:()=>a,M:()=>l});var i=t(96651);const o={},s=i.createContext(o);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:l(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);